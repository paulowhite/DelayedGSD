#+TITLE: Results simulation study DelayedGSD
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
# Path
if(Sys.info()["login"] == "bozenne"){
}else if(Sys.info()["login"] == "hpl802"){
  setwd("x:/DelayedGSD/")
}

options(width = 110)

library(data.table)
library(ggplot2)
#+END_SRC

#+RESULTS:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res2stage <- readRDS(file.path("Results-built","res2stage.rds"))
res2stage[, method.char := paste0("method ",method)]
res2stage[, stage.char := factor(stage, 1:2, c("interim","final"))]
res2stage[, truth := ifelse(hypo=="power",0.6,0)]
#+END_SRC

#+RESULTS:

* Rejection rate

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res2stage.rejection <- res2stage[,.(N = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res2stageS.rejection <- res2stage.rejection[,.(N = .N, rejectionRate = 100*mean(rejection)),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH1 <- dcast(res2stageS.rejection[hypo=="power"],
                      scenario + N + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(tablePrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10    81.00    80.79    80.45
        3 10000    TRUE    TRUE FALSE  5    80.60    80.45    80.21
        5 10000    TRUE    TRUE  TRUE 10    79.81    80.41    80.39
        7 10000    TRUE    TRUE  TRUE  5    80.00    80.46    80.08
        9 10000    TRUE   FALSE  TRUE 10    80.50    80.85    80.91
       11 10000    TRUE   FALSE  TRUE  5    80.73    80.82    80.75
       13 10000    TRUE   FALSE FALSE 10    80.67    80.60    80.65
       15 10000    TRUE   FALSE FALSE  5    80.65    80.64    80.46
       17 10000   FALSE    TRUE FALSE  5    80.31    80.28    79.93
#+end_example
\Warning slightly too high power for some scenario

\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH0 <- dcast(res2stageS.rejection[hypo=="typeI"],
                    scenario + N + missing + binding + fixC + ar ~ method.char,
                    value.var = "rejectionRate")
print(tablePrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10     2.46     2.53     2.40
        4 10000    TRUE    TRUE FALSE  5     2.42     2.41     2.40
        6 10000    TRUE    TRUE  TRUE 10     2.25     2.25     2.45
        8 10000    TRUE    TRUE  TRUE  5     2.42     2.39     2.50
       10 10000    TRUE   FALSE  TRUE 10     2.16     2.18     2.31
       12 10000    TRUE   FALSE  TRUE  5     2.36     2.35     2.38
       14 10000    TRUE   FALSE FALSE 10     2.44     2.44     2.58
       16 10000    TRUE   FALSE FALSE  5     2.51     2.50     2.58
       18 10000   FALSE    TRUE FALSE  5     2.46     2.44     2.45
#+end_example
Type 1 error slightly below nominal level when fixC is TRUE (as expected?)

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the p-value:
gg.P <- ggplot(res2stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P <- gg.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P <- gg.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P, filename = file.path("report","figures","gg-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.P2 <- ggplot(res2stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P2 <- gg.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P2 <- gg.P2 + coord_cartesian(xlim = c(0,0.05))
gg.P2 <- gg.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P2, filename = file.path("report","figures","gg-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg-pvalue2-density.pdf]]

\clearpage

* Conclusion of the trial

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stageS.final <- res2stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                decision.eff = 100*mean((stage == 1)*(decision == "efficacy")),
                                decision.fut = 100*mean((stage == 1)*(decision == "futility")),
                                final.eff = 100*mean((stage == 2)*(decision == "efficacy")),
                                final.fut = 100*mean((stage == 2)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.82         6.05     43.18      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.79        70.85      1.67      26.7
 3: 10000    TRUE power    TRUE FALSE  5        35.60         6.02     45.00      13.4
 4: 10000    TRUE typeI    TRUE FALSE  5         0.68        69.21      1.74      28.4
 5: 10000    TRUE power    TRUE  TRUE 10        36.45         6.53     43.36      13.7
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.64        71.29      1.61      26.5
 7: 10000    TRUE power    TRUE  TRUE  5        34.68         5.86     45.32      14.1
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.72        69.11      1.70      28.5
 9: 10000    TRUE power   FALSE  TRUE 10        37.57         6.63     42.93      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.57         0.28      1.59      97.6
11: 10000    TRUE power   FALSE  TRUE  5        36.02         6.28     44.71      13.0
12: 10000    TRUE typeI   FALSE  TRUE  5         0.73         0.09      1.63      97.5
13: 10000    TRUE power   FALSE FALSE 10        38.32         5.87     42.35      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.09      1.75      97.5
15: 10000    TRUE power   FALSE FALSE  5        36.75         5.70     43.90      13.6
16: 10000    TRUE typeI   FALSE FALSE  5         0.67         0.00      1.84      97.5
17: 10000   FALSE power    TRUE FALSE  5        33.98         5.33     46.33      14.4
18: 10000   FALSE typeI    TRUE FALSE  5         0.74        67.48      1.72      30.1
#+end_example

\clearpage

Method 2:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.66         6.22     43.13      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.85        71.18      1.68      26.3
 3: 10000    TRUE power    TRUE FALSE  5        35.55         6.10     44.90      13.5
 4: 10000    TRUE typeI    TRUE FALSE  5         0.67        69.05      1.74      28.5
 5: 10000    TRUE power    TRUE  TRUE 10        36.82         5.94     43.59      13.6
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.63        70.02      1.62      27.7
 7: 10000    TRUE power    TRUE  TRUE  5        35.06         5.63     45.40      13.9
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.71        68.46      1.68      29.1
 9: 10000    TRUE power   FALSE  TRUE 10        37.76         6.21     43.09      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.56         0.26      1.62      97.6
11: 10000    TRUE power   FALSE  TRUE  5        36.07         6.10     44.75      13.1
12: 10000    TRUE typeI   FALSE  TRUE  5         0.72         0.07      1.63      97.6
13: 10000    TRUE power   FALSE FALSE 10        38.33         6.11     42.27      13.3
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.09      1.75      97.5
15: 10000    TRUE power   FALSE FALSE  5        36.78         5.72     43.86      13.6
16: 10000    TRUE typeI   FALSE FALSE  5         0.66         0.01      1.84      97.5
17: 10000   FALSE power    TRUE FALSE  5        33.68         5.17     46.60      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.72        67.42      1.72      30.1
#+end_example

\clearpage

Method 3:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC
#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        40.44         6.54     40.01      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.74        68.77      1.66      28.8
 3: 10000    TRUE power    TRUE FALSE  5        36.49         6.42     43.72      13.4
 4: 10000    TRUE typeI    TRUE FALSE  5         0.68        68.37      1.72      29.2
 5: 10000    TRUE power    TRUE  TRUE 10        39.85         5.83     40.54      13.8
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.73        68.89      1.72      28.7
 7: 10000    TRUE power    TRUE  TRUE  5        35.70         5.81     44.38      14.1
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.78        68.26      1.72      29.2
 9: 10000    TRUE power   FALSE  TRUE 10        41.03         6.39     39.88      12.7
10: 10000    TRUE typeI   FALSE  TRUE 10         0.72         0.38      1.59      97.3
11: 10000    TRUE power   FALSE  TRUE  5        37.08         6.14     43.67      13.1
12: 10000    TRUE typeI   FALSE  TRUE  5         0.74         0.14      1.64      97.5
13: 10000    TRUE power   FALSE FALSE 10        41.47         6.05     39.18      13.3
14: 10000    TRUE typeI   FALSE FALSE 10         0.81         0.31      1.77      97.1
15: 10000    TRUE power   FALSE FALSE  5        37.37         5.86     43.09      13.7
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.08      1.83      97.3
17: 10000   FALSE power    TRUE FALSE  5        34.66         5.58     45.27      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.68        66.54      1.77      31.0
#+end_example

\clearpage

* Bias (True effect: 0.6 under the alternative)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
true_eff <- 0.6

## For each run, error made by each estimator
res2stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res2stage.bias <- res2stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res2stage.bias$N==1)

res2stageS.bias <- res2stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar  biasMLE1  biasMLE2  biasMLE3  biasMUE1  biasMUE2  biasMUE3
 1: power    TRUE    TRUE FALSE 10  0.012970  0.013058  0.014139  5.47e-03  5.56e-03  0.001778
 2: typeI    TRUE    TRUE FALSE 10 -0.018416 -0.018430 -0.018509 -4.26e-03 -4.33e-03 -0.004919
 3: power    TRUE    TRUE FALSE  5  0.022430  0.022231  0.023386  1.01e-02  1.02e-02  0.008425
 4: typeI    TRUE    TRUE FALSE  5 -0.030419 -0.030822 -0.030577 -1.18e-02 -1.21e-02 -0.012275
 5: power    TRUE    TRUE  TRUE 10  0.011558  0.012119  0.012968 -1.55e-04  8.16e-04  0.001723
 6: typeI    TRUE    TRUE  TRUE 10 -0.022074 -0.022256 -0.022266 -9.04e-03 -9.08e-03 -0.008580
 7: power    TRUE    TRUE  TRUE  5  0.021638  0.022029  0.022692  7.84e-03  8.10e-03  0.008201
 8: typeI    TRUE    TRUE  TRUE  5 -0.033857 -0.034379 -0.034138 -1.50e-02 -1.51e-02 -0.015168
 9: power    TRUE   FALSE  TRUE 10  0.015026  0.015050  0.016312 -7.62e-04 -4.88e-04  0.000843
10: typeI    TRUE   FALSE  TRUE 10  0.000543  0.000547  0.000883 -6.54e-05 -1.08e-06  0.001751
11: power    TRUE   FALSE  TRUE  5  0.024204  0.024192  0.025190  6.44e-03  5.95e-03  0.007381
12: typeI    TRUE   FALSE  TRUE  5  0.001472  0.001451  0.001545  1.17e-03  1.21e-03  0.001552
13: power    TRUE   FALSE FALSE 10  0.014415  0.014146  0.015747  3.10e-03  2.68e-03  0.002008
14: typeI    TRUE   FALSE FALSE 10  0.000139  0.000139  0.000555 -1.53e-05 -2.18e-05  0.001472
15: power    TRUE   FALSE FALSE  5  0.023380  0.023344  0.024346  8.80e-03  8.79e-03  0.007463
16: typeI    TRUE   FALSE FALSE  5  0.000602  0.000602  0.000949  5.40e-04  5.00e-04  0.001079
17: power   FALSE    TRUE FALSE  5  0.022836  0.022825  0.023807  1.20e-02  1.21e-02  0.010058
18: typeI   FALSE    TRUE FALSE  5 -0.029516 -0.029722 -0.029915 -1.10e-02 -1.14e-02 -0.011615
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0250    0.0240    0.0266   -0.0023   -0.0017   -0.0062
 2: typeI    TRUE    TRUE FALSE 10   -0.0193   -0.0198   -0.0223    0.0002   -0.0013    0.0001
 3: power    TRUE    TRUE FALSE  5    0.0387    0.0382    0.0406   -0.0030   -0.0016   -0.0026
 4: typeI    TRUE    TRUE FALSE  5   -0.0346   -0.0339   -0.0361    0.0000   -0.0002    0.0001
 5: power    TRUE    TRUE  TRUE 10    0.0164    0.0188    0.0179   -0.0134   -0.0128   -0.0102
 6: typeI    TRUE    TRUE  TRUE 10   -0.0327   -0.0314   -0.0347   -0.0113   -0.0079   -0.0099
 7: power    TRUE    TRUE  TRUE  5    0.0356    0.0369    0.0361   -0.0106   -0.0115   -0.0082
 8: typeI    TRUE    TRUE  TRUE  5   -0.0473   -0.0492   -0.0493   -0.0105   -0.0081   -0.0105
 9: power    TRUE   FALSE  TRUE 10    0.0328    0.0301    0.0345   -0.0092   -0.0110   -0.0055
10: typeI    TRUE   FALSE  TRUE 10    0.0007   -0.0019    0.0007    0.0008   -0.0018    0.0030
11: power    TRUE   FALSE  TRUE  5    0.0479    0.0459    0.0499   -0.0049   -0.0049   -0.0034
12: typeI    TRUE   FALSE  TRUE  5    0.0009   -0.0017    0.0009    0.0009   -0.0017    0.0013
13: power    TRUE   FALSE FALSE 10    0.0326    0.0324    0.0339   -0.0033   -0.0036   -0.0005
14: typeI    TRUE   FALSE FALSE 10   -0.0039   -0.0039   -0.0037   -0.0039   -0.0039   -0.0015
15: power    TRUE   FALSE FALSE  5    0.0442    0.0442    0.0465   -0.0010   -0.0010   -0.0038
16: typeI    TRUE   FALSE FALSE  5   -0.0039   -0.0039   -0.0039   -0.0039   -0.0039   -0.0031
17: power   FALSE    TRUE FALSE  5    0.0383    0.0378    0.0400   -0.0026   -0.0008   -0.0046
18: typeI   FALSE    TRUE FALSE  5   -0.0329   -0.0336   -0.0353    0.0044    0.0031    0.0035
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

* Distribution of the estimates

Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg.E <- ggplot(dt.estimate) + facet_grid(scenario~method.char)
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg.E <- gg.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg.E <- gg.E + geom_vline(aes(xintercept = truth), color = "purple")
gg.E <- gg.E + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))

ggsave(gg.E, filename = file.path("report","figures","gg-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg.E %+% dt.estimate[scenario == 1] + theme(legend.position = "bottom"),
       filename = file.path("report","figures","gg-estimate-density-scenario1.pdf"), width = 10)
#+END_SRC

#+RESULTS:
: [1m[22mSaving 10 x 7 in image

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg-estimate-density.pdf]]

#+ATTR_LaTeX: :width \textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.estimateC <- ggplot(dt.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg.estimateC <- gg.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg.estimateC <- gg.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg.estimateC <- gg.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg.estimateC, filename = file.path("report","figures","gg-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg-estimateC-density.pdf]]

\clearpage

* Special cases

Reason for stopping (first 4) or continuing the trial (last):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 1:8,reason],
       method = res2stage[scenario %in% 1:8,method],
       scenario = res2stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    1    2    3    4    5    6    7    8
reason                 method                                                 
decreasing information 1                  0    0    1    1    0    0    0    0
                       2                  0    0    1    1    0    0    0    0
                       3                  0    0    1    1    0    0    0    0
efficacy               1               3740   77 3559   67 3696   82 3502   82
                       2               3729   82 3554   68 3732   82 3546   83
                       3               4137  107 3712   83 4071  110 3632   92
futility               1                646 7086  603 6922  600 7109  552 6901
                       2                658 7120  611 6904  542 6981  523 6834
                       3                560 6843  579 6822  495 6850  519 6812
Imax reached           1                  1    1    0    0    2    2    0    0
                       2                  1    1    0    0    2    2    0    0
                       3                  1    1    0    0    2    2    0    0
no boundary crossed    1               5613 2836 5838 3011 5702 2807 5946 3017
                       2               5612 2797 5835 3028 5724 2935 5931 3083
                       3               5302 3049 5709 3095 5432 3038 5849 3096
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 9:16,reason],
       method = res2stage[scenario %in% 9:16,method],
       scenario = res2stage[scenario %in% 9:16,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    9   10   11   12   13   14   15   16
reason                 method                                                 
decreasing information 1                  0    0    1    0    0    0    0    0
                       2                  0    0    1    0    0    0    0    0
                       3                  0    0    1    0    0    0    0    0
efficacy               1               3805   84 3634   82 3815   78 3674   67
                       2               3824   81 3646   79 3816   78 3677   67
                       3               4206  109 3761   88 4238  112 3788   83
futility               1                614 7130  596 6957  604 7126  571 6920
                       2                572 7044  571 6907  628 7180  573 6925
                       3                535 6914  561 6867  514 6870  535 6837
Imax reached           1                  1    1    0    0    0    0    0    0
                       2                  1    1    0    0    0    0    0    0
                       3                  1    1    0    0    0    0    0    0
no boundary crossed    1               5580 2785 5770 2961 5581 2796 5755 3013
                       2               5603 2874 5783 3014 5556 2742 5750 3008
                       3               5258 2976 5678 3045 5248 3018 5677 3080
#+end_example

\clearpage

* Reversal probability

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Indicator of reversal
res2stage.reversal <- res2stage[, .(N = .N,
                                    futility2efficacy = (stage[1] == 1)*(reason[1] == "futility")*(stage[2] == 1)*(decision[2] == "efficacy"),
                                    efficacy2futility = (stage[1] == 1)*(reason[1] == "efficacy")*(stage[2] == 1)*(decision[2] == "futility")),
                                by = c("method","seed","missing","binding","fixC","ar","hypo")]
res2stage.reversal[is.na(futility2efficacy), futility2efficacy := 0]
res2stage.reversal[is.na(efficacy2futility), efficacy2futility := 0]
#+END_SRC

#+RESULTS:

Percentage of time we observe a reversal:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.reversal <- res2stage.reversal[, .(N = .N,
                                              fu2eff = 100*mean(futility2efficacy),
                                              eff2fu = 100*mean(efficacy2futility)),
                                          by = c("method","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res2stageS.reversal, N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint)
#+END_SRC

#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power   FALSE  5    TRUE FALSE     0.06     0.07     0.01     0.04     0.04     0.63
 2: 10000 power    TRUE  5   FALSE FALSE     0.04     0.04     0.00     0.03     0.03     0.51
 3: 10000 power    TRUE  5   FALSE  TRUE     0.04     0.03     0.03     0.36     0.42     0.56
 4: 10000 power    TRUE  5    TRUE FALSE     0.06     0.08     0.02     0.05     0.07     0.65
 5: 10000 power    TRUE  5    TRUE  TRUE     0.02     0.02     0.01     0.36     0.42     0.63
 6: 10000 power    TRUE 10   FALSE FALSE     0.35     0.38     0.05     0.18     0.21     0.96
 7: 10000 power    TRUE 10   FALSE  TRUE     0.15     0.13     0.10     0.63     0.61     1.13
 8: 10000 power    TRUE 10    TRUE FALSE     0.57     0.57     0.13     0.15     0.20     1.06
 9: 10000 power    TRUE 10    TRUE  TRUE     0.17     0.16     0.11     0.70     0.68     0.99
10: 10000 typeI   FALSE  5    TRUE FALSE     0.01     0.03     0.00     0.01     0.03     0.12
11: 10000 typeI    TRUE  5   FALSE FALSE     0.00     0.00     0.00     0.00     0.01     0.08
12: 10000 typeI    TRUE  5   FALSE  TRUE     0.00     0.00     0.00     0.09     0.07     0.14
13: 10000 typeI    TRUE  5    TRUE FALSE     0.02     0.02     0.00     0.01     0.03     0.15
14: 10000 typeI    TRUE  5    TRUE  TRUE     0.00     0.00     0.00     0.10     0.12     0.14
15: 10000 typeI    TRUE 10   FALSE FALSE     0.00     0.00     0.00     0.09     0.09     0.31
16: 10000 typeI    TRUE 10   FALSE  TRUE     0.00     0.00     0.00     0.27     0.25     0.37
17: 10000 typeI    TRUE 10    TRUE FALSE     0.11     0.11     0.03     0.09     0.08     0.36
18: 10000 typeI    TRUE 10    TRUE  TRUE     0.02     0.00     0.00     0.22     0.21     0.39
#+end_example

#+LaTeX: \end{adjustwidth}


\clearpage

* Frequency mismatch

** p-value / boundaries

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(p.value_MUE<0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchFU, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE        0        0        0
 2: power    TRUE  5   FALSE FALSE        0        0        0
 3: power    TRUE  5   FALSE  TRUE        0        0        0
 4: power    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE  5    TRUE  TRUE        0        0        0
 6: power    TRUE 10   FALSE FALSE        0        0        0
 7: power    TRUE 10   FALSE  TRUE        0        0        0
 8: power    TRUE 10    TRUE FALSE        0        0        0
 9: power    TRUE 10    TRUE  TRUE        0        0        0
10: typeI   FALSE  5    TRUE FALSE        0        0        0
11: typeI    TRUE  5   FALSE FALSE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: typeI    TRUE  5    TRUE FALSE        0        0        0
14: typeI    TRUE  5    TRUE  TRUE        0        0        0
15: typeI    TRUE 10   FALSE FALSE        0        0        0
16: typeI    TRUE 10   FALSE  TRUE        0        0        0
17: typeI    TRUE 10    TRUE FALSE        0        0        0
18: typeI    TRUE 10    TRUE  TRUE        0        0        0
#+end_example

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(p.value_MUE>0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchEFF, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE        0        0        0
 2: power    TRUE  5   FALSE FALSE        0        0        0
 3: power    TRUE  5   FALSE  TRUE        0        0        0
 4: power    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE  5    TRUE  TRUE        0        0        0
 6: power    TRUE 10   FALSE FALSE        0        0        0
 7: power    TRUE 10   FALSE  TRUE        0        0        0
 8: power    TRUE 10    TRUE FALSE        0        0        0
 9: power    TRUE 10    TRUE  TRUE        0        0        0
10: typeI   FALSE  5    TRUE FALSE        0        0        0
11: typeI    TRUE  5   FALSE FALSE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: typeI    TRUE  5    TRUE FALSE        0        0        0
14: typeI    TRUE  5    TRUE  TRUE        0        0        0
15: typeI    TRUE 10   FALSE FALSE        0        0        0
16: typeI    TRUE 10   FALSE  TRUE        0        0        0
17: typeI    TRUE 10    TRUE FALSE        0        0        0
18: typeI    TRUE 10    TRUE  TRUE        0        0        0
#+end_example

\clearpage

** confidence intervals

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(lower_MUE>0)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchFU, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC   method 1   method 2   method 3
 1: power   FALSE  5    TRUE FALSE 0.00000000 0.00000000 0.00000000
 2: power    TRUE  5   FALSE FALSE 0.00000000 0.00000000 0.00000000
 3: power    TRUE  5   FALSE  TRUE 0.05189414 0.05213764 0.05194805
 4: power    TRUE  5    TRUE FALSE 0.00000000 0.00000000 0.00000000
 5: power    TRUE  5    TRUE  TRUE 0.00000000 0.00000000 0.00000000
 6: power    TRUE 10   FALSE FALSE 0.00000000 0.00000000 0.00000000
 7: power    TRUE 10   FALSE  TRUE 0.05128205 0.05221932 0.05238345
 8: power    TRUE 10    TRUE FALSE 0.05263158 0.05205622 0.05115090
 9: power    TRUE 10    TRUE  TRUE 0.00000000 0.00000000 0.00000000
10: typeI   FALSE  5    TRUE FALSE 0.00000000 0.00000000 0.00000000
11: typeI    TRUE  5   FALSE FALSE 0.00000000 0.00000000 0.00000000
12: typeI    TRUE  5   FALSE  TRUE 0.00000000 0.00000000 0.00000000
13: typeI    TRUE  5    TRUE FALSE 0.01024800 0.01024695 0.01024590
14: typeI    TRUE  5    TRUE  TRUE 0.00000000 0.00000000 0.00000000
15: typeI    TRUE 10   FALSE FALSE 0.00000000 0.00000000 0.00000000
16: typeI    TRUE 10   FALSE  TRUE 0.00000000 0.00000000 0.00000000
17: typeI    TRUE 10    TRUE FALSE 0.00000000 0.00000000 0.00000000
18: typeI    TRUE 10    TRUE  TRUE 0.00000000 0.00000000 0.00000000
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage[decision=="futility" & lower_MUE>0,]
#+END_SRC

#+RESULTS:
#+begin_example
    scenario missing binding  fixC ar  hypo method stage     type statistic estimate_ML      se_ML p.value_ML
 1:        1    TRUE    TRUE FALSE 10 power      1     1 decision 1.7322474  0.37016505 0.37016505 0.04182771
 2:        1    TRUE    TRUE FALSE 10 power      2     1 decision 1.7322474  0.37016505 0.37016505 0.04182771
 3:        1    TRUE    TRUE FALSE 10 power      3     1 decision 1.7322474  0.37016505 0.37016505 0.04182771
 4:        4    TRUE    TRUE FALSE  5 typeI      1     1 decision 0.3678716  0.09701712 0.09701712 0.35654991
 5:        4    TRUE    TRUE FALSE  5 typeI      2     1 decision 0.3678716  0.09701712 0.09701712 0.35654991
 6:        4    TRUE    TRUE FALSE  5 typeI      3     1 decision 0.3678716  0.09701712 0.09701712 0.35654991
 7:        9    TRUE   FALSE  TRUE 10 power      1     1 decision 1.8635206  0.40111963 0.40111963 0.03139115
 8:        9    TRUE   FALSE  TRUE 10 power      2     1 decision 1.7901042  0.38489437 0.38489437 0.03692049
 9:        9    TRUE   FALSE  TRUE 10 power      3     1 decision 1.8635206  0.40111963 0.40111963 0.03139115
10:       11    TRUE   FALSE  TRUE  5 power      1     1 decision 1.7609106  0.40679129 0.40679129 0.03937283
11:       11    TRUE   FALSE  TRUE  5 power      2     1 decision 1.5699238  0.36508873 0.36508873 0.05846867
12:       11    TRUE   FALSE  TRUE  5 power      3     1 decision 1.7609106  0.40679129 0.40679129 0.03937283
       lower_ML  upper_ML estimate_MUE p.value_MUE lower_MUE upper_MUE     info    infoPC info.pred
 1: -0.04936225 0.7896923    0.7974956           1 0.4770104  1.224928 21.89924 0.9551434        NA
 2: -0.04936225 0.7896923    0.7974956           1 0.4770104  1.224928 21.89924 0.9559423        NA
 3: -0.04936225 0.7896923    0.7974956           1 0.4770104  1.224928 21.89924 0.9538148        NA
 4: -0.42092898 0.6149632    0.6243984           1 0.2288799  1.151919 14.37791 0.6270978        NA
 5: -0.42092898 0.6149632    0.6243984           1 0.2288799  1.151919 14.37791 0.6276223        NA
 6: -0.42092898 0.6149632    0.6243984           1 0.2288799  1.151919 14.37791 0.6262255        NA
 7: -0.02144578 0.8236850    0.8315648           1 0.5087438  1.262113 21.58343 0.9267393        NA
 8: -0.03720402 0.8069927    0.8148676           1 0.4924005  1.244943 21.63085 0.9219480        NA
 9: -0.02144578 0.8236850    0.8315648           1 0.5087438  1.262113 21.58343 0.9269087        NA
10: -0.04686787 0.8604505    0.8687569           1 0.5222972  1.330839 18.73835 0.8045784        NA
11: -0.09158612 0.8217636    0.8301337           1 0.4813647  1.295296 18.49100 0.7881215        NA
12: -0.04686787 0.8604505    0.8687569           1 0.5222972  1.330839 18.73835 0.8047255        NA
    infoPC.pred uk lk       ck decision                 reason time.interim      seed nX1.interim nX2.interim
 1:          NA NA NA 1.959964 futility                   <NA>          140 187033903         345         284
 2:          NA NA NA 1.959964 futility                   <NA>          140 187033903         345         284
 3:          NA NA NA 1.959964 futility                   <NA>          140 187033903         345         284
 4:          NA NA NA 1.874799 futility decreasing information          247 151594999         309         273
 5:          NA NA NA 1.875929 futility decreasing information          245 151594999         306         270
 6:          NA NA NA 2.310378 futility decreasing information          247 151594999         309         273
 7:          NA NA NA 1.959964 futility                   <NA>          138 187033903         356         298
 8:          NA NA NA 1.959964 futility                   <NA>          139 187033903         359         301
 9:          NA NA NA 1.959964 futility                   <NA>          138 187033903         356         298
10:          NA NA NA 1.959964 futility decreasing information          247 187033903         312         279
11:          NA NA NA 1.959964 futility decreasing information          249 187033903         315         282
12:          NA NA NA 2.121270 futility decreasing information          247 187033903         312         279
    nX3.interim method.char stage.char truth
 1:         242    method 1    interim   0.6
 2:         242    method 2    interim   0.6
 3:         242    method 3    interim   0.6
 4:         245    method 1    interim   0.0
 5:         244    method 2    interim   0.0
 6:         245    method 3    interim   0.0
 7:         253    method 1    interim   0.6
 8:         255    method 2    interim   0.6
 9:         253    method 3    interim   0.6
10:         252    method 1    interim   0.6
11:         254    method 2    interim   0.6
12:         252    method 3    interim   0.6
#+end_example


When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(lower_MUE<0)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchEFF, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE        0        0        0
 2: power    TRUE  5   FALSE FALSE        0        0        0
 3: power    TRUE  5   FALSE  TRUE        0        0        0
 4: power    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE  5    TRUE  TRUE        0        0        0
 6: power    TRUE 10   FALSE FALSE        0        0        0
 7: power    TRUE 10   FALSE  TRUE        0        0        0
 8: power    TRUE 10    TRUE FALSE        0        0        0
 9: power    TRUE 10    TRUE  TRUE        0        0        0
10: typeI   FALSE  5    TRUE FALSE        0        0        0
11: typeI    TRUE  5   FALSE FALSE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: typeI    TRUE  5    TRUE FALSE        0        0        0
14: typeI    TRUE  5    TRUE  TRUE        0        0        0
15: typeI    TRUE 10   FALSE FALSE        0        0        0
16: typeI    TRUE 10   FALSE  TRUE        0        0        0
17: typeI    TRUE 10    TRUE FALSE        0        0        0
18: typeI    TRUE 10    TRUE  TRUE        0        0        0
#+end_example

* Coverage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.coverage <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = 100*mean( (lower_MUE <= truth) & (truth <= upper_MUE) )),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.coverage, hypo + missing + ar + binding + fixC ~ method.char, value.var = "coverage")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE    94.79    94.82    94.92
 2: power    TRUE  5   FALSE FALSE    93.60    93.61    93.93
 3: power    TRUE  5   FALSE  TRUE    94.21    94.22    94.28
 4: power    TRUE  5    TRUE FALSE    94.76    94.59    94.89
 5: power    TRUE  5    TRUE  TRUE    95.44    95.38    95.22
 6: power    TRUE 10   FALSE FALSE    93.38    93.36    94.14
 7: power    TRUE 10   FALSE  TRUE    94.24    94.15    94.53
 8: power    TRUE 10    TRUE FALSE    94.75    94.73    94.98
 9: power    TRUE 10    TRUE  TRUE    95.97    95.91    95.46
10: typeI   FALSE  5    TRUE FALSE    95.14    95.20    95.15
11: typeI    TRUE  5   FALSE FALSE    95.01    95.02    95.57
12: typeI    TRUE  5   FALSE  TRUE    95.07    95.08    95.74
13: typeI    TRUE  5    TRUE FALSE    94.71    94.78    94.73
14: typeI    TRUE  5    TRUE  TRUE    95.06    95.24    94.98
15: typeI    TRUE 10   FALSE FALSE    95.08    95.08    96.19
16: typeI    TRUE 10   FALSE  TRUE    95.27    95.25    96.48
17: typeI    TRUE 10    TRUE FALSE    94.87    94.82    94.93
18: typeI    TRUE 10    TRUE  TRUE    95.33    95.29    95.13
#+end_example

Average width of the confidence intervals
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
res2stage.width <- res2stage[decision %in% c("futility","efficacy"),
                             .(N = .N,
                               width.naive = mean(upper_ML-lower_ML),
                               width.MUE = mean(upper_MUE-lower_MUE)),
                             by = c("method.char","missing","binding","fixC","ar","hypo")]
res2stage.width[, width.ratio := width.MUE/width.naive]
dcast(res2stage.width, hypo + missing + ar + binding + fixC ~ method.char, value.var = "width.ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC  method 1  method 2 method 3
 1: power   FALSE  5    TRUE FALSE 1.0517981 1.0518767 1.053589
 2: power    TRUE  5   FALSE FALSE 1.0430641 1.0430645 1.045294
 3: power    TRUE  5   FALSE  TRUE 1.0490757 1.0494445 1.045526
 4: power    TRUE  5    TRUE FALSE 1.0516795 1.0515698 1.052909
 5: power    TRUE  5    TRUE  TRUE 1.0580807 1.0575936 1.054137
 6: power    TRUE 10   FALSE FALSE 1.0532980 1.0532804 1.055866
 7: power    TRUE 10   FALSE  TRUE 1.0679703 1.0676474 1.056350
 8: power    TRUE 10    TRUE FALSE 1.0625603 1.0625641 1.062728
 9: power    TRUE 10    TRUE  TRUE 1.0774122 1.0766805 1.063708
10: typeI   FALSE  5    TRUE FALSE 1.0431774 1.0434979 1.046821
11: typeI    TRUE  5   FALSE FALSE 0.9994186 0.9994094 1.019993
12: typeI    TRUE  5   FALSE  TRUE 0.9994042 0.9994106 1.020071
13: typeI    TRUE  5    TRUE FALSE 1.0417925 1.0419051 1.045259
14: typeI    TRUE  5    TRUE  TRUE 1.0424393 1.0429751 1.045768
15: typeI    TRUE 10   FALSE FALSE 0.9946568 0.9949442 1.052180
16: typeI    TRUE 10   FALSE  TRUE 0.9951513 0.9954542 1.051935
17: typeI    TRUE 10    TRUE FALSE 1.0462148 1.0458686 1.056152
18: typeI    TRUE 10    TRUE  TRUE 1.0462813 1.0476594 1.056027
#+end_example

* Percentage of missing values

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.nXinterim <- res2stage[,.(N = .N, nX1 = unique(nX1.interim), nX2 = unique(nX2.interim), nX3 = unique(nX3.interim)),
                                 by = c("method","missing","ar","seed","binding","fixC","hypo")]
all(res2stage.nXinterim$N==3)

res2stageS.nXinterim <- res2stage.nXinterim[, .(N = .N,
                                                pc.all = 100*mean(nX3/nX1),
                                                pc.missing3 = 100*mean(nX2/nX1-nX3/nX1),
                                                pc.missing23 = 100*mean(1-nX2/nX1)),
                                            by = c("method","missing","ar","hypo","fixC","binding")]

setkeyv(res2stageS.nXinterim,"ar")
#+END_SRC

#+RESULTS:
: [1] TRUE

Here only for method 1 - values are very similar between different
methods:
- =pc.all= percentage of observations with full data
- =pc.missing3= percentage of observations missing the final outcome
  but with intermediate outcome value and baseline.
- =pc.missing23= percentage of observations with only baseline value
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.nXinterim[method==1]
#+END_SRC

#+RESULTS:
#+begin_example
    method missing ar  hypo  fixC binding     N   pc.all pc.missing3 pc.missing23
 1:      1    TRUE  5 power FALSE    TRUE 10000 79.53472    9.562374    10.902910
 2:      1    TRUE  5 typeI FALSE    TRUE 10000 79.53472    9.562374    10.902910
 3:      1    TRUE  5 power  TRUE    TRUE 10000 79.44022    9.531225    11.028558
 4:      1    TRUE  5 typeI  TRUE    TRUE 10000 79.44022    9.531225    11.028558
 5:      1    TRUE  5 power  TRUE   FALSE 10000 79.71917    9.427430    10.853396
 6:      1    TRUE  5 typeI  TRUE   FALSE 10000 79.71917    9.427430    10.853396
 7:      1    TRUE  5 power FALSE   FALSE 10000 79.64196    9.449136    10.908902
 8:      1    TRUE  5 typeI FALSE   FALSE 10000 79.64196    9.449136    10.908902
 9:      1   FALSE  5 power FALSE    TRUE 10000 87.78863    6.090240     6.121126
10:      1   FALSE  5 typeI FALSE    TRUE 10000 87.78863    6.090240     6.121126
11:      1    TRUE 10 power FALSE    TRUE 10000 71.60971   13.327969    15.062319
12:      1    TRUE 10 typeI FALSE    TRUE 10000 71.60971   13.327969    15.062319
13:      1    TRUE 10 power  TRUE    TRUE 10000 71.52189   13.282615    15.195496
14:      1    TRUE 10 typeI  TRUE    TRUE 10000 71.52189   13.282615    15.195496
15:      1    TRUE 10 power  TRUE   FALSE 10000 71.85935   13.144488    14.996166
16:      1    TRUE 10 typeI  TRUE   FALSE 10000 71.85935   13.144488    14.996166
17:      1    TRUE 10 power FALSE   FALSE 10000 71.79364   13.168843    15.037522
18:      1    TRUE 10 typeI FALSE   FALSE 10000 71.79364   13.168843    15.037522
#+end_example

\clearpage

* Information

Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt.info <- res2stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt.info[, type := factor(type, c("interim","decision","final"))]
tablePrint <- dcast(dt.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type,
                    value.var = "infoPC")
print(tablePrint, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar  interim decision     final
        1    TRUE    TRUE FALSE 10 54.63862 63.33698 102.69943
        2    TRUE    TRUE FALSE 10 54.63862 68.96135 102.32310
        3    TRUE    TRUE FALSE  5 53.27109 57.38550 102.74966
        4    TRUE    TRUE FALSE  5 53.27109 60.22345 102.34459
        5    TRUE    TRUE  TRUE 10 54.54008 63.10923 102.78945
        6    TRUE    TRUE  TRUE 10 54.54008 68.95137 102.12003
        7    TRUE    TRUE  TRUE  5 53.17744 57.18426 102.80673
        8    TRUE    TRUE  TRUE  5 53.17744 60.12266 102.22328
        9    TRUE   FALSE  TRUE 10 54.51044 63.16647 102.56935
       10    TRUE   FALSE  TRUE 10 54.51044 54.66970 103.09893
       11    TRUE   FALSE  TRUE  5 53.17317 57.27740 102.61166
       12    TRUE   FALSE  TRUE  5 53.17317 53.24797 103.10060
       13    TRUE   FALSE FALSE 10 54.49750 63.16580 102.56590
       14    TRUE   FALSE FALSE 10 54.49750 54.64468 103.12067
       15    TRUE   FALSE FALSE  5 53.15611 57.29003 102.60917
       16    TRUE   FALSE FALSE  5 53.15611 53.21806 103.12463
       17   FALSE    TRUE FALSE  5 52.06840 56.28978  99.96969
       18   FALSE    TRUE FALSE  5 52.06840 59.42197  99.62860
#+end_example

Similar results for other methods.

# @@latex:any arbitrary LaTeX code@@


* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [12pt]
#+OPTIONS:   title:t author:t toc:nil todo:nil
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t
#+LATEX_HEADER: %
#+LATEX_HEADER: %%%% specifications %%%%
#+LATEX_HEADER: %
** Latex command
#+LATEX_HEADER: \usepackage{ifthen}
#+LATEX_HEADER: \usepackage{xifthen}
#+LATEX_HEADER: \usepackage{xargs}
#+LATEX_HEADER: \usepackage{xspace}
#+LATEX_HEADER: \newcommand\Rlogo{\textbf{\textsf{R}}\xspace} % 
** Notations

** Code
# Documentation at https://org-babel.readthedocs.io/en/latest/header-args/#results
# :tangle (yes/no/filename) extract source code with org-babel-tangle-file, see http://orgmode.org/manual/Extracting-source-code.html 
# :cache (yes/no)
# :eval (yes/no/never)
# :results (value/output/silent/graphics/raw/latex)
# :export (code/results/none/both)
#+PROPERTY: header-args :session *R* :tangle yes :cache no ## extra argument need to be on the same line as :session *R*
# Code display:
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}
# ## change font size input
# ## #+ATTR_LATEX: :options basicstyle=\ttfamily\scriptsize
# ## change font size output
# ## \RecustomVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\tiny,formatcom = {\color[rgb]{0.5,0,0}}}
** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: \RequirePackage{setspace} % to modify the space between lines - incompatible with footnote in beamer
#+LaTeX_HEADER:\renewcommand{\baselinestretch}{1.1}
#+LATEX_HEADER:\geometry{top=1cm}
#+LATEX_HEADER: \RequirePackage{changepage}

#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
# ## valid and cross symbols
#+LaTeX_HEADER: \RequirePackage{pifont}
#+LaTeX_HEADER: \RequirePackage{relsize}
#+LaTeX_HEADER: \newcommand{\Cross}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{56}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\Valid}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{52}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\CrossR}{ \textcolor{red}{\Cross} }
#+LaTeX_HEADER: \newcommand{\ValidV}{ \textcolor{green}{\Valid} }
# ## warning symbol
#+LaTeX_HEADER: \usepackage{stackengine}
#+LaTeX_HEADER: \usepackage{scalerel}
#+LaTeX_HEADER: \newcommand\Warning[1][3ex]{%
#+LaTeX_HEADER:   \renewcommand\stacktype{L}%
#+LaTeX_HEADER:   \scaleto{\stackon[1.3pt]{\color{red}$\triangle$}{\tiny\bfseries !}}{#1}%
#+LaTeX_HEADER:   \xspace
#+LaTeX_HEADER: }
# # change the color of the links
#+LaTeX_HEADER: \hypersetup{
#+LaTeX_HEADER:  citecolor=[rgb]{0,0.5,0},
#+LaTeX_HEADER:  urlcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER:  linkcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER: }
** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files
#+LATEX_HEADER: \RequirePackage{capt-of} % 
#+LATEX_HEADER: \RequirePackage{caption} % newlines in graphics
** List
#+LATEX_HEADER: \RequirePackage{enumitem} % to be able to convert .eps to .pdf image files
** Color
#+LaTeX_HEADER: \definecolor{light}{rgb}{1, 1, 0.9}
#+LaTeX_HEADER: \definecolor{lightred}{rgb}{1.0, 0.7, 0.7}
#+LaTeX_HEADER: \definecolor{lightblue}{rgb}{0.0, 0.8, 0.8}
#+LaTeX_HEADER: \newcommand{\darkblue}{blue!80!black}
#+LaTeX_HEADER: \newcommand{\darkgreen}{green!50!black}
#+LaTeX_HEADER: \newcommand{\darkred}{red!50!black}
** Box
#+LATEX_HEADER: \usepackage{mdframed}
** Shortcut
#+LATEX_HEADER: \newcommand{\first}{1\textsuperscript{st} }
#+LATEX_HEADER: \newcommand{\second}{2\textsuperscript{nd} }
#+LATEX_HEADER: \newcommand{\third}{3\textsuperscript{rd} }
