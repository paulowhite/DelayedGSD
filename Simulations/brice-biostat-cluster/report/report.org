#+TITLE: Results simulation study DelayedGSD
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
                                        # Path
if(Sys.info()["login"] == "bozenne"){
}else if(Sys.info()["login"] == "hpl802"){
  setwd("x:/DelayedGSD/")
}

options(width = 120)

library(data.table)
library(ggplot2)

ciNA <- function(x, digits = 4){
  if(all(is.na(x))){
    out <- as.character(NA)
  }else if(any(is.na(x))){
    out <- paste0("[",round(min(x, na.rm = TRUE), digits = digits),
                  ";",round(max(x, na.rm = TRUE), digits = digits),
                  "] NA = ",sum(is.na(x)))
  }else{
    out <- paste0("[",round(min(x), digits = digits),
                  ";",round(max(x), digits = digits),
                  "]")
  }
  return(out)
}
#+END_SRC

#+RESULTS:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res2stage <- readRDS(file.path("Results-built","res2stage.rds"))
res2stage[, method.char := paste0("method ",method)]
res2stage[, stage.char := factor(stage, 1:2, c("interim","final"))]
res2stage[, truth := ifelse(hypo=="power",0.6,0)]
#+END_SRC

#+RESULTS:

* Rejection rate

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res2stage.rejection <- res2stage[,.(n.stage = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res2stageS.rejection <- res2stage.rejection[,.(n.sim = .N, rejectionRate = 100*mean(rejection)),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH1 <- dcast(res2stageS.rejection[hypo=="power"],
                      scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(tablePrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10    81.00    80.93    80.43
        3 10000    TRUE    TRUE FALSE  5    80.53    80.53    80.14
        5 10000    TRUE    TRUE  TRUE 10    80.15    80.35    80.43
        7 10000    TRUE    TRUE  TRUE  5    80.08    80.20    80.14
        9 10000    TRUE   FALSE  TRUE 10    79.86    80.12    80.26
       11 10000    TRUE   FALSE  TRUE  5    79.93    80.04    80.06
       13 10000    TRUE   FALSE FALSE 10    80.50    80.44    80.26
       15 10000    TRUE   FALSE FALSE  5    80.37    80.36    80.06
       17 10000   FALSE    TRUE FALSE  5    80.31    80.30    79.92
#+end_example

\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH0 <- dcast(res2stageS.rejection[hypo=="typeI"],
                      scenario + n.sim + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(tablePrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario n.sim missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10     2.42     2.39     2.37
        4 10000    TRUE    TRUE FALSE  5     2.40     2.40     2.35
        6 10000    TRUE    TRUE  TRUE 10     2.24     2.22     2.37
        8 10000    TRUE    TRUE  TRUE  5     2.32     2.31     2.35
       10 10000    TRUE   FALSE  TRUE 10     2.45     2.47     2.57
       12 10000    TRUE   FALSE  TRUE  5     2.63     2.64     2.66
       14 10000    TRUE   FALSE FALSE 10     2.53     2.53     2.57
       16 10000    TRUE   FALSE FALSE  5     2.68     2.68     2.66
       18 10000   FALSE    TRUE FALSE  5     2.46     2.46     2.45
#+end_example

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the p-value:
gg.P <- ggplot(res2stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P <- gg.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P <- gg.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P, filename = file.path("report","figures","gg-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 375681 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 375681 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.P2 <- ggplot(res2stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P2 <- gg.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P2 <- gg.P2 + coord_cartesian(xlim = c(0,0.05))
gg.P2 <- gg.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P2, filename = file.path("report","figures","gg-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 386959 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 386959 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg-pvalue2-density.pdf]]

\clearpage

* Conclusion of the trial

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stageS.final <- res2stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                decision.eff = 100*mean((stage == 1)*(decision == "efficacy")),
                                decision.fut = 100*mean((stage == 1)*(decision == "futility")),
                                final.eff = 100*mean((stage == 2)*(decision == "efficacy")),
                                final.fut = 100*mean((stage == 2)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.79         5.93     43.21      13.1
 2: 10000    TRUE typeI    TRUE FALSE 10         0.80        71.13      1.62      26.5
 3: 10000    TRUE power    TRUE FALSE  5        35.74         5.98     44.79      13.5
 4: 10000    TRUE typeI    TRUE FALSE  5         0.74        69.32      1.66      28.3
 5: 10000    TRUE power    TRUE  TRUE 10        36.94         6.78     43.21      13.1
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.62        71.31      1.62      26.5
 7: 10000    TRUE power    TRUE  TRUE  5        35.29         6.43     44.79      13.5
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.66        69.40      1.66      28.3
 9: 10000    TRUE power   FALSE  TRUE 10        38.05         6.57     41.81      13.6
10: 10000    TRUE typeI   FALSE  TRUE 10         0.61         0.20      1.84      97.4
11: 10000    TRUE power   FALSE  TRUE  5        36.35         6.15     43.58      13.9
12: 10000    TRUE typeI   FALSE  TRUE  5         0.70         0.06      1.93      97.3
13: 10000    TRUE power   FALSE FALSE 10        38.69         5.93     41.81      13.6
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.12      1.84      97.4
15: 10000    TRUE power   FALSE FALSE  5        36.79         5.71     43.58      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.01      1.93      97.3
17: 10000   FALSE power    TRUE FALSE  5        33.98         5.33     46.33      14.4
18: 10000   FALSE typeI    TRUE FALSE  5         0.74        67.48      1.72      30.1
#+end_example

\clearpage

Method 2:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.85         6.19     43.08      12.9
 2: 10000    TRUE typeI    TRUE FALSE 10         0.79        71.64      1.60      26.0
 3: 10000    TRUE power    TRUE FALSE  5        35.77         5.99     44.76      13.5
 4: 10000    TRUE typeI    TRUE FALSE  5         0.74        69.38      1.66      28.2
 5: 10000    TRUE power    TRUE  TRUE 10        36.69         6.24     43.66      13.4
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.59        69.61      1.63      28.2
 7: 10000    TRUE power    TRUE  TRUE  5        35.02         6.05     45.18      13.8
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.63        68.36      1.68      29.3
 9: 10000    TRUE power   FALSE  TRUE 10        37.85         6.04     42.27      13.8
10: 10000    TRUE typeI   FALSE  TRUE 10         0.61         0.19      1.86      97.3
11: 10000    TRUE power   FALSE  TRUE  5        36.18         5.84     43.86      14.1
12: 10000    TRUE typeI   FALSE  TRUE  5         0.69         0.06      1.95      97.3
13: 10000    TRUE power   FALSE FALSE 10        38.70         6.09     41.74      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.12      1.84      97.4
15: 10000    TRUE power   FALSE FALSE  5        36.82         5.75     43.54      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.01      1.93      97.3
17: 10000   FALSE power    TRUE FALSE  5        34.03         5.36     46.27      14.3
18: 10000   FALSE typeI    TRUE FALSE  5         0.74        67.55      1.72      30.0
#+end_example

\clearpage

Method 3:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC
#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        40.58         6.53     39.85      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.74        68.79      1.63      28.8
 3: 10000    TRUE power    TRUE FALSE  5        36.54         6.30     43.60      13.6
 4: 10000    TRUE typeI    TRUE FALSE  5         0.69        68.41      1.66      29.2
 5: 10000    TRUE power    TRUE  TRUE 10        40.58         6.53     39.85      13.0
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.74        68.79      1.63      28.8
 7: 10000    TRUE power    TRUE  TRUE  5        36.54         6.30     43.60      13.6
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.69        68.41      1.66      29.2
 9: 10000    TRUE power   FALSE  TRUE 10        41.34         6.20     38.92      13.5
10: 10000    TRUE typeI   FALSE  TRUE 10         0.77         0.33      1.80      97.1
11: 10000    TRUE power   FALSE  TRUE  5        37.71         6.03     42.35      13.9
12: 10000    TRUE typeI   FALSE  TRUE  5         0.73         0.09      1.93      97.2
13: 10000    TRUE power   FALSE FALSE 10        41.34         6.20     38.92      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.77         0.33      1.80      97.1
15: 10000    TRUE power   FALSE FALSE  5        37.71         6.03     42.35      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.73         0.09      1.93      97.2
17: 10000   FALSE power    TRUE FALSE  5        34.65         5.59     45.27      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.68        66.54      1.77      31.0
#+end_example

Relative frequency of stopping for with a threshold below 1.96:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage[decision %in% c("efficacy","futility"),
          .(.N, rejection = 100*mean(decision=="efficacy"), rejectionBelow196 = 100*mean((statistic<qnorm(0.975))*(decision=="efficacy"))), 
          by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
#+begin_example
    scenario missing method binding  fixC ar  hypo     N rejection rejectionBelow196
 1:        1    TRUE      1    TRUE FALSE 10 power 10000     81.00              0.85
 2:        1    TRUE      2    TRUE FALSE 10 power 10000     80.93              0.84
 3:        1    TRUE      3    TRUE FALSE 10 power 10000     80.43              0.00
 4:        2    TRUE      1    TRUE FALSE 10 typeI 10000      2.42              0.18
 5:        2    TRUE      2    TRUE FALSE 10 typeI 10000      2.39              0.17
 6:        2    TRUE      3    TRUE FALSE 10 typeI 10000      2.37              0.00
 7:        3    TRUE      1    TRUE FALSE  5 power 10000     80.53              0.45
 8:        3    TRUE      2    TRUE FALSE  5 power 10000     80.53              0.45
 9:        3    TRUE      3    TRUE FALSE  5 power 10000     80.14              0.00
10:        4    TRUE      1    TRUE FALSE  5 typeI 10000      2.40              0.08
11:        4    TRUE      2    TRUE FALSE  5 typeI 10000      2.40              0.08
12:        4    TRUE      3    TRUE FALSE  5 typeI 10000      2.35              0.00
13:        5    TRUE      1    TRUE  TRUE 10 power 10000     80.15              0.00
14:        5    TRUE      2    TRUE  TRUE 10 power 10000     80.35              0.00
15:        5    TRUE      3    TRUE  TRUE 10 power 10000     80.43              0.00
16:        6    TRUE      1    TRUE  TRUE 10 typeI 10000      2.24              0.00
17:        6    TRUE      2    TRUE  TRUE 10 typeI 10000      2.22              0.00
18:        6    TRUE      3    TRUE  TRUE 10 typeI 10000      2.37              0.00
19:        7    TRUE      1    TRUE  TRUE  5 power 10000     80.08              0.00
20:        7    TRUE      2    TRUE  TRUE  5 power 10000     80.20              0.00
21:        7    TRUE      3    TRUE  TRUE  5 power 10000     80.14              0.00
22:        8    TRUE      1    TRUE  TRUE  5 typeI 10000      2.32              0.00
23:        8    TRUE      2    TRUE  TRUE  5 typeI 10000      2.31              0.00
24:        8    TRUE      3    TRUE  TRUE  5 typeI 10000      2.35              0.00
25:        9    TRUE      1   FALSE  TRUE 10 power 10000     79.86              0.00
26:        9    TRUE      2   FALSE  TRUE 10 power 10000     80.12              0.00
27:        9    TRUE      3   FALSE  TRUE 10 power 10000     80.26              0.00
28:       10    TRUE      1   FALSE  TRUE 10 typeI 10000      2.45              0.00
29:       10    TRUE      2   FALSE  TRUE 10 typeI 10000      2.47              0.00
30:       10    TRUE      3   FALSE  TRUE 10 typeI 10000      2.57              0.00
31:       11    TRUE      1   FALSE  TRUE  5 power 10000     79.93              0.00
32:       11    TRUE      2   FALSE  TRUE  5 power 10000     80.04              0.00
33:       11    TRUE      3   FALSE  TRUE  5 power 10000     80.06              0.00
34:       12    TRUE      1   FALSE  TRUE  5 typeI 10000      2.63              0.00
35:       12    TRUE      2   FALSE  TRUE  5 typeI 10000      2.64              0.00
36:       12    TRUE      3   FALSE  TRUE  5 typeI 10000      2.66              0.00
37:       13    TRUE      1   FALSE FALSE 10 power 10000     80.50              0.64
38:       13    TRUE      2   FALSE FALSE 10 power 10000     80.44              0.64
39:       13    TRUE      3   FALSE FALSE 10 power 10000     80.26              0.00
40:       14    TRUE      1   FALSE FALSE 10 typeI 10000      2.53              0.08
41:       14    TRUE      2   FALSE FALSE 10 typeI 10000      2.53              0.08
42:       14    TRUE      3   FALSE FALSE 10 typeI 10000      2.57              0.00
43:       15    TRUE      1   FALSE FALSE  5 power 10000     80.37              0.44
44:       15    TRUE      2   FALSE FALSE  5 power 10000     80.36              0.44
45:       15    TRUE      3   FALSE FALSE  5 power 10000     80.06              0.00
46:       16    TRUE      1   FALSE FALSE  5 typeI 10000      2.68              0.05
47:       16    TRUE      2   FALSE FALSE  5 typeI 10000      2.68              0.05
48:       16    TRUE      3   FALSE FALSE  5 typeI 10000      2.66              0.00
49:       17   FALSE      1    TRUE FALSE  5 power 10000     80.31              0.42
50:       17   FALSE      2    TRUE FALSE  5 power 10000     80.30              0.43
51:       17   FALSE      3    TRUE FALSE  5 power 10000     79.92              0.00
52:       18   FALSE      1    TRUE FALSE  5 typeI 10000      2.46              0.08
53:       18   FALSE      2    TRUE FALSE  5 typeI 10000      2.46              0.08
54:       18   FALSE      3    TRUE FALSE  5 typeI 10000      2.45              0.00
    scenario missing method binding  fixC ar  hypo     N rejection rejectionBelow196
#+end_example

\clearpage

* Bias (True effect: 0.6 under the alternative)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
true_eff <- 0.6

## For each run, error made by each estimator
res2stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res2stage.bias <- res2stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res2stage.bias$N==1)

res2stageS.bias <- res2stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar  biasMLE1  biasMLE2  biasMLE3  biasMUE1  biasMUE2 biasMUE3
 1: power    TRUE    TRUE FALSE 10  0.013450  0.013150  0.014680  0.005983  0.005659  0.00218
 2: typeI    TRUE    TRUE FALSE 10 -0.017939 -0.017844 -0.018560 -0.004484 -0.004412 -0.00508
 3: power    TRUE    TRUE FALSE  5  0.022570  0.022551  0.023584  0.010450  0.010477  0.00870
 4: typeI    TRUE    TRUE FALSE  5 -0.030342 -0.030312 -0.030651 -0.011844 -0.011798 -0.01238
 5: power    TRUE    TRUE  TRUE 10  0.013450  0.014032  0.014680  0.001094  0.001687  0.00217
 6: typeI    TRUE    TRUE  TRUE 10 -0.017939 -0.018711 -0.018560 -0.005373 -0.006062 -0.00508
 7: power    TRUE    TRUE  TRUE  5  0.022570  0.023089  0.023584  0.007878  0.008275  0.00870
 8: typeI    TRUE    TRUE  TRUE  5 -0.030342 -0.030850 -0.030651 -0.012252 -0.012829 -0.01238
 9: power    TRUE   FALSE  TRUE 10  0.014326  0.014903  0.015285  0.037532  0.035615  0.03135
10: typeI    TRUE   FALSE  TRUE 10  0.000186  0.000192  0.000511  0.000991  0.000981  0.00263
11: power    TRUE   FALSE  TRUE  5  0.023657  0.024021  0.024379  0.042787  0.041614  0.04039
12: typeI    TRUE   FALSE  TRUE  5  0.000912  0.000853  0.001008  0.001112  0.001062  0.00136
13: power    TRUE   FALSE FALSE 10  0.014326  0.014160  0.015285  0.036631  0.037167  0.03139
14: typeI    TRUE   FALSE FALSE 10  0.000186  0.000186  0.000511  0.000793  0.000783  0.00264
15: power    TRUE   FALSE FALSE  5  0.023657  0.023651  0.024379  0.041744  0.041949  0.04040
16: typeI    TRUE   FALSE FALSE  5  0.000912  0.000912  0.001008  0.000964  0.000962  0.00137
17: power   FALSE    TRUE FALSE  5  0.022836  0.022775  0.023807  0.011971  0.011956  0.01001
18: typeI   FALSE    TRUE FALSE  5 -0.029516 -0.029448 -0.029915 -0.011048 -0.011005 -0.01162
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0261    0.0260    0.0301   -0.0024   -0.0025   -0.0054
 2: typeI    TRUE    TRUE FALSE 10   -0.0173   -0.0170   -0.0202    0.0011    0.0009   -0.0001
 3: power    TRUE    TRUE FALSE  5    0.0405    0.0405    0.0432   -0.0034   -0.0033   -0.0053
 4: typeI    TRUE    TRUE FALSE  5   -0.0330   -0.0329   -0.0345    0.0007    0.0007    0.0008
 5: power    TRUE    TRUE  TRUE 10    0.0261    0.0265    0.0301   -0.0105   -0.0101   -0.0054
 6: typeI    TRUE    TRUE  TRUE 10   -0.0173   -0.0197   -0.0202    0.0011   -0.0006   -0.0001
 7: power    TRUE    TRUE  TRUE  5    0.0405    0.0407    0.0432   -0.0077   -0.0065   -0.0053
 8: typeI    TRUE    TRUE  TRUE  5   -0.0330   -0.0346   -0.0345    0.0007    0.0009    0.0008
 9: power    TRUE   FALSE  TRUE 10    0.0326    0.0332    0.0327    0.0390    0.0345    0.0277
10: typeI    TRUE   FALSE  TRUE 10   -0.0009   -0.0009   -0.0009   -0.0008   -0.0008    0.0014
11: power    TRUE   FALSE  TRUE  5    0.0462    0.0459    0.0489    0.0338    0.0315    0.0294
12: typeI    TRUE   FALSE  TRUE  5   -0.0009   -0.0010   -0.0009   -0.0008   -0.0010    0.0003
13: power    TRUE   FALSE FALSE 10    0.0326    0.0324    0.0327    0.0390    0.0403    0.0277
14: typeI    TRUE   FALSE FALSE 10   -0.0009   -0.0009   -0.0009   -0.0008   -0.0008    0.0014
15: power    TRUE   FALSE FALSE  5    0.0462    0.0464    0.0489    0.0337    0.0342    0.0294
16: typeI    TRUE   FALSE FALSE  5   -0.0009   -0.0009   -0.0009   -0.0008   -0.0008    0.0003
17: power   FALSE    TRUE FALSE  5    0.0383    0.0383    0.0400   -0.0026   -0.0025   -0.0047
18: typeI   FALSE    TRUE FALSE  5   -0.0329   -0.0327   -0.0353    0.0044    0.0044    0.0035
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

* Distribution of the estimates

Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg.E <- ggplot(dt.estimate) + facet_grid(scenario~method.char)
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg.E <- gg.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg.E <- gg.E + geom_vline(aes(xintercept = truth), color = "purple")
gg.E <- gg.E + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))

ggsave(gg.E, filename = file.path("report","figures","gg-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg.E %+% dt.estimate[scenario == 1] + theme(legend.position = "bottom"),
       filename = file.path("report","figures","gg-estimate-density-scenario1.pdf"), width = 10)
#+END_SRC

#+RESULTS:
: [1m[22mSaving 10 x 7 in image

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg-estimate-density.pdf]]

#+ATTR_LaTeX: :width \textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.estimateC <- ggplot(dt.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg.estimateC <- gg.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg.estimateC <- gg.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg.estimateC <- gg.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg.estimateC, filename = file.path("report","figures","gg-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg-estimateC-density.pdf]]

\clearpage

* Special cases

Reason for stopping (efficacy, futility, Imax reached), continuing the
trial (decreasing information, no boundary crossed), or concluding
(stop for futility at interim):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 1:8,reason],
       method = res2stage[scenario %in% 1:8,method],
       scenario = res2stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario    1    2    3    4    5    6    7    8
reason                       method                                                 
decreasing information       1                  0    0    1    1    0    0    1    1
                             2                  0    0    1    1    0    0    1    1
                             3                  0    0    1    1    0    0    1    1
efficacy                     1               3739   81 3573   74 3739   81 3573   74
                             2               3744   81 3576   74 3718   79 3545   71
                             3               4165  108 3721   82 4165  108 3721   82
futility                     1                632 7111  599 6932  632 7111  599 6932
                             2                659 7161  600 6938  574 6940  562 6828
                             3                545 6844  563 6828  545 6844  563 6828
Imax reached                 1                  1    1    0    0    1    1    0    0
                             2                  1    1    0    0    1    1    0    0
                             3                  1    1    0    0    1    1    0    0
no boundary crossed          1               5628 2807 5828 2994 5628 2807 5828 2994
                             2               5596 2757 5824 2988 5707 2980 5893 3101
                             3               5289 3047 5716 3090 5289 3047 5716 3090
stop for futility at interim 1                  0    0    0    0    0    0    0    0
                             2                  0    0    0    0    0    0    0    0
                             3                 11    1    2    0   11    1    2    0
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 9:18,reason],
       method = res2stage[scenario %in% 9:18,method],
       scenario = res2stage[scenario %in% 9:18,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                                    scenario    9   10   11   12   13   14   15   16   17   18
reason                       method                                                           
efficacy                     1               3849   81 3680   76 3849   81 3680   76 3396   74
                             2               3829   80 3661   75 3850   81 3683   76 3400   74
                             3               4238  110 3831   82 4238  110 3831   82 3528   80
futility                     1                613 7122  570 6945  613 7122  570 6945  535 6748
                             2                560 6975  541 6838  629 7164  574 6950  539 6755
                             3                516 6890  543 6842  516 6890  543 6842  496 6642
no boundary crossed          1               5538 2797 5750 2979 5538 2797 5750 2979 6069 3178
                             2               5611 2945 5798 3087 5521 2755 5743 2974 6061 3171
                             3               5246 3000 5626 3076 5246 3000 5626 3076 5976 3278
stop for futility at interim 1                  0    0    0    0    0    0    0    0    0    0
                             2                  0    0    0    0    0    0    0    0    0    0
                             3                  8    0    0    0    8    0    0    0    1    0
#+end_example

\clearpage

* Reversal probability

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Indicator of reversal
res2stage.reversal <- res2stage[, .(N = .N,
                                    futility2efficacy = (stage[1] == 1)*(reason[1] == "futility")*(stage[2] == 1)*(decision[2] == "efficacy"),
                                    efficacy2futility = (stage[1] == 1)*(reason[1] == "efficacy")*(stage[2] == 1)*(decision[2] == "futility")),
                                by = c("method","seed","scenario","missing","binding","fixC","ar","hypo")]
res2stage.reversal[is.na(futility2efficacy), futility2efficacy := 0]
res2stage.reversal[is.na(efficacy2futility), efficacy2futility := 0]
#+END_SRC

#+RESULTS:

Percentage of time we observe a reversal:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.reversal <- res2stage.reversal[, .(N = .N,
                                              fu2eff = 100*mean(futility2efficacy),
                                              eff2fu = 100*mean(efficacy2futility)),
                                          by = c("method","scenario","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res2stageS.reversal, scenario + N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint[order(tablePrint$scenario),.SD,.SDcols = setdiff(names(tablePrint),"scenario")])
#+END_SRC

#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power    TRUE 10    TRUE FALSE     0.57     0.61        0     0.17     0.20     1.07
 2: 10000 typeI    TRUE 10    TRUE FALSE     0.10     0.09        0     0.11     0.11     0.34
 3: 10000 power    TRUE  5    TRUE FALSE     0.08     0.08        0     0.07     0.07     0.67
 4: 10000 typeI    TRUE  5    TRUE FALSE     0.02     0.02        0     0.02     0.02     0.13
 5: 10000 power    TRUE 10    TRUE  TRUE     0.22     0.16        0     0.67     0.65     1.07
 6: 10000 typeI    TRUE 10    TRUE  TRUE     0.02     0.01        0     0.21     0.21     0.34
 7: 10000 power    TRUE  5    TRUE  TRUE     0.02     0.02        0     0.46     0.45     0.67
 8: 10000 typeI    TRUE  5    TRUE  TRUE     0.00     0.00        0     0.08     0.08     0.13
 9: 10000 power    TRUE 10   FALSE  TRUE     0.14     0.11        0     0.58     0.55     1.04
10: 10000 typeI    TRUE 10   FALSE  TRUE     0.00     0.00        0     0.20     0.19     0.33
11: 10000 power    TRUE  5   FALSE  TRUE     0.01     0.01        0     0.46     0.44     0.60
12: 10000 typeI    TRUE  5   FALSE  TRUE     0.00     0.00        0     0.06     0.06     0.09
13: 10000 power    TRUE 10   FALSE FALSE     0.41     0.42        0     0.21     0.22     1.04
14: 10000 typeI    TRUE 10   FALSE FALSE     0.00     0.00        0     0.12     0.12     0.33
15: 10000 power    TRUE  5   FALSE FALSE     0.03     0.03        0     0.04     0.04     0.60
16: 10000 typeI    TRUE  5   FALSE FALSE     0.00     0.00        0     0.01     0.01     0.09
17: 10000 power   FALSE  5    TRUE FALSE     0.06     0.07        0     0.04     0.04     0.63
18: 10000 typeI   FALSE  5    TRUE FALSE     0.01     0.01        0     0.01     0.01     0.12
#+end_example

#+LaTeX: \end{adjustwidth}


\clearpage

* Logical consistency of p-values/CIs

** Mismatch p-value / boundaries

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.PmismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(p.value_MUE<0.025, na.rm=TRUE)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.PmismatchFU <- dcast(res2stage.PmismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.PmismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.PmismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.PmismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(p.value_MUE>0.025, na.rm=TRUE)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.PmismatchEFF <- dcast(res2stage.PmismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.PmismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.PmismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

\clearpage

** Mismatch confidence intervals / boundaries

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.CImismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(lower_MUE>0, na.rm=TRUE)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.CImismatchFU <- dcast(res2stage.CImismatchFU, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.CImismatchFU[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.CImismatchFU),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2  method 3
 1: power    TRUE 10    TRUE FALSE        0        0 0.0000000
 2: typeI    TRUE 10    TRUE FALSE        0        0 0.0000000
 3: power    TRUE  5    TRUE FALSE        0        0 0.0000000
 4: typeI    TRUE  5    TRUE FALSE        0        0 0.0000000
 5: power    TRUE 10    TRUE  TRUE        0        0 0.0000000
 6: typeI    TRUE 10    TRUE  TRUE        0        0 0.0000000
 7: power    TRUE  5    TRUE  TRUE        0        0 0.0000000
 8: typeI    TRUE  5    TRUE  TRUE        0        0 0.0000000
 9: power    TRUE 10   FALSE  TRUE        0        0 7.8484438
10: typeI    TRUE 10   FALSE  TRUE        0        0 0.1747533
11: power    TRUE  5   FALSE  TRUE        0        0 4.1322314
12: typeI    TRUE  5   FALSE  TRUE        0        0 0.0821946
13: power    TRUE 10   FALSE FALSE        0        0 7.8484438
14: typeI    TRUE 10   FALSE FALSE        0        0 0.1747533
15: power    TRUE  5   FALSE FALSE        0        0 4.1322314
16: typeI    TRUE  5   FALSE FALSE        0        0 0.0821946
17: power   FALSE  5    TRUE FALSE        0        0 0.0000000
18: typeI   FALSE  5    TRUE FALSE        0        0 0.0000000
#+end_example

This only occurs with method 3 for non-binding futility rules and
concluding futility. Moreover in all occurence, recruitement in the
trial was stopped after the first interim and conclusion was reached at decision:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## find scenario & seed where mismatch occurs
mismatch.scenarseed <- res2stage[decision=="futility" & lower_MUE>0,paste0(scenario,"-",seed)]
## restrict dataset to scenario where mismatch occured
res2stage.mismatch <- res2stage[paste0(scenario,"-",seed) %in% mismatch.scenarseed]
## restrict dataset to method 3 where mismatch occured
res2stage.mismatchM3 <- res2stage.mismatch[method == 3]
## all decisions and reasons
table.decision <- res2stage.mismatchM3[, .N, by = c("stage","type","decision","reason")]
table.decision[,type := factor(type,unique(type))]
setkeyv(table.decision,c("stage","type"))
table.decision
#+END_SRC

#+RESULTS:
:    stage     type decision                       reason   N
: 1:     1  interim     stop                     futility  80
: 2:     1  interim     stop                     efficacy 322
: 3:     1 decision futility stop for futility at interim  16
: 4:     1 decision futility                         <NA> 386
: 5:     2    final     <NA>                         <NA> 402

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.mismatchM3[type=="decision",range(ck)]
#+END_SRC

#+RESULTS:
: [1] 1.959964 2.328656

- stopping for efficacy and then experiencing a reversal leading to
  conclude futility. When stopping for efficacy and concluding
  futility method 1 and 2 lead to adjusted p-value of 1 and issues
  when for confidence interval calculation.
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
mismatchE.scenarseed <- res2stage.mismatchM3[stage == 1 & type  == "interim" & reason == "efficacy",paste0(scenario,"-",seed)]


tableE.estimates <- res2stage[paste0(scenario,"-",seed) %in% mismatchE.scenarseed & !is.na(statistic),
                              .(.N,
                                "stat [range]"= ciNA(statistic, 2),
                                "p.value [range]"= ciNA(p.value_MUE, 4),
                                "lower.ci [range]"= ciNA(lower_MUE, 4)),
                              by=c("method","type","decision","reason")]
tableE.estimates[,type := factor(type,c("interim","decision","final"))]
setkeyv(tableE.estimates,c("method","type"))
tableE.estimates
#+END_SRC

#+RESULTS:
#+begin_example
    method     type decision              reason   N stat [range] p.value [range]          lower.ci [range]
 1:      1  interim continue no boundary crossed 100  [2.16;2.48]            <NA>                      <NA>
 2:      1  interim     stop            efficacy 222  [2.31;3.33]            <NA>                      <NA>
 3:      1 decision futility                <NA> 102  [1.61;1.95]           [1;1]  [-0.127;-0.1059] NA = 71
 4:      1 decision efficacy                <NA> 120  [1.64;2.31]  [0.005;0.0114]           [0.0791;0.1859]
 5:      1    final efficacy                <NA>  64  [2.03;4.02] [0.0069;0.0247]            [0.001;0.1405]
 6:      1    final futility                <NA>  36   [0.6;2.02] [0.0256;0.2733]         [-0.2788;-0.0021]
 7:      2  interim continue no boundary crossed 104   [2.16;2.5]            <NA>                      <NA>
 8:      2  interim     stop            efficacy 218  [2.31;3.33]            <NA>                      <NA>
 9:      2 decision futility                <NA>  99  [1.61;1.95]           [1;1] [-0.1414;-0.1063] NA = 70
10:      2 decision efficacy                <NA> 119  [1.64;2.31]  [0.005;0.0113]           [0.0786;0.1858]
11:      2    final efficacy                <NA>  66  [2.03;4.02] [0.0068;0.0247]             [0.001;0.142]
12:      2    final futility                <NA>  38   [0.6;2.02] [0.0255;0.2733]         [-0.2788;-0.0019]
13:      3  interim     stop            efficacy 322  [2.16;3.33]            <NA>                      <NA>
14:      3 decision futility                <NA> 322  [1.61;2.31]      [0.9922;1]           [0.0172;0.6026]
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
mismatchEstop2.scenarseed <- res2stage[paste0(scenario,"-",seed) %in% mismatchE.scenarseed & method == 2 & type == "interim" & decision == "stop", paste0(scenario,"-",seed)]
res2stage[paste0(scenario,"-",seed) %in% mismatchEstop2.scenarseed & method == 2 & type == "decision", paste0(scenario,"-",seed)[1], by = "decision"]
#+END_SRC

#+RESULTS:
:    decision          V1
: 1: futility 9-413883402
: 2: efficacy 9-341365344

- stopping for futility and conclude futility because the test
  statistic is low or in a few cases only because method 3 does not
  allow for a reversal. Method 1 and 2 always stopped for futility and
  either concluded futility or efficacy.
#+BEGIN_SRC R :exports both :results output :session *R* :cache no
mismatchF.scenarseed <- res2stage.mismatchM3[stage == 1 & type  == "interim" & reason == "futility",paste0(scenario,"-",seed)]
tableF.estimates <- res2stage[paste0(scenario,"-",seed) %in% mismatchF.scenarseed & !is.na(statistic),
                              .(.N,
                                "stat [range]"= ciNA(statistic, 2),
                                "p.value [range]"= ciNA(p.value_MUE, 4),
                                "lower.ci [range]"= ciNA(lower_MUE, 4)),
                              by=c("method","type","decision","reason")]
tableF.estimates[,type := factor(type,c("interim","decision","final"))]
setkeyv(tableF.estimates,c("method","type"))
tableF.estimates
#+END_SRC

#+RESULTS:
#+begin_example
   method     type decision                       reason  N stat [range] p.value [range]          lower.ci [range]
1:      1  interim     stop                     futility 80 [-0.14;0.91]            <NA>                      <NA>
2:      1 decision efficacy                         <NA> 37  [1.66;2.65]   [0.0029;0.01]           [0.0937;0.1935]
3:      1 decision futility                         <NA> 43   [1.55;1.9]           [1;1] [-0.1307;-0.1083] NA = 33
4:      2  interim     stop                     futility 80 [-0.14;0.91]            <NA>                      <NA>
5:      2 decision efficacy                         <NA> 35  [1.66;2.65] [0.0029;0.0101]           [0.0927;0.1933]
6:      2 decision futility                         <NA> 45   [1.55;1.9]           [1;1] [-0.1305;-0.1089] NA = 35
7:      3  interim     stop                     futility 80 [-0.14;0.91]            <NA>                      <NA>
8:      3 decision futility stop for futility at interim 16  [1.98;2.65] [0.9937;0.9983]            [0.3614;0.444]
9:      3 decision futility                         <NA> 64  [1.55;2.03]      [0.9971;1]           [0.0115;0.4721]
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage[paste0(scenario,"-",seed) %in% mismatchF.scenarseed & method == 2 & type == "decision", paste0(scenario,"-",seed)[1], by = "decision"]
#+END_SRC

#+RESULTS:
:    decision          V1
: 1: efficacy 9-996631745
: 2: futility 9-657706742


When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.CImismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(lower_MUE<0, na.rm=TRUE)),
                                  by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2stageW.CImismatchEFF <- dcast(res2stage.CImismatchEFF, scenario + hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
res2stageW.CImismatchEFF[order(scenario),.SD,.SDcols = setdiff(names(res2stageW.CImismatchEFF),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power    TRUE 10    TRUE FALSE        0        0        0
 2: typeI    TRUE 10    TRUE FALSE        0        0        0
 3: power    TRUE  5    TRUE FALSE        0        0        0
 4: typeI    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE 10    TRUE  TRUE        0        0        0
 6: typeI    TRUE 10    TRUE  TRUE        0        0        0
 7: power    TRUE  5    TRUE  TRUE        0        0        0
 8: typeI    TRUE  5    TRUE  TRUE        0        0        0
 9: power    TRUE 10   FALSE  TRUE        0        0        0
10: typeI    TRUE 10   FALSE  TRUE        0        0        0
11: power    TRUE  5   FALSE  TRUE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: power    TRUE 10   FALSE FALSE        0        0        0
14: typeI    TRUE 10   FALSE FALSE        0        0        0
15: power    TRUE  5   FALSE FALSE        0        0        0
16: typeI    TRUE  5   FALSE FALSE        0        0        0
17: power   FALSE  5    TRUE FALSE        0        0        0
18: typeI   FALSE  5    TRUE FALSE        0        0        0
#+end_example

** Range of p-values

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2.stage.rangep <- res2stage[,.(range.p_MUE = paste0("[",paste(round(range(p.value_MUE, na.rm = TRUE),4), collapse = ";"),"]")),
                               by = c("method.char","scenario","missing","binding","fixC","ar","hypo")]
res2W.stage.rangep <- dcast(res2.stage.rangep, scenario+missing+binding+fixC+ar+hypo~method.char, value.var = "range.p_MUE")
res2W.stage.rangep[order(scenario),.SD,.SDcols = setdiff(names(res2W.stage.rangep),"scenario")]
#+END_SRC

#+RESULTS:
#+begin_example
    missing binding  fixC ar  hypo        method 1        method 2       method 3
 1:    TRUE    TRUE FALSE 10 power      [0;0.9147]      [0;0.9147]     [0;0.9147]
 2:    TRUE    TRUE FALSE 10 typeI  [1e-04;0.9999]  [1e-04;0.9999] [1e-04;0.9999]
 3:    TRUE    TRUE FALSE  5 power      [0;0.9015]      [0;0.9015]     [0;0.9015]
 4:    TRUE    TRUE FALSE  5 typeI  [1e-04;0.9998]  [1e-04;0.9998] [1e-04;0.9998]
 5:    TRUE    TRUE  TRUE 10 power  [7e-04;0.9147]  [7e-04;0.9147]     [0;0.9147]
 6:    TRUE    TRUE  TRUE 10 typeI [0.0016;0.9999] [0.0016;0.9999] [1e-04;0.9999]
 7:    TRUE    TRUE  TRUE  5 power  [1e-04;0.9015]  [1e-04;0.9015]     [0;0.9015]
 8:    TRUE    TRUE  TRUE  5 typeI  [5e-04;0.9998]  [5e-04;0.9998] [1e-04;0.9998]
 9:    TRUE   FALSE  TRUE 10 power       [8e-04;1]       [8e-04;1]          [0;1]
10:    TRUE   FALSE  TRUE 10 typeI      [0.0015;1]      [0.0015;1]      [5e-04;1]
11:    TRUE   FALSE  TRUE  5 power       [1e-04;1]       [1e-04;1]          [0;1]
12:    TRUE   FALSE  TRUE  5 typeI       [6e-04;1]       [5e-04;1]      [2e-04;1]
13:    TRUE   FALSE FALSE 10 power           [0;1]           [0;1]          [0;1]
14:    TRUE   FALSE FALSE 10 typeI       [1e-04;1]       [1e-04;1]      [5e-04;1]
15:    TRUE   FALSE FALSE  5 power           [0;1]           [0;1]          [0;1]
16:    TRUE   FALSE FALSE  5 typeI           [0;1]           [0;1]      [2e-04;1]
17:   FALSE    TRUE FALSE  5 power      [0;0.9642]      [0;0.9642]     [0;0.9642]
18:   FALSE    TRUE FALSE  5 typeI           [0;1]           [0;1]      [3e-04;1]
#+end_example

\clearpage

* Coverage

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.coverage <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = 100*mean( (lower_MUE <= truth) & (truth <= upper_MUE), na.rm = TRUE)),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.coverage, hypo + missing + ar + binding + fixC ~ method.char, value.var = "coverage")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE 94.79000 94.79000 94.92000
 2: power    TRUE  5   FALSE FALSE 95.86382 95.86207 95.66505
 3: power    TRUE  5   FALSE  TRUE 96.30458 96.26486 95.66505
 4: power    TRUE  5    TRUE FALSE 94.74000 94.74000 94.87000
 5: power    TRUE  5    TRUE  TRUE 95.08000 95.08000 94.87000
 6: power    TRUE 10   FALSE FALSE 95.98172 96.04941 95.75968
 7: power    TRUE 10   FALSE  TRUE 96.79139 96.75297 95.75968
 8: power    TRUE 10    TRUE FALSE 94.84000 94.82000 95.12000
 9: power    TRUE 10    TRUE  TRUE 95.73000 95.65000 95.12000
10: typeI   FALSE  5    TRUE FALSE 95.14000 95.14000 95.15000
11: typeI    TRUE  5   FALSE FALSE 94.86949 94.86949 95.39954
12: typeI    TRUE  5   FALSE  TRUE 94.91695 94.90745 95.39954
13: typeI    TRUE  5    TRUE FALSE 94.82000 94.82000 94.87000
14: typeI    TRUE  5    TRUE  TRUE 94.90000 94.91000 94.87000
15: typeI    TRUE 10   FALSE FALSE 95.01402 95.01402 96.04407
16: typeI    TRUE 10   FALSE  TRUE 95.09116 95.07162 96.04407
17: typeI    TRUE 10    TRUE FALSE 95.16000 95.19000 95.21000
18: typeI    TRUE 10    TRUE  TRUE 95.34000 95.36000 95.21000
#+end_example

Average width of the confidence intervals
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.width <- res2stage[decision %in% c("futility","efficacy"),
                             .(N = .N,
                               width.naive = mean(upper_ML-lower_ML, na.rm = TRUE),
                               width.MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE)),
                             by = c("method.char","missing","binding","fixC","ar","hypo")]
res2stage.width[, width.ratio := width.MUE/width.naive]
dcast(res2stage.width, hypo + missing + ar + binding + fixC ~ method.char, value.var = "width.ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC  method 1  method 2 method 3
 1: power   FALSE  5    TRUE FALSE 1.0517981 1.0518066 1.053592
 2: power    TRUE  5   FALSE FALSE 1.0355785 1.0355525 1.030753
 3: power    TRUE  5   FALSE  TRUE 1.0410966 1.0414270 1.030753
 4: power    TRUE  5    TRUE FALSE 1.0513207 1.0513607 1.052634
 5: power    TRUE  5    TRUE  TRUE 1.0570088 1.0563598 1.052629
 6: power    TRUE 10   FALSE FALSE 1.0469276 1.0468858 1.039428
 7: power    TRUE 10   FALSE  TRUE 1.0634581 1.0625586 1.039438
 8: power    TRUE 10    TRUE FALSE 1.0624494 1.0626858 1.062576
 9: power    TRUE 10    TRUE  TRUE 1.0765867 1.0753692 1.062555
10: typeI   FALSE  5    TRUE FALSE 1.0431774 1.0431218 1.046821
11: typeI    TRUE  5   FALSE FALSE 0.9997886 0.9998440 1.018905
12: typeI    TRUE  5   FALSE  TRUE 0.9996979 0.9996859 1.018905
13: typeI    TRUE  5    TRUE FALSE 1.0416221 1.0415882 1.045180
14: typeI    TRUE  5    TRUE  TRUE 1.0416986 1.0423673 1.045180
15: typeI    TRUE 10   FALSE FALSE 1.0182710 1.0227130 1.049875
16: typeI    TRUE 10   FALSE  TRUE 1.0183637 1.0101640 1.049882
17: typeI    TRUE 10    TRUE FALSE 1.0459447 1.0453954 1.056218
18: typeI    TRUE 10    TRUE  TRUE 1.0461003 1.0478314 1.056215
#+end_example

Average ratio between the length of the MUE CIs vs. the ML CIs
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.length <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  length_MUE = mean(upper_MUE-lower_MUE, na.rm = TRUE),
                                  length_ML = mean(upper_ML-lower_ML, na.rm = TRUE),
                                  length_ratio = mean((upper_MUE-lower_MUE)/(upper_ML-lower_ML), na.rm = TRUE)),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.length, hypo + missing + ar + binding + fixC ~ method.char, value.var = "length_ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC  method 1  method 2 method 3
 1: power   FALSE  5    TRUE FALSE 1.0554164 1.0554324 1.057018
 2: power    TRUE  5   FALSE FALSE 1.0477000 1.0477317 1.043003
 3: power    TRUE  5   FALSE  TRUE 1.0532445 1.0529897 1.043003
 4: power    TRUE  5    TRUE FALSE 1.0556658 1.0557135 1.056796
 5: power    TRUE  5    TRUE  TRUE 1.0607293 1.0599867 1.056792
 6: power    TRUE 10   FALSE FALSE 1.0539283 1.0540501 1.045799
 7: power    TRUE 10   FALSE  TRUE 1.0695786 1.0683330 1.045809
 8: power    TRUE 10    TRUE FALSE 1.0641965 1.0644562 1.064036
 9: power    TRUE 10    TRUE  TRUE 1.0773006 1.0760174 1.064016
10: typeI   FALSE  5    TRUE FALSE 1.0496649 1.0496083 1.053799
11: typeI    TRUE  5   FALSE FALSE 0.9997633 0.9998237 1.019473
12: typeI    TRUE  5   FALSE  TRUE 0.9998075 0.9997468 1.019473
13: typeI    TRUE  5    TRUE FALSE 1.0486330 1.0486034 1.052752
14: typeI    TRUE  5    TRUE  TRUE 1.0487063 1.0493717 1.052752
15: typeI    TRUE 10   FALSE FALSE 1.0194380 1.0240187 1.051009
16: typeI    TRUE 10   FALSE  TRUE 1.0196328 1.0111242 1.051015
17: typeI    TRUE 10    TRUE FALSE 1.0497075 1.0491459 1.060913
18: typeI    TRUE 10    TRUE  TRUE 1.0498579 1.0516113 1.060910
#+end_example

\clearpage

* Percentage of missing values

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.nXinterim <- res2stage[,.(N = .N, nX1 = unique(nX1.interim), nX2 = unique(nX2.interim), nX3 = unique(nX3.interim)),
                                 by = c("method","missing","ar","seed","binding","fixC","hypo")]
all(res2stage.nXinterim$N==3)

res2stageS.nXinterim <- res2stage.nXinterim[, .(N = .N,
                                                pc.all = 100*mean(nX3/nX1),
                                                pc.missing3 = 100*mean(nX2/nX1-nX3/nX1),
                                                pc.missing23 = 100*mean(1-nX2/nX1)),
                                            by = c("method","missing","ar","hypo","fixC","binding")]

setkeyv(res2stageS.nXinterim,"ar")
#+END_SRC

#+RESULTS:
: [1] FALSE

At the first interim
- =pc.all= percentage of observations with full data (with respect to
  all observations, i.e. patients with baseline measurement)
- =pc.missing3= percentage of observations missing the final outcome
  but with intermediate outcome value and baseline.
- =pc.missing23= percentage of observations with only baseline value

Here only for method 1 - values are very similar between different
methods:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.nXinterim[method==1]
#+END_SRC

#+RESULTS:
#+begin_example
    method missing ar  hypo  fixC binding     N   pc.all pc.missing3 pc.missing23
 1:      1    TRUE  5 power FALSE    TRUE 10000 79.52088    9.591086    10.888036
 2:      1    TRUE  5 typeI FALSE    TRUE 10000 79.52088    9.591086    10.888036
 3:      1    TRUE  5 power  TRUE    TRUE 10000 79.52088    9.591086    10.888036
 4:      1    TRUE  5 typeI  TRUE    TRUE 10000 79.52088    9.591086    10.888036
 5:      1    TRUE  5 power  TRUE   FALSE 10000 79.64470    9.441772    10.913523
 6:      1    TRUE  5 typeI  TRUE   FALSE 10000 79.64470    9.441772    10.913523
 7:      1    TRUE  5 power FALSE   FALSE 10000 79.64470    9.441772    10.913523
 8:      1    TRUE  5 typeI FALSE   FALSE 10000 79.64470    9.441772    10.913523
 9:      1   FALSE  5 power FALSE    TRUE 10000 87.78863    6.090240     6.121126
10:      1   FALSE  5 typeI FALSE    TRUE 10000 87.78863    6.090240     6.121126
11:      1    TRUE 10 power FALSE    TRUE 10000 71.59741   13.353880    15.048710
12:      1    TRUE 10 typeI FALSE    TRUE 10000 71.59741   13.353880    15.048710
13:      1    TRUE 10 power  TRUE    TRUE 10000 71.59741   13.353880    15.048710
14:      1    TRUE 10 typeI  TRUE    TRUE 10000 71.59741   13.353880    15.048710
15:      1    TRUE 10 power  TRUE   FALSE 10000 71.79650   13.161615    15.041889
16:      1    TRUE 10 typeI  TRUE   FALSE 10000 71.79650   13.161615    15.041889
17:      1    TRUE 10 power FALSE   FALSE 10000 71.79650   13.161615    15.041889
18:      1    TRUE 10 typeI FALSE   FALSE 10000 71.79650   13.161615    15.041889
#+end_example

\clearpage

* Information

Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt.info <- res2stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt.info[, type := factor(type, c("interim","decision","final"))]
tablePrint <- dcast(dt.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type,
                    value.var = "infoPC")
print(tablePrint, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar  interim decision     final
        1    TRUE    TRUE FALSE 10 54.63712 75.34460 102.69691
        2    TRUE    TRUE FALSE 10 54.63712 74.98217 102.36588
        3    TRUE    TRUE FALSE  5 53.26864 64.03618 102.73604
        4    TRUE    TRUE FALSE  5 53.26864 63.58436 102.37416
        5    TRUE    TRUE  TRUE 10 54.63712 75.34460 102.69691
        6    TRUE    TRUE  TRUE 10 54.63712 74.98217 102.36588
        7    TRUE    TRUE  TRUE  5 53.26864 64.03618 102.73604
        8    TRUE    TRUE  TRUE  5 53.26864 63.58436 102.37416
        9    TRUE   FALSE  TRUE 10 54.50012 74.96442 102.53821
       10    TRUE   FALSE  TRUE 10 54.50012 75.17490 103.12700
       11    TRUE   FALSE  TRUE  5 53.15854 63.71662 102.62539
       12    TRUE   FALSE  TRUE  5 53.15854 64.60960 103.12516
       13    TRUE   FALSE FALSE 10 54.50012 74.96442 102.53821
       14    TRUE   FALSE FALSE 10 54.50012 75.17490 103.12700
       15    TRUE   FALSE FALSE  5 53.15854 63.71662 102.62539
       16    TRUE   FALSE FALSE  5 53.15854 64.60960 103.12516
       17   FALSE    TRUE FALSE  5 52.06840 63.77019  99.96969
       18   FALSE    TRUE FALSE  5 52.06840 63.21929  99.62860
#+end_example

Similar results for other methods.

# @@latex:any arbitrary LaTeX code@@

* TOFIX :noexport:

** Scenario 9 and 10 have missing seeds --> debug
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
missing.seed <- res2stage[scenario == 9 & method.char == "method 1", setdiff(unique(res2stage$seed),unique(seed))][1]
res2stage[seed == missing.seed, unique(scenario)]
missing.seed
res2stage[scenario == 9,][1]
#+END_SRC

#+RESULTS:
#+begin_example
 [1]  1  2  3  4  5  6  7  8 11 12 13 14 15 16 17 18
[1] 784442348
   scenario missing binding fixC ar  hypo method stage    type statistic estimate_ML     se_ML p.value_ML
1:        9    TRUE   FALSE TRUE 10 power      1     1 interim  2.393698   0.6926455 0.2893622         NA
   lower_ML upper_ML estimate_MUE p.value_MUE lower_MUE upper_MUE     info    infoPC info.pred infoPC.pred
1:       NA       NA           NA          NA        NA        NA 11.94309 0.5128065  15.14563   0.6503159
         uk       lk ck decision              reason time.interim nX1.interim nX2.interim nX2.interim
1: 2.479721 0.453321 NA continue no boundary crossed          143         342         298         298
        seed method.char stage.char truth
1: 312274104    method 1    interim   0.6
#+end_example


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
missing.seed <- res2stage[scenario == 10 & method.char == "method 1", setdiff(unique(res2stage$seed),unique(seed))][1]
res2stage[seed == missing.seed, unique(scenario)]
missing.seed
res2stage[scenario == 10,][1]
#+END_SRC

#+RESULTS:
#+begin_example
 [1]  1  2  3  4  5  6  7  8  9 11 12 13 14 15 16 17 18
[1] 835421350
   scenario missing binding fixC ar  hypo method stage    type statistic estimate_ML     se_ML p.value_ML
1:       10    TRUE   FALSE TRUE 10 typeI      1     1 interim 0.3201715  0.09264553 0.2893622         NA
   lower_ML upper_ML estimate_MUE p.value_MUE lower_MUE upper_MUE     info    infoPC info.pred infoPC.pred
1:       NA       NA           NA          NA        NA        NA 11.94309 0.5128065  15.14563   0.6503159
         uk       lk ck decision   reason time.interim nX1.interim nX2.interim nX2.interim      seed
1: 2.479721 0.453321 NA     stop futility          143         342         298         298 312274104
   method.char stage.char truth
1:    method 1    interim     0
#+end_example



* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [12pt]
#+OPTIONS:   title:t author:t toc:nil todo:nil
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t
#+LATEX_HEADER: %
#+LATEX_HEADER: %%%% specifications %%%%
#+LATEX_HEADER: %
** Latex command
#+LATEX_HEADER: \usepackage{ifthen}
#+LATEX_HEADER: \usepackage{xifthen}
#+LATEX_HEADER: \usepackage{xargs}
#+LATEX_HEADER: \usepackage{xspace}
#+LATEX_HEADER: \newcommand\Rlogo{\textbf{\textsf{R}}\xspace} % 
** Notations

** Code
# Documentation at https://org-babel.readthedocs.io/en/latest/header-args/#results
# :tangle (yes/no/filename) extract source code with org-babel-tangle-file, see http://orgmode.org/manual/Extracting-source-code.html 
# :cache (yes/no)
# :eval (yes/no/never)
# :results (value/output/silent/graphics/raw/latex)
# :export (code/results/none/both)
#+PROPERTY: header-args :session *R* :tangle yes :cache no ## extra argument need to be on the same line as :session *R*
# Code display:
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}
# ## change font size input
# ## #+ATTR_LATEX: :options basicstyle=\ttfamily\scriptsize
# ## change font size output
# ## \RecustomVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\tiny,formatcom = {\color[rgb]{0.5,0,0}}}
** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: \RequirePackage{setspace} % to modify the space between lines - incompatible with footnote in beamer
#+LaTeX_HEADER:\renewcommand{\baselinestretch}{1.1}
#+LATEX_HEADER:\geometry{top=1cm}
#+LATEX_HEADER: \RequirePackage{changepage}

#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
# ## valid and cross symbols
#+LaTeX_HEADER: \RequirePackage{pifont}
#+LaTeX_HEADER: \RequirePackage{relsize}
#+LaTeX_HEADER: \newcommand{\Cross}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{56}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\Valid}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{52}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\CrossR}{ \textcolor{red}{\Cross} }
#+LaTeX_HEADER: \newcommand{\ValidV}{ \textcolor{green}{\Valid} }
# ## warning symbol
#+LaTeX_HEADER: \usepackage{stackengine}
#+LaTeX_HEADER: \usepackage{scalerel}
#+LaTeX_HEADER: \newcommand\Warning[1][3ex]{%
#+LaTeX_HEADER:   \renewcommand\stacktype{L}%
#+LaTeX_HEADER:   \scaleto{\stackon[1.3pt]{\color{red}$\triangle$}{\tiny\bfseries !}}{#1}%
#+LaTeX_HEADER:   \xspace
#+LaTeX_HEADER: }
# # change the color of the links
#+LaTeX_HEADER: \hypersetup{
#+LaTeX_HEADER:  citecolor=[rgb]{0,0.5,0},
#+LaTeX_HEADER:  urlcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER:  linkcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER: }
** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files
#+LATEX_HEADER: \RequirePackage{capt-of} % 
#+LATEX_HEADER: \RequirePackage{caption} % newlines in graphics
** List
#+LATEX_HEADER: \RequirePackage{enumitem} % to be able to convert .eps to .pdf image files
** Color
#+LaTeX_HEADER: \definecolor{light}{rgb}{1, 1, 0.9}
#+LaTeX_HEADER: \definecolor{lightred}{rgb}{1.0, 0.7, 0.7}
#+LaTeX_HEADER: \definecolor{lightblue}{rgb}{0.0, 0.8, 0.8}
#+LaTeX_HEADER: \newcommand{\darkblue}{blue!80!black}
#+LaTeX_HEADER: \newcommand{\darkgreen}{green!50!black}
#+LaTeX_HEADER: \newcommand{\darkred}{red!50!black}
** Box
#+LATEX_HEADER: \usepackage{mdframed}
** Shortcut
#+LATEX_HEADER: \newcommand{\first}{1\textsuperscript{st} }
#+LATEX_HEADER: \newcommand{\second}{2\textsuperscript{nd} }
#+LATEX_HEADER: \newcommand{\third}{3\textsuperscript{rd} }
