#+TITLE: Results simulation study DelayedGSD
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
# Path
if(Sys.info()["login"] == "bozenne"){
}else if(Sys.info()["login"] == "hpl802"){
  setwd("x:/DelayedGSD/")
}
options(width = 110)

library(data.table)
library(ggplot2)
#+END_SRC

#+RESULTS:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res2stage <- readRDS(file.path("Results-built","res2stage.rds"))
res2stage[, method.char := paste0("method ",method)]
res2stage[, stage.char := factor(stage, 1:2, c("interim","final"))]
#+END_SRC

#+RESULTS:

* Rejection rate

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res2stage.rejection <- res2stage[,.(N = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res2stageS.rejection <- res2stage.rejection[,.(N = .N, rejectionRate = 100*mean(rejection)),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH1 <- dcast(res2stageS.rejection[hypo=="power"],
                      scenario + N + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(tablePrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10    81.00    80.79    80.45
        3 10000    TRUE    TRUE FALSE  5    80.60    80.45    80.21
        5 10000    TRUE    TRUE  TRUE 10    79.81    80.41    80.39
        7 10000    TRUE    TRUE  TRUE  5    80.00    80.46    80.08
        9 10000    TRUE   FALSE  TRUE 10    80.50    80.85    80.91
       11 10000    TRUE   FALSE  TRUE  5    80.73    80.82    80.75
       13 10000    TRUE   FALSE FALSE 10    80.67    80.60    80.65
       15 10000    TRUE   FALSE FALSE  5    80.65    80.64    80.46
       17 10000   FALSE    TRUE FALSE  5    80.31    80.28    79.93
#+end_example
\Warning slightly too high power for some scenario

\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH0 <- dcast(res2stageS.rejection[hypo=="typeI"],
                    scenario + N + missing + binding + fixC + ar ~ method.char,
                    value.var = "rejectionRate")
print(tablePrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10     2.46     2.53     2.40
        4 10000    TRUE    TRUE FALSE  5     2.42     2.41     2.40
        6 10000    TRUE    TRUE  TRUE 10     2.25     2.25     2.45
        8 10000    TRUE    TRUE  TRUE  5     2.42     2.39     2.50
       10 10000    TRUE   FALSE  TRUE 10     2.16     2.18     2.31
       12 10000    TRUE   FALSE  TRUE  5     2.36     2.35     2.38
       14 10000    TRUE   FALSE FALSE 10     2.44     2.44     2.58
       16 10000    TRUE   FALSE FALSE  5     2.51     2.50     2.58
       18 10000   FALSE    TRUE FALSE  5     2.46     2.44     2.45
#+end_example
Type 1 error slightly below nominal level when fixC is TRUE (as expected?)

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the p-value:
gg.P <- ggplot(res2stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P <- gg.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P <- gg.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P, filename = file.path("report","figures","gg-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.P2 <- ggplot(res2stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P2 <- gg.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P2 <- gg.P2 + coord_cartesian(xlim = c(0,0.05))
gg.P2 <- gg.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P2, filename = file.path("report","figures","gg-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg-pvalue2-density.pdf]]

\clearpage

* Conclusion of the trial

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stageS.final <- res2stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                decision.eff = 100*mean((stage == 1)*(decision == "efficacy")),
                                decision.fut = 100*mean((stage == 1)*(decision == "futility")),
                                final.eff = 100*mean((stage == 2)*(decision == "efficacy")),
                                final.fut = 100*mean((stage == 2)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.82         6.05     43.18      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.79        70.85      1.67      26.7
 3: 10000    TRUE power    TRUE FALSE  5        35.60         6.02     45.00      13.4
 4: 10000    TRUE typeI    TRUE FALSE  5         0.68        69.21      1.74      28.4
 5: 10000    TRUE power    TRUE  TRUE 10        36.45         6.53     43.36      13.7
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.64        71.29      1.61      26.5
 7: 10000    TRUE power    TRUE  TRUE  5        34.68         5.86     45.32      14.1
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.72        69.11      1.70      28.5
 9: 10000    TRUE power   FALSE  TRUE 10        37.57         6.63     42.93      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.57         0.28      1.59      97.6
11: 10000    TRUE power   FALSE  TRUE  5        36.02         6.28     44.71      13.0
12: 10000    TRUE typeI   FALSE  TRUE  5         0.73         0.09      1.63      97.5
13: 10000    TRUE power   FALSE FALSE 10        38.32         5.87     42.35      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.09      1.75      97.5
15: 10000    TRUE power   FALSE FALSE  5        36.75         5.70     43.90      13.6
16: 10000    TRUE typeI   FALSE FALSE  5         0.67         0.00      1.84      97.5
17: 10000   FALSE power    TRUE FALSE  5        33.98         5.33     46.33      14.4
18: 10000   FALSE typeI    TRUE FALSE  5         0.74        67.48      1.72      30.1
#+end_example

\clearpage

Method 2:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.66         6.22     43.13      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.85        71.18      1.68      26.3
 3: 10000    TRUE power    TRUE FALSE  5        35.55         6.10     44.90      13.5
 4: 10000    TRUE typeI    TRUE FALSE  5         0.67        69.05      1.74      28.5
 5: 10000    TRUE power    TRUE  TRUE 10        36.82         5.94     43.59      13.6
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.63        70.02      1.62      27.7
 7: 10000    TRUE power    TRUE  TRUE  5        35.06         5.63     45.40      13.9
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.71        68.46      1.68      29.1
 9: 10000    TRUE power   FALSE  TRUE 10        37.76         6.21     43.09      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.56         0.26      1.62      97.6
11: 10000    TRUE power   FALSE  TRUE  5        36.07         6.10     44.75      13.1
12: 10000    TRUE typeI   FALSE  TRUE  5         0.72         0.07      1.63      97.6
13: 10000    TRUE power   FALSE FALSE 10        38.33         6.11     42.27      13.3
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.09      1.75      97.5
15: 10000    TRUE power   FALSE FALSE  5        36.78         5.72     43.86      13.6
16: 10000    TRUE typeI   FALSE FALSE  5         0.66         0.01      1.84      97.5
17: 10000   FALSE power    TRUE FALSE  5        33.68         5.17     46.60      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.72        67.42      1.72      30.1
#+end_example

\clearpage

Method 3:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC
#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        40.44         6.54     40.01      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.74        68.77      1.66      28.8
 3: 10000    TRUE power    TRUE FALSE  5        36.49         6.42     43.72      13.4
 4: 10000    TRUE typeI    TRUE FALSE  5         0.68        68.37      1.72      29.2
 5: 10000    TRUE power    TRUE  TRUE 10        39.85         5.83     40.54      13.8
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.73        68.89      1.72      28.7
 7: 10000    TRUE power    TRUE  TRUE  5        35.70         5.81     44.38      14.1
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.78        68.26      1.72      29.2
 9: 10000    TRUE power   FALSE  TRUE 10        41.03         6.39     39.88      12.7
10: 10000    TRUE typeI   FALSE  TRUE 10         0.72         0.38      1.59      97.3
11: 10000    TRUE power   FALSE  TRUE  5        37.08         6.14     43.67      13.1
12: 10000    TRUE typeI   FALSE  TRUE  5         0.74         0.14      1.64      97.5
13: 10000    TRUE power   FALSE FALSE 10        41.47         6.05     39.18      13.3
14: 10000    TRUE typeI   FALSE FALSE 10         0.81         0.31      1.77      97.1
15: 10000    TRUE power   FALSE FALSE  5        37.37         5.86     43.09      13.7
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.08      1.83      97.3
17: 10000   FALSE power    TRUE FALSE  5        34.66         5.58     45.27      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.68        66.54      1.77      31.0
#+end_example

\clearpage

* Bias (True effect: 0.6 under the alternative)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
true_eff <- 0.6

## For each run, error made by each estimator
res2stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res2stage.bias <- res2stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res2stage.bias$N==1)

res2stageS.bias <- res2stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar  biasMLE1  biasMLE2  biasMLE3  biasMUE1  biasMUE2 biasMUE3
 1: power    TRUE    TRUE FALSE 10  0.012970  0.013058  0.014139  0.005472  0.005564  0.00216
 2: typeI    TRUE    TRUE FALSE 10 -0.018416 -0.018430 -0.018509 -0.004261 -0.004326 -0.00464
 3: power    TRUE    TRUE FALSE  5  0.022430  0.022231  0.023386  0.010079  0.010156  0.00864
 4: typeI    TRUE    TRUE FALSE  5 -0.030419 -0.030822 -0.030577 -0.011757 -0.012140 -0.01213
 5: power    TRUE    TRUE  TRUE 10  0.011558  0.012119  0.012968  0.001017  0.001972  0.00212
 6: typeI    TRUE    TRUE  TRUE 10 -0.022074 -0.022256 -0.022266 -0.008120 -0.008149 -0.00830
 7: power    TRUE    TRUE  TRUE  5  0.021638  0.022029  0.022692  0.008407  0.008660  0.00842
 8: typeI    TRUE    TRUE  TRUE  5 -0.033857 -0.034379 -0.034138 -0.014560 -0.014719 -0.01503
 9: power    TRUE   FALSE  TRUE 10  0.015026  0.015050  0.016312  0.000405  0.000655  0.00121
10: typeI    TRUE   FALSE  TRUE 10  0.000543  0.000547  0.000883  0.001271  0.001309  0.00208
11: power    TRUE   FALSE  TRUE  5  0.024204  0.024192  0.025190  0.006976  0.006478  0.00759
12: typeI    TRUE   FALSE  TRUE  5  0.001472  0.001451  0.001545  0.001680  0.001708  0.00172
13: power    TRUE   FALSE FALSE 10  0.014415  0.014146  0.015747  0.003384  0.002971  0.00239
14: typeI    TRUE   FALSE FALSE 10  0.000139  0.000139  0.000555  0.000611  0.000628  0.00181
15: power    TRUE   FALSE FALSE  5  0.023380  0.023344  0.024346  0.008843  0.008827  0.00767
16: typeI    TRUE   FALSE FALSE  5  0.000602  0.000602  0.000949  0.000637  0.000599  0.00125
17: power   FALSE    TRUE FALSE  5  0.022836  0.022825  0.023807  0.011971  0.012078  0.01031
18: typeI   FALSE    TRUE FALSE  5 -0.029516 -0.029722 -0.029915 -0.011048 -0.011395 -0.01144
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0250    0.0240    0.0266   -0.0023   -0.0017   -0.0062
 2: typeI    TRUE    TRUE FALSE 10   -0.0193   -0.0198   -0.0223    0.0002   -0.0013    0.0001
 3: power    TRUE    TRUE FALSE  5    0.0387    0.0382    0.0406   -0.0030   -0.0016   -0.0026
 4: typeI    TRUE    TRUE FALSE  5   -0.0346   -0.0339   -0.0361    0.0000   -0.0002    0.0001
 5: power    TRUE    TRUE  TRUE 10    0.0164    0.0188    0.0179   -0.0132   -0.0126   -0.0101
 6: typeI    TRUE    TRUE  TRUE 10   -0.0327   -0.0314   -0.0347   -0.0113   -0.0079   -0.0099
 7: power    TRUE    TRUE  TRUE  5    0.0356    0.0369    0.0361   -0.0106   -0.0114   -0.0082
 8: typeI    TRUE    TRUE  TRUE  5   -0.0473   -0.0492   -0.0493   -0.0105   -0.0081   -0.0105
 9: power    TRUE   FALSE  TRUE 10    0.0328    0.0301    0.0345   -0.0089   -0.0106   -0.0055
10: typeI    TRUE   FALSE  TRUE 10    0.0007   -0.0019    0.0007    0.0024   -0.0005    0.0034
11: power    TRUE   FALSE  TRUE  5    0.0479    0.0459    0.0499   -0.0049   -0.0048   -0.0034
12: typeI    TRUE   FALSE  TRUE  5    0.0009   -0.0017    0.0009    0.0012   -0.0012    0.0020
13: power    TRUE   FALSE FALSE 10    0.0326    0.0324    0.0339   -0.0033   -0.0036   -0.0004
14: typeI    TRUE   FALSE FALSE 10   -0.0039   -0.0039   -0.0037   -0.0031   -0.0030   -0.0011
15: power    TRUE   FALSE FALSE  5    0.0442    0.0442    0.0465   -0.0010   -0.0010   -0.0037
16: typeI    TRUE   FALSE FALSE  5   -0.0039   -0.0039   -0.0039   -0.0039   -0.0039   -0.0028
17: power   FALSE    TRUE FALSE  5    0.0383    0.0378    0.0400   -0.0026   -0.0008   -0.0046
18: typeI   FALSE    TRUE FALSE  5   -0.0329   -0.0336   -0.0353    0.0044    0.0031    0.0035
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

* Distribution of the estimates

Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg.E <- ggplot(dt.estimate) + facet_grid(scenario~method.char)
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg.E <- gg.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg.E <- gg.E + geom_vline(aes(xintercept = truth), color = "purple")
gg.E <- gg.E + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))

ggsave(gg.E, filename = file.path("report","figures","gg-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg.E %+% dt.estimate[scenario == 1], filename = file.path("report","figures","gg-estimate-density-scenario1.pdf") )
#+END_SRC

#+RESULTS:
: [1m[22mSaving 13.3 x 6.21 in image

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg-estimate-density.pdf]]

#+ATTR_LaTeX: :width 0.8\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.estimateC <- ggplot(dt.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg.estimateC <- gg.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg.estimateC <- gg.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg.estimateC <- gg.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg.estimateC, filename = file.path("report","figures","gg-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg-estimateC-density.pdf]]

\clearpage

* Special cases

Reason for stopping (first 4) or continuing the trial (last):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 1:8,reason],
       method = res2stage[scenario %in% 1:8,method],
       scenario = res2stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    1    2    3    4    5    6    7    8
reason                 method                                                 
decreasing information 1                  0    0    1    1    0    0    0    0
                       2                  0    0    1    1    0    0    0    0
                       3                  0    0    1    1    0    0    0    0
efficacy               1               3740   77 3559   67 3696   82 3502   82
                       2               3729   82 3554   68 3732   82 3546   83
                       3               4137  107 3712   83 4071  110 3632   92
futility               1                646 7086  603 6922  600 7109  552 6901
                       2                658 7120  611 6904  542 6981  523 6834
                       3                560 6843  579 6822  495 6850  519 6812
Imax reached           1                  1    1    0    0    2    2    0    0
                       2                  1    1    0    0    2    2    0    0
                       3                  1    1    0    0    2    2    0    0
no boundary crossed    1               5613 2836 5838 3011 5702 2807 5946 3017
                       2               5612 2797 5835 3028 5724 2935 5931 3083
                       3               5302 3049 5709 3095 5432 3038 5849 3096
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 9:16,reason],
       method = res2stage[scenario %in% 9:16,method],
       scenario = res2stage[scenario %in% 9:16,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    9   10   11   12   13   14   15   16
reason                 method                                                 
decreasing information 1                  0    0    1    0    0    0    0    0
                       2                  0    0    1    0    0    0    0    0
                       3                  0    0    1    0    0    0    0    0
efficacy               1               3805   84 3634   82 3815   78 3674   67
                       2               3824   81 3646   79 3816   78 3677   67
                       3               4206  109 3761   88 4238  112 3788   83
futility               1                614 7130  596 6957  604 7126  571 6920
                       2                572 7044  571 6907  628 7180  573 6925
                       3                535 6914  561 6867  514 6870  535 6837
Imax reached           1                  1    1    0    0    0    0    0    0
                       2                  1    1    0    0    0    0    0    0
                       3                  1    1    0    0    0    0    0    0
no boundary crossed    1               5580 2785 5770 2961 5581 2796 5755 3013
                       2               5603 2874 5783 3014 5556 2742 5750 3008
                       3               5258 2976 5678 3045 5248 3018 5677 3080
#+end_example

\clearpage

* Reversal probability

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Indicator of reversal
res2stage.reversal <- res2stage[, .(N = .N,
                                    futility2efficacy = (stage[1] == 1)*(reason[1] == "futility")*(stage[2] == 1)*(decision[2] == "efficacy"),
                                    efficacy2futility = (stage[1] == 1)*(reason[1] == "efficacy")*(stage[2] == 1)*(decision[2] == "futility")),
                                by = c("method","seed","missing","binding","fixC","ar","hypo")]
res2stage.reversal[is.na(futility2efficacy), futility2efficacy := 0]
res2stage.reversal[is.na(efficacy2futility), efficacy2futility := 0]
#+END_SRC

#+RESULTS:

Percentage of time we observe a reversal:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.reversal <- res2stage.reversal[, .(N = .N,
                                              fu2eff = 100*mean(futility2efficacy),
                                              eff2fu = 100*mean(efficacy2futility)),
                                          by = c("method","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res2stageS.reversal, N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint)
#+END_SRC

#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power   FALSE  5    TRUE FALSE     0.06     0.07     0.01     0.04     0.04     0.63
 2: 10000 power    TRUE  5   FALSE FALSE     0.04     0.04     0.00     0.03     0.03     0.51
 3: 10000 power    TRUE  5   FALSE  TRUE     0.04     0.03     0.03     0.36     0.42     0.56
 4: 10000 power    TRUE  5    TRUE FALSE     0.06     0.08     0.02     0.05     0.07     0.65
 5: 10000 power    TRUE  5    TRUE  TRUE     0.02     0.02     0.01     0.36     0.42     0.63
 6: 10000 power    TRUE 10   FALSE FALSE     0.35     0.38     0.05     0.18     0.21     0.96
 7: 10000 power    TRUE 10   FALSE  TRUE     0.15     0.13     0.10     0.63     0.61     1.13
 8: 10000 power    TRUE 10    TRUE FALSE     0.57     0.57     0.13     0.15     0.20     1.06
 9: 10000 power    TRUE 10    TRUE  TRUE     0.17     0.16     0.11     0.70     0.68     0.99
10: 10000 typeI   FALSE  5    TRUE FALSE     0.01     0.03     0.00     0.01     0.03     0.12
11: 10000 typeI    TRUE  5   FALSE FALSE     0.00     0.00     0.00     0.00     0.01     0.08
12: 10000 typeI    TRUE  5   FALSE  TRUE     0.00     0.00     0.00     0.09     0.07     0.14
13: 10000 typeI    TRUE  5    TRUE FALSE     0.02     0.02     0.00     0.01     0.03     0.15
14: 10000 typeI    TRUE  5    TRUE  TRUE     0.00     0.00     0.00     0.10     0.12     0.14
15: 10000 typeI    TRUE 10   FALSE FALSE     0.00     0.00     0.00     0.09     0.09     0.31
16: 10000 typeI    TRUE 10   FALSE  TRUE     0.00     0.00     0.00     0.27     0.25     0.37
17: 10000 typeI    TRUE 10    TRUE FALSE     0.11     0.11     0.03     0.09     0.08     0.36
18: 10000 typeI    TRUE 10    TRUE  TRUE     0.02     0.00     0.00     0.22     0.21     0.39
#+end_example

#+LaTeX: \end{adjustwidth}


\clearpage

* Frequency mismatch p-value / boundaries

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(p.value_MUE<0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchFU, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC   method 1   method 2   method 3
 1: power   FALSE  5    TRUE FALSE 0.00000000 0.00000000 0.74738416
 2: power    TRUE  5   FALSE FALSE 0.41343669 0.41322314 0.56294780
 3: power    TRUE  5   FALSE  TRUE 1.34924754 0.93847758 0.57142857
 4: power    TRUE  5    TRUE FALSE 0.00000000 0.00000000 0.55583628
 5: power    TRUE  5    TRUE  TRUE 2.55000000 1.84237462 0.65261044
 6: power    TRUE 10   FALSE FALSE 2.43145370 2.47422680 1.34366925
 7: power    TRUE 10   FALSE  TRUE 3.33333333 3.39425587 0.68098481
 8: power    TRUE 10    TRUE FALSE 0.00000000 0.00000000 1.07416880
 9: power    TRUE 10    TRUE  TRUE 3.91282813 3.77743747 1.22386537
10: typeI   FALSE  5    TRUE FALSE 0.00000000 0.00000000 0.02050231
11: typeI    TRUE  5   FALSE FALSE 0.03077239 0.03076923 0.06158900
12: typeI    TRUE  5   FALSE  TRUE 0.07169193 0.06144393 0.02048760
13: typeI    TRUE  5    TRUE FALSE 0.00000000 0.00000000 0.02049180
14: typeI    TRUE  5    TRUE  TRUE 0.14347202 0.12293822 0.02051282
15: typeI    TRUE 10   FALSE FALSE 0.14350144 0.14350144 0.10264833
16: typeI    TRUE 10   FALSE  TRUE 0.20441537 0.16356573 0.05118231
17: typeI    TRUE 10    TRUE FALSE 0.00000000 0.00000000 0.01024590
18: typeI    TRUE 10    TRUE  TRUE 0.26598465 0.25575448 0.09226038
#+end_example

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(p.value_MUE>0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchEFF, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE        0        0        0
 2: power    TRUE  5   FALSE FALSE        0        0        0
 3: power    TRUE  5   FALSE  TRUE        0        0        0
 4: power    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE  5    TRUE  TRUE        0        0        0
 6: power    TRUE 10   FALSE FALSE        0        0        0
 7: power    TRUE 10   FALSE  TRUE        0        0        0
 8: power    TRUE 10    TRUE FALSE        0        0        0
 9: power    TRUE 10    TRUE  TRUE        0        0        0
10: typeI   FALSE  5    TRUE FALSE        0        0        0
11: typeI    TRUE  5   FALSE FALSE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: typeI    TRUE  5    TRUE FALSE        0        0        0
14: typeI    TRUE  5    TRUE  TRUE        0        0        0
15: typeI    TRUE 10   FALSE FALSE        0        0        0
16: typeI    TRUE 10   FALSE  TRUE        0        0        0
17: typeI    TRUE 10    TRUE FALSE        0        0        0
18: typeI    TRUE 10    TRUE  TRUE        0        0        0
#+end_example

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
dt.issue <- data.table("scenario" = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17), 
                       "seed" = c(996631745, 432678946, 578100624, 800763125, 118213320, 890967388, 469135748, 682815103, 623263610, 331288653, 348371157, 13527395, 190630067, 549427834, 445077004, 65423609, 609806118, 156062609, 797694491, 522077839, 480717972, 251564941, 867028467, 517557509, 391077117, 102532908, 403901590, 881914061, 432678946, 958833541, 891915119, 954742906, 883552112, 261579854, 258119951, 983887795, 11413593, 402321297, 360676247, 755489412, 755489412, 529405294, 745444345, 745444345, 674484342, 674484342, 41575956, 41575956, 794006366, 115642753, 115642753, 985564957, 490137693, 490137693, 490137693, 861803545, 861803545, 65465701, 65465701, 65465701, 59520730, 59520730, 361029405, 497862470, 497862470, 439116040, 439116040, 439116040, 655806552, 655806552, 624138955, 624138955, 138635165, 857514451, 857514451, 725913446, 636733544, 636733544, 643097653, 117613351, 385749732, 278956500, 278956500, 278956500, 19809402, 19809402, 598158983, 996866306, 996866306, 463123956, 768238695, 462745199, 115809938, 907957077, 907957077, 467527651, 513310076, 961377177, 961377177, 876310264, 876310264, 876310264, 574861586, 574861586, 623728615, 623728615, 191334898, 828009650, 828009650, 531530810, 81373798, 81373798, 290301587, 290301587, 290301587, 468128352, 468128352, 690537980, 557331032, 557331032, 557331032, 428621311, 552219684, 552219684, 895916907, 895916907, 819160064, 819160064, 692694950, 709544694, 709544694, 979904851, 979904851, 727723332, 727723332, 727723332, 824641312, 824641312, 824641312, 954119559, 954119559, 974456683, 434351213, 434351213, 434351213, 458816843, 458816843, 220423499, 690802210, 690802210, 721752581, 721752581, 733459348, 733459348, 581475417, 581475417, 363624073, 363624073, 878143745, 878143745, 228092311, 228092311, 934457370, 169280051, 270708699, 270708699, 906540073, 906540073, 541039384, 593223671, 952418928, 952418928, 952418928, 657439359, 824668194, 824668194, 906671519, 659991546, 659991546, 609806118, 141490029, 141490029, 615785225, 350226038, 790432746, 475118855, 475118855, 475118855, 2736903, 2736903, 566235952, 566235952, 689587711, 689587711, 689587711, 621007664, 621007664, 563671783, 563671783, 890683926, 890683926, 899644883, 899644883, 871784000, 871784000, 267048107, 267048107, 259938887, 384999701, 384999701, 278738736, 278738736, 399729400, 399729400, 830766813, 836490272, 836490272, 646185175, 646185175, 812630953, 812630953, 812630953, 716422565, 716422565, 504760369, 624055929, 624055929, 666325245, 666325245, 666325245, 966213620, 966213620, 966213620, 580047730, 539299287, 539299287, 929143729, 60748955, 60748955, 60748955, 935972376, 935972376, 342096798, 771755350, 287445141, 803612548, 102149728, 580536161, 580536161, 198295236, 198295236, 453951373, 194681666, 194681666, 275605824, 132476897, 883525041, 112426836, 112426836, 857514451, 857514451, 857514451, 492069926, 934668496, 385749732, 682164918, 682164918, 816860094, 816860094, 816860094, 699572642, 45459964, 45459964, 19809402, 19809402, 19809402, 652318056, 618580045, 286727429, 286727429, 286727429, 718363820, 718363820, 972993997, 189558800, 115809938, 329216686, 329216686, 293910141, 293910141, 439898526, 511135065, 7894591, 7894591, 742340420, 742340420, 11465464, 911803964, 810144929, 87232426, 424538141, 209727386, 209727386, 452816801, 895916907, 733459348, 581475417, 581475417, 878143745, 228092311, 228092311, 171030114, 994475838, 994475838, 543426110, 543426110, 648457710, 648457710, 727286716, 727286716, 404292074, 404292074, 187107754, 2736903, 2736903, 273626901, 273626901, 273626901, 267048107, 838669166, 633535399, 633535399, 543318979, 543318979, 339519918, 311714085, 311714085, 812630953, 115673371, 131573484, 539826084, 539826084, 125961160, 125961160, 751898207, 751898207, 590313852, 590313852, 590313852, 238821373, 803612548, 803612548, 639964412, 318865806, 318865806, 316031316, 316031316, 905686708, 879389235, 879389235, 617127194, 432678946, 432678946, 432678946, 162879154, 92265431, 997658707, 997658707, 490137693, 367899375, 367899375, 828228609, 610588447, 610588447, 182838820, 474896252, 474896252, 786118741, 786118741, 786118741, 898463507, 898463507, 954042567, 954042567, 573372388, 896602751, 70248234, 253150397, 385085970, 670909282, 415489687, 54507337, 77263397, 119092727, 636454352, 929516351, 506389323, 506389323, 736795998, 736795998, 121807227, 682164918, 682175965, 682175965, 682175965, 492706698, 492706698, 492706698, 608722756, 608722756, 456941362, 708094183, 708094183, 6887945, 619430250, 821848898, 390503331, 817243033, 512110856, 561725044, 561725044, 81028732, 206097348, 12133822, 12133822, 703978841, 887621038, 937915279, 848564354, 938016729, 938016729, 911448974, 838447349, 838447349, 879390520, 229887346, 504465306, 559308175, 805751953, 805751953, 805751953, 7894591, 409373902, 409373902, 409373902, 69552944, 453906488, 936769003, 936769003, 99978138, 711198705, 819133623, 899666176, 899666176, 812954325, 812954325, 106974304, 518772214, 481270397, 713475055, 713475055, 320549065, 511575429, 289169307, 405831207, 405831207, 951978161, 951978161, 282209659, 282209659, 206263044, 206263044, 206263044, 323622936, 655120269, 655120269, 655120269, 924061337, 924061337, 692694950, 692694950, 204458392, 204458392, 458934713, 458934713, 356414958, 356414958, 194773911, 230465854, 548128878, 9214396, 9214396, 301787221, 121203617, 121203617, 761399970, 279329684, 279329684, 224895205, 224895205, 612759004, 835511003, 721258410, 218860696, 686327932, 27704446, 667055233, 247685205, 935055877, 989094820, 146866882, 146866882, 381877036, 85994443, 239734242, 239734242, 752278986, 925153487, 925153487, 771997814, 26588004, 911805303, 997190742, 568222875, 536697166, 150516683, 150516683, 268205244, 268205244, 159059950, 35458821, 35458821, 812667274, 483670250, 811940248, 811940248, 811940248, 366906004, 48439630, 673789961, 673789961, 937653909, 937653909, 205051586, 132459000, 898116721, 917585448, 365935656, 603802135, 461810195, 461810195, 138940251, 138940251, 657893706, 266180654, 316750462, 404386858, 284809131, 997670034, 978522722, 412214708, 412214708, 461548276, 461548276, 179312630, 979825882, 732681608, 732681608, 832576151, 549856166, 558947498, 741991280, 741991280, 146174203, 595777065, 595777065, 261201711, 669201217, 669201217, 102532908, 102532908, 798297192, 465295673, 92143405, 382619699, 382619699, 433615673, 193398027, 498429683, 498429683, 973341062, 973341062, 884686986, 138589, 781485475, 47233422, 47233422, 72284024, 376197601, 376197601, 688703386, 636685034, 273040695, 957202955, 957202955, 54949041, 311426752, 221892910, 248153442, 344014435, 344014435, 432678946, 432678946, 432678946, 15850550, 474896252, 158315126, 670909282, 490287306, 490287306, 827506441, 787045882, 787045882, 534849271, 456941362, 456941362, 221061342, 221061342, 221061342, 817243033, 81028732, 81028732, 81757422, 937915279, 937915279, 754059417, 675821689, 980094974, 980094974, 114707126, 7894591, 7894591, 409373902, 409373902, 623263610, 623263610, 72369623, 149466514, 149466514, 149466514, 65198949, 282209659, 939156883, 182786695, 410128197, 410128197, 935651777, 121203617, 266270359, 266270359, 234056024, 234056024, 974730730, 974730730, 719179346, 719179346, 266346097, 266346097, 26588004, 811679813, 811679813, 536697166, 269927205, 822142775, 483670250, 797694491, 797694491, 966146998, 780872638, 238465866, 238465866, 327141894, 276542239, 893904657, 441581564, 444673345, 404386858, 404386858, 978522722, 461548276, 461548276, 944207166, 11413593, 316287725, 316287725, 632026704, 632026704, 426875720, 53367147, 391077117, 391077117, 595777065, 523941015, 798297192, 977891228, 39952445, 39952445, 794074085, 794074085, 170846140, 170846140, 688703386, 688703386, 83257267, 83257267, 413883402, 791795938, 791795938, 430124857, 430124857, 687278525, 72327897, 72327897, 497897797, 497897797, 18263024, 791539249, 791539249, 306732708, 424592273, 883565, 520254210, 520254210, 49498684, 49498684, 335172014, 521571809, 521571809, 610000441, 19384804, 19384804, 569925269, 569925269, 861044471, 861044471, 340844990, 175974665, 175974665, 450877360, 450877360, 858512275, 858512275, 756167186, 229887346, 229887346, 673639365, 691432984, 691432984, 74132012, 74132012, 469135748, 469135748, 729125201, 729125201, 586808100, 586808100, 265512031, 611514364, 611514364, 731207076, 731207076, 247958883, 859429348, 682524462, 682524462, 500943074, 500943074, 58766293, 58766293, 357431250, 615054659, 615054659, 230465854, 230465854, 9214396, 9214396, 783481231, 783481231, 121203617, 121203617, 220423499, 220423499, 567295424, 567295424, 415181046, 415181046, 976331347, 976331347, 956486581, 956486581, 116241011, 854112936, 854112936, 323118455, 556548145, 556548145, 429257674, 429257674, 738395608, 738395608, 701423102, 701423102, 125522316, 125522316, 736844087, 954303062, 719093479, 387567153, 387567153, 928640451, 928640451, 338922199, 338922199, 894866671, 436212414, 436212414, 365607181, 365607181, 53830731, 53830731, 938014245, 114079664, 114079664, 937107100, 937107100, 84647984, 509230728, 509230728, 799925328, 695551207, 695551207, 610524816, 610524816, 68694162, 68694162, 990500118, 990500118, 113421273, 113421273, 636685034, 636685034, 768454788, 764874436, 764874436, 925569211, 925569211, 686139843, 686139843, 177896910, 177896910, 337502526, 627288472, 289596337, 469135748, 469135748, 227467728, 166795386, 358972824, 500943074, 500943074, 760452550, 615054659, 615054659, 9214396, 9214396, 429257674, 429257674, 738395608, 738395608, 701423102, 701423102, 969657837, 286565552, 365607181, 365607181, 118527910, 695551207, 695551207, 177896910, 177896910, 666941261, 769205622, 225755970, 591482865, 879390520, 996504674, 810109309, 843298685), 
                       "p.value_MUE" = c(0.00700494, 0.00636475, 0.00702901, 0.00533119, 0.00757061, 0.0103061, 0.00676701, 0.00665739, 0.00699296, 0.00738134, 0.01184203, 0.00681562, 0.00633604, 0.00823915, 0.0061486, 0.005632, 0.00818902, 0.00995317, 0.00809422, 0.00692432, 0.00947278, 0.00735023, 0.00559765, 0.00675677, 0.00702122, 0.01028759, 0.00745674, 0.00627326, 0.00603391, 0.00808553, 0.01177364, 0.00827467, 0.00612651, 0.00603601, 0.00686311, 0.00801564, 0.00712608, 0.00656603, 0.00528978, 0.00613719, 0.00596631, 0.00748137, 0.00627634, 0.00760504, 0.00869484, 0.00824603, 0.00830747, 0.00808002, 0.00587781, 0.00691702, 0.00682991, 0.00992289, 0.00560123, 0.00550268, 0.00672226, 0.00609104, 0.0059586, 0.00688236, 0.00682795, 0.00814319, 0.00799338, 0.00768861, 0.00832731, 0.00830376, 0.00815994, 0.00655522, 0.00624827, 0.00795966, 0.00737397, 0.0071854, 0.00715884, 0.00698826, 0.00848149, 0.00502828, 0.00491324, 0.00716516, 0.00972842, 0.00938895, 0.00738688, 0.00681327, 0.00666228, 0.00539174, 0.00513154, 0.00609993, 0.00620539, 0.0060567, 0.0072923, 0.00749552, 0.0072566, 0.00589433, 0.00795714, 0.00792722, 0.00668655, 0.00590369, 0.00595372, 0.00657913, 0.00901789, 0.00627647, 0.00733238, 0.00609075, 0.0059238, 0.00694025, 0.00615077, 0.00652587, 0.00638957, 0.00628063, 0.00533752, 0.00793532, 0.00763763, 0.00807749, 0.00705447, 0.00841381, 0.00708772, 0.00832641, 0.00863835, 0.00873985, 0.00850862, 0.00641872, 0.00597436, 0.00619589, 0.00720653, 0.00639422, 0.00976181, 0.00932344, 0.00880895, 0.0077717, 0.00767217, 0.00703098, 0.00914154, 0.00598817, 0.00550486, 0.01048596, 0.00966394, 0.00486001, 0.00435253, 0.00573343, 0.00658627, 0.00710511, 0.00776555, 0.00722916, 0.0071626, 0.00966964, 0.00664706, 0.00766815, 0.00797407, 0.00795791, 0.00776588, 0.00864431, 0.00605476, 0.00646166, 0.00516156, 0.00492276, 0.00658272, 0.00641674, 0.00761866, 0.00711014, 0.00513916, 0.00505082, 0.0069084, 0.00633575, 0.00673215, 0.00652464, 0.00630414, 0.00784375, 0.00563452, 0.00578006, 0.00855024, 0.0082977, 0.00685834, 0.00572924, 0.00740541, 0.00740314, 0.00887535, 0.00902228, 0.00605929, 0.0059127, 0.0084909, 0.00737987, 0.00697505, 0.00718895, 0.0114137, 0.01131415, 0.00736525, 0.00906679, 0.00776297, 0.00509178, 0.00508849, 0.00592739, 0.00617413, 0.00605186, 0.0080915, 0.0084566, 0.0063917, 0.00615271, 0.00747575, 0.00692929, 0.00708505, 0.00724647, 0.00710336, 0.00557787, 0.00546474, 0.0065656, 0.00789661, 0.00714449, 0.00687314, 0.00582194, 0.00601964, 0.00565851, 0.00692019, 0.00830484, 0.00603512, 0.0059192, 0.00598442, 0.00568497, 0.00659105, 0.00670777, 0.00666151, 0.00694016, 0.00670854, 0.00676492, 0.00674127, 0.00806855, 0.00693789, 0.00731358, 0.00642829, 0.00640405, 0.0067976, 0.00756786, 0.00734466, 0.00889232, 0.00701863, 0.00688036, 0.00856241, 0.00735554, 0.00587009, 0.00726033, 0.00879196, 0.00488835, 0.00568977, 0.00560305, 0.00495941, 0.00578386, 0.00771235, 0.00687035, 0.00781472, 0.01010152, 0.00664938, 0.0071673, 0.00696529, 0.00816652, 0.00776, 0.00503889, 0.0079064, 0.00730233, 0.00788832, 0.00960542, 0.00723299, 0.00751939, 0.00742355, 0.0044511, 0.00462841, 0.00471651, 0.00760943, 0.00648401, 0.00626216, 0.00852415, 0.00848459, 0.00677099, 0.00666527, 0.00743714, 0.00841628, 0.00637925, 0.00605536, 0.00590919, 0.00598445, 0.00649188, 0.00897175, 0.00839544, 0.00759076, 0.00787694, 0.00828582, 0.00924334, 0.00912999, 0.00699579, 0.00640668, 0.00676974, 0.00605369, 0.00598263, 0.00732235, 0.00720437, 0.00964522, 0.00753028, 0.00665122, 0.00649893, 0.00850889, 0.00813032, 0.00808284, 0.00630686, 0.00657324, 0.00617602, 0.00574634, 0.00683112, 0.00689448, 0.0084632, 0.00955923, 0.006744, 0.00742965, 0.00742685, 0.00718795, 0.00616407, 0.006474, 0.00723856, 0.00711, 0.00731667, 0.00630112, 0.00642233, 0.00685698, 0.007343, 0.0085647, 0.00842351, 0.00706113, 0.00664672, 0.00806349, 0.00625555, 0.0062905, 0.00886915, 0.0089962, 0.0102545, 0.00644196, 0.007211, 0.00604545, 0.00592176, 0.00732172, 0.00731809, 0.00604966, 0.00795139, 0.00787374, 0.00699529, 0.00648126, 0.00823751, 0.00638605, 0.00669705, 0.00885561, 0.00908966, 0.0055441, 0.00551431, 0.00618259, 0.00625025, 0.00665709, 0.00796185, 0.00906261, 0.00929056, 0.00591707, 0.00556135, 0.00557371, 0.00556892, 0.00526909, 0.02426624, 0.00703061, 0.0063869, 0.02449647, 0.0044665, 0.00482637, 0.0050861, 0.02464941, 0.0249199, 0.00484536, 0.00558359, 0.02480944, 0.00543132, 0.00533257, 0.02461992, 0.00944298, 0.00962965, 0.00743786, 0.0082008, 0.00802249, 0.00562391, 0.00553508, 0.00671612, 0.0072443, 0.00731625, 0.00569464, 0.0072563, 0.02484202, 0.00597238, 0.02472855, 0.00746574, 0.00803321, 0.02414328, 0.02488547, 0.02498833, 0.00717542, 0.00984854, 0.00816957, 0.02420374, 0.00617784, 0.00662699, 0.00845904, 0.00829471, 0.02465513, 0.02481964, 0.00587184, 0.0057808, 0.0071241, 0.00569645, 0.00582419, 0.00689431, 0.00553171, 0.00592199, 0.0097154, 0.00551093, 0.00574122, 0.02487503, 0.02463497, 0.00638309, 0.00730326, 0.0241303, 0.02404185, 0.00602653, 0.00587384, 0.02465267, 0.0076096, 0.00813127, 0.00788476, 0.00781711, 0.00663289, 0.00700524, 0.00588174, 0.00625466, 0.00605774, 0.00602707, 0.00873636, 0.00855186, 0.02486013, 0.02475448, 0.02473759, 0.02486246, 0.00587852, 0.00699578, 0.00714089, 0.02499722, 0.00459646, 0.00460732, 0.00524476, 0.02416221, 0.02473731, 0.00671759, 0.00652154, 0.00616776, 0.00857841, 0.02471839, 0.00826034, 0.00759928, 0.00849055, 0.01020762, 0.02476789, 0.02491301, 0.02398559, 0.00634036, 0.00611442, 0.02457299, 0.00738069, 0.02332967, 0.00569945, 0.00560793, 0.00450526, 0.00520134, 0.02446684, 0.02400344, 0.00468623, 0.00460706, 0.00553808, 0.00641894, 0.00719366, 0.00702394, 0.00894263, 0.00567783, 0.00547139, 0.00913012, 0.00892531, 0.00827654, 0.00753373, 0.00683926, 0.00673097, 0.00962289, 0.00937775, 0.00812943, 0.00888565, 0.02483803, 0.00855651, 0.00817106, 0.02413181, 0.00728307, 0.00759559, 0.00588753, 0.00893747, 0.00756516, 0.0059927, 0.00718234, 0.00781801, 0.01025461, 0.02443304, 0.02418645, 0.02373266, 0.01151674, 0.00758742, 0.00801804, 0.02378593, 0.0064474, 0.00759117, 0.00760274, 0.02425989, 0.02479507, 0.00814539, 0.00814362, 0.00947785, 0.00764491, 0.00911994, 0.00750789, 0.0053648, 0.02433262, 0.02390146, 0.00649462, 0.00595924, 0.00784659, 0.00778871, 0.00596011, 0.00585118, 0.02497414, 0.00671614, 0.00770952, 0.02485237, 0.02455914, 0.00494219, 0.00508079, 0.00565332, 0.02442103, 0.02416143, 0.00619433, 0.00602591, 0.00692454, 0.00678319, 0.02465257, 0.00795823, 0.02489231, 0.00551046, 0.02449943, 0.00678304, 0.00549841, 0.00515826, 0.00549462, 0.00583948, 0.02466346, 0.00725209, 0.00762908, 0.00719225, 0.00795753, 0.02477222, 0.02464186, 0.00700202, 0.00711502, 0.00586833, 0.00575375, 0.0091083, 0.00668152, 0.00642542, 0.0063164, 0.00897602, 0.00814454, 0.00646792, 0.00694656, 0.00672186, 0.00741712, 0.0084642, 0.00864872, 0.02492395, 0.00709199, 0.00673903, 0.0082033, 0.008005, 0.02420287, 0.0247995, 0.02454651, 0.00809333, 0.00797172, 0.02439619, 0.02476096, 0.00780795, 0.00760028, 0.00606516, 0.00594581, 0.02480675, 0.02445874, 0.02499271, 0.00566892, 0.00535121, 0.02481796, 0.00715389, 0.00702504, 0.02440726, 0.02497375, 0.00958028, 0.00720109, 0.00699418, 0.02441475, 0.02429546, 0.02472663, 0.02443188, 0.00719959, 0.00731459, 0.00534542, 0.00561774, 0.00556503, 0.00843984, 0.00810893, 0.01092146, 0.02474563, 0.00649043, 0.00646686, 0.00796457, 0.00737918, 0.00732652, 0.005666, 0.00990454, 0.00971347, 0.00607679, 0.00609469, 0.00650333, 0.02480142, 0.00810543, 0.00859752, 0.00747379, 0.00633279, 0.00625981, 0.0083479, 0.00992677, 0.00725317, 0.00757619, 0.00909226, 0.00598268, 0.00606907, 0.00524313, 0.00575399, 0.00747726, 0.0072184, 0.00632291, 0.00644014, 0.00651541, 0.00705203, 0.00722562, 0.02485484, 0.00688664, 0.00424001, 0.00939301, 0.00924231, 0.0087164, 0.00768564, 0.00751734, 0.00780359, 0.00773052, 0.00793793, 0.0069593, 0.00741037, 0.00772619, 0.00761084, 0.00982208, 0.00996406, 0.00607584, 0.00767605, 0.00779379, 0.00570832, 0.00978283, 0.00739995, 0.02499958, 0.00809837, 0.00803052, 0.00910992, 0.0069443, 0.00886436, 0.00906678, 0.00697426, 0.00571281, 0.00615965, 0.00664183, 0.00713614, 0.00751434, 0.00761374, 0.02487504, 0.00622028, 0.00612949, 0.00538436, 0.00713504, 0.00763566, 0.00749768, 0.00549544, 0.0057957, 0.00807488, 0.00694447, 0.00730773, 0.00683294, 0.00818998, 0.00646882, 0.02481102, 0.00659758, 0.00716248, 0.00715309, 0.00839348, 0.00825893, 0.01125457, 0.0105044, 0.0068725, 0.00696268, 0.00654196, 0.00699993, 0.00669006, 0.02458488, 0.02453923, 0.02459973, 0.02458923, 0.00665839, 0.02476429, 0.02476272, 0.02480841, 0.02480293, 0.00500483, 0.02482699, 0.02481179, 0.00656782, 0.00783145, 0.00596089, 0.02472083, 0.02470817, 0.02498124, 0.02496549, 0.00680451, 0.02473933, 0.02473961, 0.0249943, 0.02472615, 0.02472408, 0.02383495, 0.02381055, 0.02474978, 0.02473496, 0.00898782, 0.02493007, 0.0249293, 0.02393385, 0.02390164, 0.02426806, 0.02425814, 0.02460057, 0.02430566, 0.02429078, 0.0247067, 0.02428667, 0.02428099, 0.02399613, 0.02398004, 0.02402056, 0.0239891, 0.02489991, 0.02489212, 0.02412968, 0.02406552, 0.00654187, 0.02491351, 0.02491378, 0.02482186, 0.02479964, 0.00803128, 0.00724537, 0.02471234, 0.02470516, 0.02406452, 0.02401649, 0.02437607, 0.02431649, 0.005949, 0.02402128, 0.02396658, 0.02352964, 0.02351329, 0.02409001, 0.02405977, 0.02469506, 0.02467548, 0.02430544, 0.02428311, 0.02465908, 0.02463498, 0.0245014, 0.02448793, 0.0243941, 0.02436956, 0.02368894, 0.02363162, 0.02487523, 0.02485672, 0.00741723, 0.02475035, 0.02474685, 0.00763093, 0.02406351, 0.02404386, 0.02425464, 0.02423251, 0.02454467, 0.02453336, 0.02434228, 0.02432356, 0.02493231, 0.02492854, 0.00902293, 0.00784998, 0.00744905, 0.0246314, 0.02462418, 0.02499627, 0.02498755, 0.02477505, 0.02471592, 0.00701802, 0.02484281, 0.02481986, 0.02440209, 0.02439728, 0.02487395, 0.02486677, 0.00655599, 0.02411334, 0.02408881, 0.02450774, 0.02449612, 0.00872707, 0.02487682, 0.0248731, 0.00824485, 0.02426756, 0.02423642, 0.02372208, 0.0236944, 0.02453359, 0.02450704, 0.0241349, 0.02410656, 0.02433914, 0.02431456, 0.02480324, 0.02479155, 0.00706945, 0.02455109, 0.02447109, 0.02448068, 0.02447664, 0.02450815, 0.02450268, 0.02383443, 0.02381247, 0.0083977, 0.00675719, 0.00674393, 0.02494276, 0.02494931, 0.00671704, 0.00626108, 0.00610043, 0.02490132, 0.02490826, 0.0069892, 0.0249019, 0.0249079, 0.02492629, 0.02493303, 0.02498844, 0.0249951, 0.02497943, 0.02498554, 0.02487387, 0.02487913, 0.00647307, 0.0054594, 0.02491703, 0.02492295, 0.00561592, 0.02492666, 0.02493401, 0.02494575, 0.02495143, 0.00924179, 0.00766286, 0.00793457, 0.00553135, 0.00684772, 0.00772642, 0.00566389, 0.00710339))
#+END_SRC

* Percentage of missing values

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.nXinterim <- res2stage[,.(N = .N, nX1 = unique(nX1.interim), nX2 = unique(nX2.interim), nX3 = unique(nX3.interim)),
                                 by = c("method","missing","ar","seed","binding","fixC","hypo")]
all(res2stage.nXinterim$N==3)

res2stageS.nXinterim <- res2stage.nXinterim[, .(N = .N,
                                                pc.all = 100*mean(nX3/nX1),
                                                pc.missing3 = 100*mean(nX2/nX1-nX3/nX1),
                                                pc.missing23 = 100*mean(1-nX2/nX1)),
                                            by = c("method","missing","ar","hypo","fixC","binding")]

setkeyv(res2stageS.nXinterim,"ar")
#+END_SRC

#+RESULTS:
: [1] TRUE

Here only for method 1 - values are very similar between different
methods:
- =pc.all= percentage of observations with full data
- =pc.missing3= percentage of observations missing the final outcome
  but with intermediate outcome value and baseline.
- =pc.missing23= percentage of observations with only baseline value
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.nXinterim[method==1]
#+END_SRC

#+RESULTS:
#+begin_example
    method missing ar  hypo  fixC binding     N   pc.all pc.missing3 pc.missing23
 1:      1    TRUE  5 power FALSE    TRUE 10000 79.53472    9.562374    10.902910
 2:      1    TRUE  5 typeI FALSE    TRUE 10000 79.53472    9.562374    10.902910
 3:      1    TRUE  5 power  TRUE    TRUE 10000 79.44022    9.531225    11.028558
 4:      1    TRUE  5 typeI  TRUE    TRUE 10000 79.44022    9.531225    11.028558
 5:      1    TRUE  5 power  TRUE   FALSE 10000 79.71917    9.427430    10.853396
 6:      1    TRUE  5 typeI  TRUE   FALSE 10000 79.71917    9.427430    10.853396
 7:      1    TRUE  5 power FALSE   FALSE 10000 79.64196    9.449136    10.908902
 8:      1    TRUE  5 typeI FALSE   FALSE 10000 79.64196    9.449136    10.908902
 9:      1   FALSE  5 power FALSE    TRUE 10000 87.78863    6.090240     6.121126
10:      1   FALSE  5 typeI FALSE    TRUE 10000 87.78863    6.090240     6.121126
11:      1    TRUE 10 power FALSE    TRUE 10000 71.60971   13.327969    15.062319
12:      1    TRUE 10 typeI FALSE    TRUE 10000 71.60971   13.327969    15.062319
13:      1    TRUE 10 power  TRUE    TRUE 10000 71.52189   13.282615    15.195496
14:      1    TRUE 10 typeI  TRUE    TRUE 10000 71.52189   13.282615    15.195496
15:      1    TRUE 10 power  TRUE   FALSE 10000 71.85935   13.144488    14.996166
16:      1    TRUE 10 typeI  TRUE   FALSE 10000 71.85935   13.144488    14.996166
17:      1    TRUE 10 power FALSE   FALSE 10000 71.79364   13.168843    15.037522
18:      1    TRUE 10 typeI FALSE   FALSE 10000 71.79364   13.168843    15.037522
#+end_example

\clearpage

* Information

Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt.info <- res2stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt.info[, type := factor(type, c("interim","decision","final"))]
tablePrint <- dcast(dt.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type,
                    value.var = "infoPC")
print(tablePrint, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar  interim decision     final
        1    TRUE    TRUE FALSE 10 54.63862 63.33698 102.69943
        2    TRUE    TRUE FALSE 10 54.63862 68.96135 102.32310
        3    TRUE    TRUE FALSE  5 53.27109 57.38550 102.74966
        4    TRUE    TRUE FALSE  5 53.27109 60.22345 102.34459
        5    TRUE    TRUE  TRUE 10 54.54008 63.10923 102.78945
        6    TRUE    TRUE  TRUE 10 54.54008 68.95137 102.12003
        7    TRUE    TRUE  TRUE  5 53.17744 57.18426 102.80673
        8    TRUE    TRUE  TRUE  5 53.17744 60.12266 102.22328
        9    TRUE   FALSE  TRUE 10 54.51044 63.16647 102.56935
       10    TRUE   FALSE  TRUE 10 54.51044 54.66970 103.09893
       11    TRUE   FALSE  TRUE  5 53.17317 57.27740 102.61166
       12    TRUE   FALSE  TRUE  5 53.17317 53.24797 103.10060
       13    TRUE   FALSE FALSE 10 54.49750 63.16580 102.56590
       14    TRUE   FALSE FALSE 10 54.49750 54.64468 103.12067
       15    TRUE   FALSE FALSE  5 53.15611 57.29003 102.60917
       16    TRUE   FALSE FALSE  5 53.15611 53.21806 103.12463
       17   FALSE    TRUE FALSE  5 52.06840 56.28978  99.96969
       18   FALSE    TRUE FALSE  5 52.06840 59.42197  99.62860
#+end_example

Similar results for other methods.

# @@latex:any arbitrary LaTeX code@@


* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [12pt]
#+OPTIONS:   title:t author:t toc:nil todo:nil
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t
#+LATEX_HEADER: %
#+LATEX_HEADER: %%%% specifications %%%%
#+LATEX_HEADER: %
** Latex command
#+LATEX_HEADER: \usepackage{ifthen}
#+LATEX_HEADER: \usepackage{xifthen}
#+LATEX_HEADER: \usepackage{xargs}
#+LATEX_HEADER: \usepackage{xspace}
#+LATEX_HEADER: \newcommand\Rlogo{\textbf{\textsf{R}}\xspace} % 
** Notations

** Code
# Documentation at https://org-babel.readthedocs.io/en/latest/header-args/#results
# :tangle (yes/no/filename) extract source code with org-babel-tangle-file, see http://orgmode.org/manual/Extracting-source-code.html 
# :cache (yes/no)
# :eval (yes/no/never)
# :results (value/output/silent/graphics/raw/latex)
# :export (code/results/none/both)
#+PROPERTY: header-args :session *R* :tangle yes :cache no ## extra argument need to be on the same line as :session *R*
# Code display:
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}
# ## change font size input
# ## #+ATTR_LATEX: :options basicstyle=\ttfamily\scriptsize
# ## change font size output
# ## \RecustomVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\tiny,formatcom = {\color[rgb]{0.5,0,0}}}
** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: \RequirePackage{setspace} % to modify the space between lines - incompatible with footnote in beamer
#+LaTeX_HEADER:\renewcommand{\baselinestretch}{1.1}
#+LATEX_HEADER:\geometry{top=1cm}
#+LATEX_HEADER: \RequirePackage{changepage}

#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
# ## valid and cross symbols
#+LaTeX_HEADER: \RequirePackage{pifont}
#+LaTeX_HEADER: \RequirePackage{relsize}
#+LaTeX_HEADER: \newcommand{\Cross}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{56}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\Valid}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{52}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\CrossR}{ \textcolor{red}{\Cross} }
#+LaTeX_HEADER: \newcommand{\ValidV}{ \textcolor{green}{\Valid} }
# ## warning symbol
#+LaTeX_HEADER: \usepackage{stackengine}
#+LaTeX_HEADER: \usepackage{scalerel}
#+LaTeX_HEADER: \newcommand\Warning[1][3ex]{%
#+LaTeX_HEADER:   \renewcommand\stacktype{L}%
#+LaTeX_HEADER:   \scaleto{\stackon[1.3pt]{\color{red}$\triangle$}{\tiny\bfseries !}}{#1}%
#+LaTeX_HEADER:   \xspace
#+LaTeX_HEADER: }
# # change the color of the links
#+LaTeX_HEADER: \hypersetup{
#+LaTeX_HEADER:  citecolor=[rgb]{0,0.5,0},
#+LaTeX_HEADER:  urlcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER:  linkcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER: }
** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files
#+LATEX_HEADER: \RequirePackage{capt-of} % 
#+LATEX_HEADER: \RequirePackage{caption} % newlines in graphics
** List
#+LATEX_HEADER: \RequirePackage{enumitem} % to be able to convert .eps to .pdf image files
** Color
#+LaTeX_HEADER: \definecolor{light}{rgb}{1, 1, 0.9}
#+LaTeX_HEADER: \definecolor{lightred}{rgb}{1.0, 0.7, 0.7}
#+LaTeX_HEADER: \definecolor{lightblue}{rgb}{0.0, 0.8, 0.8}
#+LaTeX_HEADER: \newcommand{\darkblue}{blue!80!black}
#+LaTeX_HEADER: \newcommand{\darkgreen}{green!50!black}
#+LaTeX_HEADER: \newcommand{\darkred}{red!50!black}
** Box
#+LATEX_HEADER: \usepackage{mdframed}
** Shortcut
#+LATEX_HEADER: \newcommand{\first}{1\textsuperscript{st} }
#+LATEX_HEADER: \newcommand{\second}{2\textsuperscript{nd} }
#+LATEX_HEADER: \newcommand{\third}{3\textsuperscript{rd} }
