#+TITLE: Results simulation study DelayedGSD
#+Author: 

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
# Path
if(Sys.info()["login"] == "bozenne"){
}else if(Sys.info()["login"] == "hpl802"){
  setwd("x:/DelayedGSD/")
}

options(width = 110)

library(data.table)
library(ggplot2)
#+END_SRC

#+RESULTS:


#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Load results
res2stage <- readRDS(file.path("Results-built","res2stage.rds"))
res2stage[, method.char := paste0("method ",method)]
res2stage[, stage.char := factor(stage, 1:2, c("interim","final"))]
res2stage[, truth := ifelse(hypo=="power",0.6,0)]
#+END_SRC

#+RESULTS:

* Rejection rate

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## For each run, create a binary indicator for rejection for efficacy
res2stage.rejection <- res2stage[,.(N = .N, rejection = "efficacy" %in% na.omit(decision)),
                                 by = c("method.char","seed","scenario","missing","binding","fixC","ar","hypo")]

## Average over runs and method within scenario
res2stageS.rejection <- res2stage.rejection[,.(N = .N, rejectionRate = 100*mean(rejection)),
                                            by=c("method.char","scenario","binding","missing","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Power by method (columns) and scenario (rows): \hfill (nominal level 80%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH1 <- dcast(res2stageS.rejection[hypo=="power"],
                      scenario + N + missing + binding + fixC + ar ~ method.char,
                      value.var = "rejectionRate")
print(tablePrintH1, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        1 10000    TRUE    TRUE FALSE 10    81.00    80.74    80.54
        3 10000    TRUE    TRUE FALSE  5    80.53    80.43    80.16
        5 10000    TRUE    TRUE  TRUE 10    79.88    80.34    80.33
        7 10000    TRUE    TRUE  TRUE  5    80.15    80.50    80.18
        9 10000    TRUE   FALSE  TRUE 10    80.46    80.87    81.05
       11 10000    TRUE   FALSE  TRUE  5    80.59    80.86    80.71
       13 10000    TRUE   FALSE FALSE 10    80.50    80.44    80.34
       15 10000    TRUE   FALSE FALSE  5    80.37    80.36    80.06
       17 10000   FALSE    TRUE FALSE  5    80.31    80.28    79.93
#+end_example
\Warning slightly too high power for some scenario

\bigskip

Type 1 error by method (columns) and scenario (rows): \hfill (nominal level 2.5%)
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrintH0 <- dcast(res2stageS.rejection[hypo=="typeI"],
                    scenario + N + missing + binding + fixC + ar ~ method.char,
                    value.var = "rejectionRate")
print(tablePrintH0, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario     N missing binding  fixC ar method 1 method 2 method 3
        2 10000    TRUE    TRUE FALSE 10     2.42     2.48     2.38
        4 10000    TRUE    TRUE FALSE  5     2.40     2.43     2.35
        6 10000    TRUE    TRUE  TRUE 10     2.38     2.31     2.41
        8 10000    TRUE    TRUE  TRUE  5     2.44     2.40     2.51
       10 10000    TRUE   FALSE  TRUE 10     2.20     2.16     2.30
       12 10000    TRUE   FALSE  TRUE  5     2.24     2.32     2.27
       14 10000    TRUE   FALSE FALSE 10     2.53     2.53     2.57
       16 10000    TRUE   FALSE FALSE  5     2.68     2.68     2.66
       18 10000   FALSE    TRUE FALSE  5     2.46     2.44     2.45
#+end_example
Type 1 error slightly below nominal level when fixC is TRUE (as expected?)

\clearpage

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the p-value:
gg.P <- ggplot(res2stage[hypo == "typeI"]) + facet_grid(scenario~method.char)
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P <- gg.P + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P <- gg.P + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P <- gg.P + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P, filename = file.path("report","figures","gg-pvalue-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the null. Each row correspond to a different scenario
[[./figures/gg-pvalue-density.pdf]]

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.P2 <- ggplot(res2stage[hypo == "power"]) + facet_grid(scenario~method.char)
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_ML, fill = "Naive"))
gg.P2 <- gg.P2 + geom_density(alpha=0.25, aes(x = p.value_MUE, fill = "Adjusted"))
gg.P2 <- gg.P2 + labs(fill = "P-value", x = "Estimate", y = "Density")
gg.P2 <- gg.P2 + coord_cartesian(xlim = c(0,0.05))
gg.P2 <- gg.P2 + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))
ggsave(gg.P2, filename = file.path("report","figures","gg-pvalue2-density.pdf"), height = 10, width = 12)
#+END_SRC

#+RESULTS:
: Advarselsbeskeder:
: 1: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`). 
: 2: [1m[22mRemoved 540000 rows containing non-finite values (`stat_density()`).

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and adjusted p-value distribution over all simulations under the alternative. Each row correspond to a different scenario
[[./figures/gg-pvalue2-density.pdf]]

\clearpage

* Conclusion of the trial

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stageS.final <- res2stage[!is.na(statistic) & type != "interim",
                              .(.N,
                                decision.eff = 100*mean((stage == 1)*(decision == "efficacy")),
                                decision.fut = 100*mean((stage == 1)*(decision == "futility")),
                                final.eff = 100*mean((stage == 2)*(decision == "efficacy")),
                                final.fut = 100*mean((stage == 2)*(decision == "futility"))),
                              by = c("scenario","missing","method","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:

Relative frequency of stopping for efficacy/futility at decision/final

- Method 1
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==1], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_1","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.79         5.93     43.21      13.1
 2: 10000    TRUE typeI    TRUE FALSE 10         0.80        71.13      1.62      26.5
 3: 10000    TRUE power    TRUE FALSE  5        35.74         5.98     44.79      13.5
 4: 10000    TRUE typeI    TRUE FALSE  5         0.74        69.32      1.66      28.3
 5: 10000    TRUE power    TRUE  TRUE 10        36.30         6.46     43.58      13.7
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.68        70.96      1.70      26.7
 7: 10000    TRUE power    TRUE  TRUE  5        34.97         5.94     45.18      13.9
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.66        69.04      1.78      28.5
 9: 10000    TRUE power   FALSE  TRUE 10        37.52         6.66     42.94      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.58         0.22      1.62      97.6
11: 10000    TRUE power   FALSE  TRUE  5        35.88         6.44     44.71      13.0
12: 10000    TRUE typeI   FALSE  TRUE  5         0.64         0.11      1.60      97.7
13: 10000    TRUE power   FALSE FALSE 10        38.69         5.93     41.81      13.6
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.12      1.84      97.4
15: 10000    TRUE power   FALSE FALSE  5        36.79         5.71     43.58      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.01      1.93      97.3
17: 10000   FALSE power    TRUE FALSE  5        33.98         5.33     46.33      14.4
18: 10000   FALSE typeI    TRUE FALSE  5         0.74        67.48      1.72      30.1
#+end_example

\clearpage

Method 2:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==2], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_2","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        37.58         6.16     43.16      13.1
 2: 10000    TRUE typeI    TRUE FALSE 10         0.84        71.38      1.64      26.1
 3: 10000    TRUE power    TRUE FALSE  5        35.79         5.98     44.64      13.6
 4: 10000    TRUE typeI    TRUE FALSE  5         0.72        69.10      1.71      28.5
 5: 10000    TRUE power    TRUE  TRUE 10        36.63         5.97     43.71      13.7
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.68        69.88      1.63      27.8
 7: 10000    TRUE power    TRUE  TRUE  5        35.27         5.77     45.23      13.7
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.72        68.32      1.68      29.3
 9: 10000    TRUE power   FALSE  TRUE 10        37.85         6.23     43.02      12.9
10: 10000    TRUE typeI   FALSE  TRUE 10         0.57         0.22      1.59      97.6
11: 10000    TRUE power   FALSE  TRUE  5        36.09         6.19     44.77      13.0
12: 10000    TRUE typeI   FALSE  TRUE  5         0.71         0.07      1.61      97.6
13: 10000    TRUE power   FALSE FALSE 10        38.70         6.09     41.74      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.69         0.12      1.84      97.4
15: 10000    TRUE power   FALSE FALSE  5        36.82         5.75     43.54      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.75         0.01      1.93      97.3
17: 10000   FALSE power    TRUE FALSE  5        33.68         5.17     46.60      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.72        67.42      1.72      30.1
#+end_example

\clearpage

Method 3:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.final[method==3], scenario + N + missing + hypo + binding + fixC + ar ~ method,
                    value.var = c("decision.eff","decision.fut","final.eff","final.fut"))
names(tablePrint) <- gsub("_3","",names(tablePrint),fixed = TRUE)
setkeyv(tablePrint,"scenario")
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC
#+RESULTS:
#+begin_example
        N missing  hypo binding  fixC ar decision.eff decision.fut final.eff final.fut
 1: 10000    TRUE power    TRUE FALSE 10        40.69         6.42     39.85      13.0
 2: 10000    TRUE typeI    TRUE FALSE 10         0.75        68.78      1.63      28.8
 3: 10000    TRUE power    TRUE FALSE  5        36.56         6.28     43.60      13.6
 4: 10000    TRUE typeI    TRUE FALSE  5         0.69        68.41      1.66      29.2
 5: 10000    TRUE power    TRUE  TRUE 10        40.02         5.85     40.31      13.8
 6: 10000    TRUE typeI    TRUE  TRUE 10         0.73        68.77      1.68      28.8
 7: 10000    TRUE power    TRUE  TRUE  5        35.91         5.85     44.27      14.0
 8: 10000    TRUE typeI    TRUE  TRUE  5         0.73        68.07      1.78      29.4
 9: 10000    TRUE power   FALSE  TRUE 10        41.34         6.30     39.71      12.6
10: 10000    TRUE typeI   FALSE  TRUE 10         0.72         0.41      1.58      97.3
11: 10000    TRUE power   FALSE  TRUE  5        36.97         6.33     43.74      13.0
12: 10000    TRUE typeI   FALSE  TRUE  5         0.66         0.14      1.61      97.6
13: 10000    TRUE power   FALSE FALSE 10        41.42         6.12     38.92      13.5
14: 10000    TRUE typeI   FALSE FALSE 10         0.77         0.33      1.80      97.1
15: 10000    TRUE power   FALSE FALSE  5        37.71         6.03     42.35      13.9
16: 10000    TRUE typeI   FALSE FALSE  5         0.73         0.09      1.93      97.2
17: 10000   FALSE power    TRUE FALSE  5        34.66         5.58     45.27      14.5
18: 10000   FALSE typeI    TRUE FALSE  5         0.68        66.54      1.77      31.0
#+end_example

\clearpage

* Bias (True effect: 0.6 under the alternative)

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
true_eff <- 0.6

## For each run, error made by each estimator
res2stage[, truth := c(0,true_eff)[(hypo=="power")+1]]
res2stage.bias <- res2stage[decision %in% c("futility","efficacy"),
                            .(N = .N,
                              bias_MLE = estimate_ML-truth,
                              bias_MUE = estimate_MUE-truth,
                              mbias_MLE = (estimate_ML>truth) - 0.5,
                              mbias_MUE = (estimate_MUE>truth) - 0.5),
                            by = c("method","scenario","seed","missing","binding","fixC","ar","hypo")]
all(res2stage.bias$N==1)

res2stageS.bias <- res2stage.bias[,.(N = .N,
                                     bias_MLE = mean(bias_MLE, na.rm = TRUE),
                                     bias_MUE = mean(bias_MUE, na.rm = TRUE),
                                     mbias_MLE = mean(mbias_MLE, na.rm = TRUE),
                                     mbias_MUE = mean(mbias_MUE, na.rm = TRUE)),
                                  by=c("method","scenario","missing","binding","fixC","ar","hypo")]
#+END_SRC

#+RESULTS:
: [1] TRUE

Bias per estimator and method[fn::e.g. \texttt{biasMLE1} mixed model
estimator (treatment effect), method 1 (boundaries)]:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("bias_MLE","bias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar  biasMLE1  biasMLE2  biasMLE3  biasMUE1  biasMUE2 biasMUE3
 1: power    TRUE    TRUE FALSE 10  0.013450  0.013394  0.014680  0.005983  5.63e-03  0.03373
 2: typeI    TRUE    TRUE FALSE 10 -0.017939 -0.018115 -0.018560 -0.004484 -4.47e-03  0.33763
 3: power    TRUE    TRUE FALSE  5  0.022570  0.022770  0.023584  0.010502  1.10e-02  0.04132
 4: typeI    TRUE    TRUE FALSE  5 -0.030342 -0.030864 -0.030651 -0.011813 -1.21e-02  0.35362
 5: power    TRUE    TRUE  TRUE 10  0.011230  0.011845  0.012615 -0.000735  9.74e-07  0.02991
 6: typeI    TRUE    TRUE  TRUE 10 -0.021697 -0.022020 -0.022198 -0.008040 -8.50e-03  0.33422
 7: power    TRUE    TRUE  TRUE  5  0.022110  0.021929  0.022761  0.008313  8.02e-03  0.03864
 8: typeI    TRUE    TRUE  TRUE  5 -0.033981 -0.034313 -0.034111 -0.014889 -1.48e-02  0.34911
 9: power    TRUE   FALSE  TRUE 10  0.014697  0.014851  0.016346 -0.026607 -2.42e-02  0.03413
10: typeI    TRUE   FALSE  TRUE 10  0.000527  0.000540  0.000909 -0.000583 -5.68e-04  0.00236
11: power    TRUE   FALSE  TRUE  5  0.024100  0.023669  0.024868 -0.023142 -2.20e-02  0.04108
12: typeI    TRUE   FALSE  TRUE  5  0.001262  0.001333  0.001407  0.000569  9.53e-04  0.00170
13: power    TRUE   FALSE FALSE 10  0.014326  0.014160  0.015285 -0.020110 -2.11e-02  0.03260
14: typeI    TRUE   FALSE FALSE 10  0.000186  0.000186  0.000511 -0.000374 -3.84e-04  0.00189
15: power    TRUE   FALSE FALSE  5  0.023657  0.023651  0.024379 -0.017535 -1.77e-02  0.04046
16: typeI    TRUE   FALSE FALSE  5  0.000912  0.000912  0.001008  0.000861  8.59e-04  0.00131
17: power   FALSE    TRUE FALSE  5  0.022836  0.022825  0.023807  0.011971  1.21e-02  0.03889
18: typeI   FALSE    TRUE FALSE  5 -0.029516 -0.029722 -0.029915 -0.011048 -1.14e-02  0.34628
#+end_example
#+LaTeX: \end{adjustwidth}

Median bias [fn::Relative frequency at which the estimate is greater than the truth minus 0.5] per estimator and method:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
tablePrint <- dcast(res2stageS.bias,
                    hypo + scenario + missing + binding + fixC + ar ~ method,
                    value.var = c("mbias_MLE","mbias_MUE"))
setkeyv(tablePrint,"scenario")
names(tablePrint) <- gsub("_","",names(tablePrint),fixed = TRUE)
print(tablePrint[,.SD,.SDcols = setdiff(names(tablePrint),"scenario")], digits = 3)
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing binding  fixC ar mbiasMLE1 mbiasMLE2 mbiasMLE3 mbiasMUE1 mbiasMUE2 mbiasMUE3
 1: power    TRUE    TRUE FALSE 10    0.0261    0.0267    0.0301   -0.0024   -0.0016    0.0319
 2: typeI    TRUE    TRUE FALSE 10   -0.0173   -0.0180   -0.0202    0.0011    0.0007    0.4770
 3: power    TRUE    TRUE FALSE  5    0.0405    0.0400    0.0432   -0.0034   -0.0010    0.0284
 4: typeI    TRUE    TRUE FALSE  5   -0.0330   -0.0332   -0.0345    0.0007    0.0016    0.4746
 5: power    TRUE    TRUE  TRUE 10    0.0168    0.0202    0.0184   -0.0139   -0.0139    0.0238
 6: typeI    TRUE    TRUE  TRUE 10   -0.0313   -0.0322   -0.0335   -0.0063   -0.0060    0.4771
 7: power    TRUE    TRUE  TRUE  5    0.0372    0.0378    0.0380   -0.0055   -0.0093    0.0285
 8: typeI    TRUE    TRUE  TRUE  5   -0.0423   -0.0441   -0.0442   -0.0052   -0.0032    0.4778
 9: power    TRUE   FALSE  TRUE 10    0.0323    0.0312    0.0354   -0.0078   -0.0080    0.0315
10: typeI    TRUE   FALSE  TRUE 10    0.0028    0.0012    0.0028    0.0007   -0.0009    0.0052
11: power    TRUE   FALSE  TRUE  5    0.0475    0.0448    0.0487   -0.0044   -0.0061    0.0347
12: typeI    TRUE   FALSE  TRUE  5    0.0030    0.0014    0.0031    0.0019    0.0007    0.0042
13: power    TRUE   FALSE FALSE 10    0.0326    0.0324    0.0327   -0.0005   -0.0005    0.0286
14: typeI    TRUE   FALSE FALSE 10   -0.0009   -0.0009   -0.0009   -0.0020   -0.0020    0.0014
15: power    TRUE   FALSE FALSE  5    0.0462    0.0464    0.0489   -0.0018   -0.0017    0.0294
16: typeI    TRUE   FALSE FALSE  5   -0.0009   -0.0009   -0.0009   -0.0009   -0.0009    0.0003
17: power   FALSE    TRUE FALSE  5    0.0383    0.0378    0.0400   -0.0026   -0.0008    0.0259
18: typeI   FALSE    TRUE FALSE  5   -0.0329   -0.0336   -0.0353    0.0044    0.0031    0.4783
#+end_example

#+LaTeX: \end{adjustwidth}

\clearpage

* Distribution of the estimates

Distribution of the estimates:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Restrict to one observation per run, when we stop:
dt.estimate <- res2stage[decision %in% c("futility","efficacy") & !is.na(statistic),]
## Distribution of the estimate:
gg.E <- ggplot(dt.estimate) + facet_grid(scenario~method.char)
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_ML, fill = "Naive"))
gg.E <- gg.E + geom_density(alpha=0.25, aes(x = estimate_MUE, fill = "Median unbiased"))
gg.E <- gg.E + labs(fill = "Estimator", x = "Estimate", y = "Density")
gg.E <- gg.E + geom_vline(aes(xintercept = truth), color = "purple")
gg.E <- gg.E + theme(text = element_text(size=15), 
                     axis.line = element_line(linewidth = 1.25),
                     axis.ticks = element_line(linewidth = 2),
                     axis.ticks.length=unit(.25, "cm"),
                     legend.key.size = unit(3,"line"))

ggsave(gg.E, filename = file.path("report","figures","gg-estimate-density.pdf"), height = 10, width = 12)
ggsave(gg.E %+% dt.estimate[scenario == 1] + theme(legend.position = "bottom"),
       filename = file.path("report","figures","gg-estimate-density-scenario1.pdf"), width = 10)
#+END_SRC

#+RESULTS:
: [1m[22mSaving 10 x 6.38 in image

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Naive and Median unbiased estimate distribution over all simulations. Each row correspond to a different scenario
[[./figures/gg-estimate-density.pdf]]

#+ATTR_LaTeX: :width \textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Same but specific to scenario 1
[[./figures/gg-estimate-density-scenario1.pdf]]

\clearpage

Distribution of the median unbiased estimate conditional to the stage:
#+BEGIN_SRC R :exports none :results output :session *R* :cache no
gg.estimateC <- ggplot(dt.estimate, aes(x = estimate_MUE, fill = stage.char, group = stage.char))
gg.estimateC <- gg.estimateC + geom_density(alpha=0.25) + facet_grid(scenario~method.char)
gg.estimateC <- gg.estimateC + labs(x = "estimate", fill = "stage", y = "Density")
gg.estimateC <- gg.estimateC + theme(text = element_text(size=15), 
                                     axis.line = element_line(linewidth = 1.25),
                                     axis.ticks = element_line(linewidth = 2),
                                     axis.ticks.length=unit(.25, "cm"),
                                     legend.key.size = unit(3,"line"))

ggsave(gg.estimateC, filename = file.path("report","figures","gg-estimateC-density.pdf"),
       height = 10, width = 12)
#+END_SRC

#+RESULTS:

#+ATTR_LaTeX: :width 1\textwidth :options trim={0 0 0 0} :placement [!h]
#+CAPTION: Median unbiased estimate distribution conditional to the stage. Each row correspond to a different scenario.
[[./figures/gg-estimateC-density.pdf]]

\clearpage

* Special cases

Reason for stopping (first 4) or continuing the trial (last):
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 1:8,reason],
       method = res2stage[scenario %in% 1:8,method],
       scenario = res2stage[scenario %in% 1:8,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    1    2    3    4    5    6    7    8
reason                 method                                                 
decreasing information 1                  0    0    1    1    0    0    0    0
                       2                  0    0    1    1    0    0    0    0
                       3                  0    0    1    1    0    0    0    0
efficacy               1               3739   81 3573   74 3684   82 3536   80
                       2               3726   84 3578   72 3717   85 3572   85
                       3               4165  108 3721   82 4087  110 3650   92
futility               1                632 7111  599 6932  589 7079  555 6890
                       2                647 7137  599 6910  541 6969  532 6819
                       3                545 6844  563 6828  497 6837  526 6788
Imax reached           1                  1    1    0    0    3    3    0    0
                       2                  1    1    0    0    2    2    0    0
                       3                  1    1    0    0    3    3    0    0
no boundary crossed    1               5628 2807 5828 2994 5724 2836 5909 3030
                       2               5626 2778 5823 3018 5740 2944 5896 3096
                       3               5289 3047 5716 3090 5413 3050 5824 3120
#+end_example

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
ftable(reason = res2stage[scenario %in% 9:16,reason],
       method = res2stage[scenario %in% 9:16,method],
       scenario = res2stage[scenario %in% 9:16,scenario])
#+END_SRC

#+RESULTS:
#+begin_example
                              scenario    9   10   11   12   13   14   15   16
reason                 method                                                 
decreasing information 1                  0    0    2    0    0    0    0    0
                       2                  0    0    1    0    0    0    0    0
                       3                  0    0    1    0    0    0    0    0
efficacy               1               3791   79 3625   75 3849   81 3680   76
                       2               3826   78 3651   78 3850   81 3683   76
                       3               4220  112 3756   80 4238  110 3831   82
futility               1                626 7129  607 6962  613 7122  570 6945
                       2                581 7054  577 6912  629 7164  574 6950
                       3                543 6932  574 6866  516 6890  543 6842
Imax reached           1                  1    1    0    0    0    0    0    0
                       2                  1    1    0    0    0    0    0    0
                       3                  1    1    0    0    0    0    0    0
no boundary crossed    1               5582 2791 5768 2963 5538 2797 5750 2979
                       2               5592 2867 5772 3010 5521 2755 5743 2974
                       3               5236 2955 5670 3054 5246 3000 5626 3076
#+end_example

\clearpage

* Reversal probability

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
## Indicator of reversal
res2stage.reversal <- res2stage[, .(N = .N,
                                    futility2efficacy = (stage[1] == 1)*(reason[1] == "futility")*(stage[2] == 1)*(decision[2] == "efficacy"),
                                    efficacy2futility = (stage[1] == 1)*(reason[1] == "efficacy")*(stage[2] == 1)*(decision[2] == "futility")),
                                by = c("method","seed","missing","binding","fixC","ar","hypo")]
res2stage.reversal[is.na(futility2efficacy), futility2efficacy := 0]
res2stage.reversal[is.na(efficacy2futility), efficacy2futility := 0]
#+END_SRC

#+RESULTS:

Percentage of time we observe a reversal:
#+LaTeX: \begin{adjustwidth}{-1cm}{-1cm}
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.reversal <- res2stage.reversal[, .(N = .N,
                                              fu2eff = 100*mean(futility2efficacy),
                                              eff2fu = 100*mean(efficacy2futility)),
                                          by = c("method","missing","binding","fixC","ar","hypo")]
tablePrint <- dcast(res2stageS.reversal, N + hypo + missing + ar + binding + fixC ~ method, value.var = c("fu2eff","eff2fu"))
print(tablePrint)
#+END_SRC

#+RESULTS:
#+begin_example
        N  hypo missing ar binding  fixC fu2eff_1 fu2eff_2 fu2eff_3 eff2fu_1 eff2fu_2 eff2fu_3
 1: 10000 power   FALSE  5    TRUE FALSE     0.06     0.07     0.01     0.04     0.04     0.63
 2: 10000 power    TRUE  5   FALSE FALSE     0.03     0.03     0.00     0.04     0.04     0.60
 3: 10000 power    TRUE  5   FALSE  TRUE     0.03     0.02     0.03     0.40     0.44     0.62
 4: 10000 power    TRUE  5    TRUE FALSE     0.08     0.06     0.02     0.07     0.05     0.67
 5: 10000 power    TRUE  5    TRUE  TRUE     0.01     0.01     0.01     0.40     0.46     0.60
 6: 10000 power    TRUE 10   FALSE FALSE     0.41     0.42     0.08     0.21     0.22     1.04
 7: 10000 power    TRUE 10   FALSE  TRUE     0.16     0.16     0.10     0.56     0.57     0.97
 8: 10000 power    TRUE 10    TRUE FALSE     0.57     0.55     0.11     0.17     0.23     1.07
 9: 10000 power    TRUE 10    TRUE  TRUE     0.16     0.14     0.11     0.73     0.70     0.99
10: 10000 typeI   FALSE  5    TRUE FALSE     0.01     0.03     0.00     0.01     0.03     0.12
11: 10000 typeI    TRUE  5   FALSE FALSE     0.00     0.00     0.00     0.01     0.01     0.09
12: 10000 typeI    TRUE  5   FALSE  TRUE     0.00     0.00     0.00     0.11     0.07     0.14
13: 10000 typeI    TRUE  5    TRUE FALSE     0.02     0.02     0.00     0.02     0.02     0.13
14: 10000 typeI    TRUE  5    TRUE  TRUE     0.00     0.00     0.00     0.14     0.13     0.19
15: 10000 typeI    TRUE 10   FALSE FALSE     0.00     0.00     0.00     0.12     0.12     0.33
16: 10000 typeI    TRUE 10   FALSE  TRUE     0.00     0.00     0.00     0.21     0.21     0.40
17: 10000 typeI    TRUE 10    TRUE FALSE     0.10     0.10     0.01     0.11     0.10     0.34
18: 10000 typeI    TRUE 10    TRUE  TRUE     0.03     0.02     0.00     0.19     0.20     0.39
#+end_example

#+LaTeX: \end{adjustwidth}


\clearpage

* Frequency mismatch

** p-value / boundaries

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(p.value_MUE<0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchFU, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC   method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE 0.00000000        0        0
 2: power    TRUE  5   FALSE FALSE 0.00000000        0        0
 3: power    TRUE  5   FALSE  TRUE 0.05151984        0        0
 4: power    TRUE  5    TRUE FALSE 0.00000000        0        0
 5: power    TRUE  5    TRUE  TRUE 0.00000000        0        0
 6: power    TRUE 10   FALSE FALSE 0.00000000        0        0
 7: power    TRUE 10   FALSE  TRUE 0.00000000        0        0
 8: power    TRUE 10    TRUE FALSE 0.00000000        0        0
 9: power    TRUE 10    TRUE  TRUE 0.00000000        0        0
10: typeI   FALSE  5    TRUE FALSE 0.00000000        0        0
11: typeI    TRUE  5   FALSE FALSE 0.00000000        0        0
12: typeI    TRUE  5   FALSE  TRUE 0.00000000        0        0
13: typeI    TRUE  5    TRUE FALSE 0.00000000        0        0
14: typeI    TRUE  5    TRUE  TRUE 0.00000000        0        0
15: typeI    TRUE 10   FALSE FALSE 0.00000000        0        0
16: typeI    TRUE 10   FALSE  TRUE 0.00000000        0        0
17: typeI    TRUE 10    TRUE FALSE 0.00000000        0        0
18: typeI    TRUE 10    TRUE  TRUE 0.00000000        0        0
#+end_example

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage[decision=="futility" & p.value_MUE < 0.025]
#+END_SRC

#+RESULTS:
:    scenario missing binding fixC ar  hypo method stage     type statistic estimate_ML     se_ML p.value_ML
: 1:       11    TRUE   FALSE TRUE  5 power      1     1 decision  1.926652   0.4446784 0.2308037 0.02723951
:        lower_ML  upper_ML estimate_MUE p.value_MUE lower_MUE upper_MUE     info    infoPC info.pred
: 1: -0.008571934 0.8979286    0.9062277           0 0.5600802  1.367893 18.77217 0.8060306        NA
:    infoPC.pred uk lk       ck decision                 reason time.interim      seed nX1.interim nX2.interim
: 1:          NA NA NA 1.959964 futility decreasing information          247 187033903         312         278
:    nX3.interim method.char stage.char truth
: 1:         253    method 1    interim   0.6

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(p.value_MUE>0.025)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchEFF, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2   method 3
 1: power   FALSE  5    TRUE FALSE        0        0 0.01251095
 2: power    TRUE  5   FALSE FALSE        0        0 0.00000000
 3: power    TRUE  5   FALSE  TRUE        0        0 0.03717012
 4: power    TRUE  5    TRUE FALSE        0        0 0.02495010
 5: power    TRUE  5    TRUE  TRUE        0        0 0.01247194
 6: power    TRUE 10   FALSE FALSE        0        0 0.09957680
 7: power    TRUE 10   FALSE  TRUE        0        0 0.12338063
 8: power    TRUE 10    TRUE FALSE        0        0 0.13657810
 9: power    TRUE 10    TRUE  TRUE        0        0 0.13693514
10: typeI   FALSE  5    TRUE FALSE        0        0 0.00000000
11: typeI    TRUE  5   FALSE FALSE        0        0 0.00000000
12: typeI    TRUE  5   FALSE  TRUE        0        0 0.00000000
13: typeI    TRUE  5    TRUE FALSE        0        0 0.00000000
14: typeI    TRUE  5    TRUE  TRUE        0        0 0.00000000
15: typeI    TRUE 10   FALSE FALSE        0        0 0.00000000
16: typeI    TRUE 10   FALSE  TRUE        0        0 0.00000000
17: typeI    TRUE 10    TRUE FALSE        0        0 0.42016807
18: typeI    TRUE 10    TRUE  TRUE        0        0 0.00000000
#+end_example

\clearpage

** confidence intervals

When concluding for futility:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchFU <- res2stage[decision=="futility",.(N = .N, mismatch = 100*mean(lower_MUE>0)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchFU, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC   method 1  method 2    method 3
 1: power   FALSE  5    TRUE FALSE 0.00000000 0.0000000 23.01943199
 2: power    TRUE  5   FALSE FALSE 0.00000000 0.0000000 28.73620863
 3: power    TRUE  5   FALSE  TRUE 0.05151984 0.0522466 31.67444272
 4: power    TRUE  5    TRUE FALSE 0.00000000 0.0000000 26.81451613
 5: power    TRUE  5    TRUE  TRUE 0.00000000 0.0000000 25.22704339
 6: power    TRUE 10   FALSE FALSE 0.00000000 0.0000000 30.21363174
 7: power    TRUE 10   FALSE  TRUE 0.00000000 0.0000000 32.34828496
 8: power    TRUE 10    TRUE FALSE 0.00000000 0.0000000 26.77286742
 9: power    TRUE 10    TRUE  TRUE 0.00000000 0.0000000 23.89425521
10: typeI   FALSE  5    TRUE FALSE 0.00000000 0.0000000 37.21168631
11: typeI    TRUE  5   FALSE FALSE 0.00000000 0.0000000  0.09245942
12: typeI    TRUE  5   FALSE  TRUE 0.00000000 0.0000000  0.14325182
13: typeI    TRUE  5    TRUE FALSE 0.00000000 0.0000000 38.98617512
14: typeI    TRUE  5    TRUE  TRUE 0.00000000 0.0000000 37.60385681
15: typeI    TRUE 10   FALSE FALSE 0.00000000 0.0000000  0.33870471
16: typeI    TRUE 10   FALSE  TRUE 0.00000000 0.0000000  0.40941658
17: typeI    TRUE 10    TRUE FALSE 0.00000000 0.0000000 39.08010654
18: typeI    TRUE 10    TRUE  TRUE 0.00000000 0.0000000 38.27236397
#+end_example

I think the issues arise du to special cases, e.g. decreasing
information:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage[decision=="futility" & lower_MUE>0,.(scenario,method,stage,type,infoPC,statistic,p.value_ML,p.value_MUE,reason)]
#+END_SRC

#+RESULTS:
#+begin_example
       scenario method stage     type    infoPC   statistic p.value_ML p.value_MUE reason
    1:        1      3     1 decision 0.7824309  0.28421199  0.3881647           1   <NA>
    2:        1      3     1 decision 0.7666352  1.04717514  0.1476832           1   <NA>
    3:        1      3     1 decision 0.7579962  1.27252200  0.1017937           1   <NA>
    4:        1      3     1 decision 0.6618865 -0.05085629  0.5202730           1   <NA>
    5:        1      3     1 decision 0.7633615  0.92796579  0.1768639           1   <NA>
   ---                                                                                   
23623:       18      3     1 decision 0.6677419 -0.27834685  0.6095782           1   <NA>
23624:       18      3     1 decision 0.7088555  0.28091724  0.3894346           1   <NA>
23625:       18      3     1 decision 0.6987680  0.24241958  0.4042675           1   <NA>
23626:       18      3     1 decision 0.6306057 -0.14797636  0.5587942           1   <NA>
23627:       18      3     1 decision 0.6098252 -0.44765653  0.6727220           1   <NA>
#+end_example

\clearpage

When concluding for efficacy:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.mismatchEFF <- res2stage[decision=="efficacy",.(N = .N, mismatch = 100*mean(lower_MUE<0)),
                                  by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.mismatchEFF, hypo + missing + ar + binding + fixC ~ method.char, value.var = "mismatch")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE        0        0        0
 2: power    TRUE  5   FALSE FALSE        0        0        0
 3: power    TRUE  5   FALSE  TRUE        0        0        0
 4: power    TRUE  5    TRUE FALSE        0        0        0
 5: power    TRUE  5    TRUE  TRUE        0        0        0
 6: power    TRUE 10   FALSE FALSE        0        0        0
 7: power    TRUE 10   FALSE  TRUE        0        0        0
 8: power    TRUE 10    TRUE FALSE        0        0        0
 9: power    TRUE 10    TRUE  TRUE        0        0        0
10: typeI   FALSE  5    TRUE FALSE        0        0        0
11: typeI    TRUE  5   FALSE FALSE        0        0        0
12: typeI    TRUE  5   FALSE  TRUE        0        0        0
13: typeI    TRUE  5    TRUE FALSE        0        0        0
14: typeI    TRUE  5    TRUE  TRUE        0        0        0
15: typeI    TRUE 10   FALSE FALSE        0        0        0
16: typeI    TRUE 10   FALSE  TRUE        0        0        0
17: typeI    TRUE 10    TRUE FALSE        0        0        0
18: typeI    TRUE 10    TRUE  TRUE        0        0        0
#+end_example

\clearpage

* Coverage

#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.coverage <- res2stage[decision %in% c("futility","efficacy"),
                                .(N = .N,
                                  coverage = 100*mean( (lower_MUE <= truth) & (truth <= upper_MUE) )),
                                by = c("method.char","missing","binding","fixC","ar","hypo")]
dcast(res2stage.coverage, hypo + missing + ar + binding + fixC ~ method.char, value.var = "coverage")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC method 1 method 2 method 3
 1: power   FALSE  5    TRUE FALSE    94.79    94.82    97.39
 2: power    TRUE  5   FALSE FALSE    96.10    96.10    95.87
 3: power    TRUE  5   FALSE  TRUE    96.83    96.83    96.24
 4: power    TRUE  5    TRUE FALSE    94.73    94.64    97.58
 5: power    TRUE  5    TRUE  TRUE    95.47    95.37    97.58
 6: power    TRUE 10   FALSE FALSE    96.16    96.16    95.79
 7: power    TRUE 10   FALSE  TRUE    97.06    97.05    96.08
 8: power    TRUE 10    TRUE FALSE    94.84    94.87    97.61
 9: power    TRUE 10    TRUE  TRUE    96.04    95.97    97.75
10: typeI   FALSE  5    TRUE FALSE    95.14    95.20    61.23
11: typeI    TRUE  5   FALSE FALSE    94.87    94.87    95.39
12: typeI    TRUE  5   FALSE  TRUE    95.32    95.32    95.82
13: typeI    TRUE  5    TRUE FALSE    94.82    94.78    59.58
14: typeI    TRUE  5    TRUE  TRUE    95.08    95.26    60.83
15: typeI    TRUE 10   FALSE FALSE    95.02    95.02    95.89
16: typeI    TRUE 10   FALSE  TRUE    95.36    95.48    96.14
17: typeI    TRUE 10    TRUE FALSE    95.16    95.13    59.47
18: typeI    TRUE 10    TRUE  TRUE    95.09    95.25    60.24
#+end_example

Average width of the confidence intervals (ratio width(MUE) and width(ML))
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stage.width <- res2stage[decision %in% c("futility","efficacy"),
                             .(N = .N,
                               width.naive = mean(upper_ML-lower_ML),
                               width.MUE = mean(upper_MUE-lower_MUE)),
                             by = c("method.char","missing","binding","fixC","ar","hypo")]
res2stage.width[, width.ratio := width.MUE/width.naive]
dcast(res2stage.width, hypo + missing + ar + binding + fixC ~ method.char, value.var = "width.ratio")
#+END_SRC

#+RESULTS:
#+begin_example
     hypo missing ar binding  fixC  method 1  method 2  method 3
 1: power   FALSE  5    TRUE FALSE 1.0517981 1.0518767 1.0456831
 2: power    TRUE  5   FALSE FALSE 1.1086380 1.1091043 1.0293144
 3: power    TRUE  5   FALSE  TRUE 1.1210257 1.1176364 1.0292488
 4: power    TRUE  5    TRUE FALSE 1.0513085 1.0512712 1.0438805
 5: power    TRUE  5    TRUE  TRUE 1.0580866 1.0574475 1.0457135
 6: power    TRUE 10   FALSE FALSE 1.1151680 1.1168553 1.0329647
 7: power    TRUE 10   FALSE  TRUE 1.1340339 1.1293565 1.0334526
 8: power    TRUE 10    TRUE FALSE 1.0624494 1.0627077 1.0517242
 9: power    TRUE 10    TRUE  TRUE 1.0771965 1.0764889 1.0537081
10: typeI   FALSE  5    TRUE FALSE 1.0431774 1.0434979 0.9646210
11: typeI    TRUE  5   FALSE FALSE 0.9996117 0.9996025 1.0188028
12: typeI    TRUE  5   FALSE  TRUE 1.0002185 0.9999899 1.0182202
13: typeI    TRUE  5    TRUE FALSE 1.0415857 1.0418675 0.9618266
14: typeI    TRUE  5    TRUE  TRUE 1.0430132 1.0432528 0.9634839
15: typeI    TRUE 10   FALSE FALSE 0.9958528 0.9963447 1.0475576
16: typeI    TRUE 10   FALSE  TRUE 0.9964982 0.9968431 1.0469409
17: typeI    TRUE 10    TRUE FALSE 1.0459447 1.0458740 0.9669650
18: typeI    TRUE 10    TRUE  TRUE 1.0470415 1.0481619 0.9674260
#+end_example

* Percentage of missing values

#+BEGIN_SRC R :exports none :results output :session *R* :cache no
res2stage.nXinterim <- res2stage[,.(N = .N, nX1 = unique(nX1.interim), nX2 = unique(nX2.interim), nX3 = unique(nX3.interim)),
                                 by = c("method","missing","ar","seed","binding","fixC","hypo")]
all(res2stage.nXinterim$N==3)

res2stageS.nXinterim <- res2stage.nXinterim[, .(N = .N,
                                                pc.all = 100*mean(nX3/nX1),
                                                pc.missing3 = 100*mean(nX2/nX1-nX3/nX1),
                                                pc.missing23 = 100*mean(1-nX2/nX1)),
                                            by = c("method","missing","ar","hypo","fixC","binding")]

setkeyv(res2stageS.nXinterim,"ar")
#+END_SRC

#+RESULTS:
: [1] TRUE

Here only for method 1 - values are very similar between different
methods:
- =pc.all= percentage of observations with full data
- =pc.missing3= percentage of observations missing the final outcome
  but with intermediate outcome value and baseline.
- =pc.missing23= percentage of observations with only baseline value
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
res2stageS.nXinterim[method==1]
#+END_SRC

#+RESULTS:
#+begin_example
    method missing ar  hypo  fixC binding     N   pc.all pc.missing3 pc.missing23
 1:      1    TRUE  5 power FALSE    TRUE 10000 79.52088    9.591086    10.888036
 2:      1    TRUE  5 typeI FALSE    TRUE 10000 79.52088    9.591086    10.888036
 3:      1    TRUE  5 power  TRUE    TRUE 10000 79.43825    9.534797    11.026951
 4:      1    TRUE  5 typeI  TRUE    TRUE 10000 79.43825    9.534797    11.026951
 5:      1    TRUE  5 power  TRUE   FALSE 10000 79.71446    9.433917    10.851622
 6:      1    TRUE  5 typeI  TRUE   FALSE 10000 79.71446    9.433917    10.851622
 7:      1    TRUE  5 power FALSE   FALSE 10000 79.64470    9.441772    10.913523
 8:      1    TRUE  5 typeI FALSE   FALSE 10000 79.64470    9.441772    10.913523
 9:      1   FALSE  5 power FALSE    TRUE 10000 87.78863    6.090240     6.121126
10:      1   FALSE  5 typeI FALSE    TRUE 10000 87.78863    6.090240     6.121126
11:      1    TRUE 10 power FALSE    TRUE 10000 71.59741   13.353880    15.048710
12:      1    TRUE 10 typeI FALSE    TRUE 10000 71.59741   13.353880    15.048710
13:      1    TRUE 10 power  TRUE    TRUE 10000 71.52007   13.283805    15.196121
14:      1    TRUE 10 typeI  TRUE    TRUE 10000 71.52007   13.283805    15.196121
15:      1    TRUE 10 power  TRUE   FALSE 10000 71.85535   13.150351    14.994302
16:      1    TRUE 10 typeI  TRUE   FALSE 10000 71.85535   13.150351    14.994302
17:      1    TRUE 10 power FALSE   FALSE 10000 71.79650   13.161615    15.041889
18:      1    TRUE 10 typeI FALSE   FALSE 10000 71.79650   13.161615    15.041889
#+end_example

\clearpage

* Information

Percentage of information for method 1[fn::average over the reached stages]:
#+BEGIN_SRC R :exports results :results output :session *R* :cache no
dt.info <- res2stage[,.(.N, infoPC = 100*mean(infoPC, na.rm = TRUE)),
                     by = c("type","method.char","scenario","missing","binding","fixC","ar","hypo")]
dt.info[, type := factor(type, c("interim","decision","final"))]
tablePrint <- dcast(dt.info[method.char == "method 1"],
                    scenario + missing + binding + fixC + ar ~ type,
                    value.var = "infoPC")
print(tablePrint, row.names = FALSE)
#+END_SRC

#+RESULTS:
#+begin_example
 scenario missing binding  fixC ar  interim decision     final
        1    TRUE    TRUE FALSE 10 54.63712 63.30785 102.69691
        2    TRUE    TRUE FALSE 10 54.63712 69.02038 102.36588
        3    TRUE    TRUE FALSE  5 53.26864 57.38961 102.73604
        4    TRUE    TRUE FALSE  5 53.26864 60.23654 102.37416
        5    TRUE    TRUE  TRUE 10 54.54123 63.05937 102.77265
        6    TRUE    TRUE  TRUE 10 54.54123 68.88736 102.17698
        7    TRUE    TRUE  TRUE  5 53.17921 57.21825 102.79102
        8    TRUE    TRUE  TRUE  5 53.17921 60.11059 102.19535
        9    TRUE   FALSE  TRUE 10 54.51228 63.16652 102.57765
       10    TRUE   FALSE  TRUE 10 54.51228 54.66275 103.10637
       11    TRUE   FALSE  TRUE  5 53.17446 57.28087 102.64128
       12    TRUE   FALSE  TRUE  5 53.17446 53.24147 103.11025
       13    TRUE   FALSE FALSE 10 54.50012 63.25117 102.53821
       14    TRUE   FALSE FALSE 10 54.50012 54.65069 103.12700
       15    TRUE   FALSE FALSE  5 53.15854 57.29674 102.62539
       16    TRUE   FALSE FALSE  5 53.15854 53.22811 103.12516
       17   FALSE    TRUE FALSE  5 52.06840 56.28978  99.96969
       18   FALSE    TRUE FALSE  5 52.06840 59.42197  99.62860
#+end_example

Similar results for other methods.

# @@latex:any arbitrary LaTeX code@@


* CONFIG :noexport:
# #+LaTeX_HEADER:\affil{Department of Biostatistics, University of Copenhagen, Copenhagen, Denmark}
#+LANGUAGE:  en
#+LaTeX_CLASS: org-article
#+LaTeX_CLASS_OPTIONS: [12pt]
#+OPTIONS:   title:t author:t toc:nil todo:nil
#+OPTIONS:   H:3 num:t 
#+OPTIONS:   TeX:t LaTeX:t
#+LATEX_HEADER: %
#+LATEX_HEADER: %%%% specifications %%%%
#+LATEX_HEADER: %
** Latex command
#+LATEX_HEADER: \usepackage{ifthen}
#+LATEX_HEADER: \usepackage{xifthen}
#+LATEX_HEADER: \usepackage{xargs}
#+LATEX_HEADER: \usepackage{xspace}
#+LATEX_HEADER: \newcommand\Rlogo{\textbf{\textsf{R}}\xspace} % 
** Notations

** Code
# Documentation at https://org-babel.readthedocs.io/en/latest/header-args/#results
# :tangle (yes/no/filename) extract source code with org-babel-tangle-file, see http://orgmode.org/manual/Extracting-source-code.html 
# :cache (yes/no)
# :eval (yes/no/never)
# :results (value/output/silent/graphics/raw/latex)
# :export (code/results/none/both)
#+PROPERTY: header-args :session *R* :tangle yes :cache no ## extra argument need to be on the same line as :session *R*
# Code display:
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\small,formatcom = {\color[rgb]{0.5,0,0}}}
# ## change font size input
# ## #+ATTR_LATEX: :options basicstyle=\ttfamily\scriptsize
# ## change font size output
# ## \RecustomVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\tiny,formatcom = {\color[rgb]{0.5,0,0}}}
** Display 
#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
#+LATEX_HEADER: \RequirePackage{setspace} % to modify the space between lines - incompatible with footnote in beamer
#+LaTeX_HEADER:\renewcommand{\baselinestretch}{1.1}
#+LATEX_HEADER:\geometry{top=1cm}
#+LATEX_HEADER: \RequirePackage{changepage}

#+LATEX_HEADER: \RequirePackage{colortbl} % arrayrulecolor to mix colors
# ## valid and cross symbols
#+LaTeX_HEADER: \RequirePackage{pifont}
#+LaTeX_HEADER: \RequirePackage{relsize}
#+LaTeX_HEADER: \newcommand{\Cross}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{56}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\Valid}{{\raisebox{-0.5ex}%
#+LaTeX_HEADER:		{\relsize{1.5}\ding{52}}}\hspace{1pt} }
#+LaTeX_HEADER: \newcommand{\CrossR}{ \textcolor{red}{\Cross} }
#+LaTeX_HEADER: \newcommand{\ValidV}{ \textcolor{green}{\Valid} }
# ## warning symbol
#+LaTeX_HEADER: \usepackage{stackengine}
#+LaTeX_HEADER: \usepackage{scalerel}
#+LaTeX_HEADER: \newcommand\Warning[1][3ex]{%
#+LaTeX_HEADER:   \renewcommand\stacktype{L}%
#+LaTeX_HEADER:   \scaleto{\stackon[1.3pt]{\color{red}$\triangle$}{\tiny\bfseries !}}{#1}%
#+LaTeX_HEADER:   \xspace
#+LaTeX_HEADER: }
# # change the color of the links
#+LaTeX_HEADER: \hypersetup{
#+LaTeX_HEADER:  citecolor=[rgb]{0,0.5,0},
#+LaTeX_HEADER:  urlcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER:  linkcolor=[rgb]{0,0,0.5},
#+LaTeX_HEADER: }
** Image
#+LATEX_HEADER: \RequirePackage{epstopdf} % to be able to convert .eps to .pdf image files
#+LATEX_HEADER: \RequirePackage{capt-of} % 
#+LATEX_HEADER: \RequirePackage{caption} % newlines in graphics
** List
#+LATEX_HEADER: \RequirePackage{enumitem} % to be able to convert .eps to .pdf image files
** Color
#+LaTeX_HEADER: \definecolor{light}{rgb}{1, 1, 0.9}
#+LaTeX_HEADER: \definecolor{lightred}{rgb}{1.0, 0.7, 0.7}
#+LaTeX_HEADER: \definecolor{lightblue}{rgb}{0.0, 0.8, 0.8}
#+LaTeX_HEADER: \newcommand{\darkblue}{blue!80!black}
#+LaTeX_HEADER: \newcommand{\darkgreen}{green!50!black}
#+LaTeX_HEADER: \newcommand{\darkred}{red!50!black}
** Box
#+LATEX_HEADER: \usepackage{mdframed}
** Shortcut
#+LATEX_HEADER: \newcommand{\first}{1\textsuperscript{st} }
#+LATEX_HEADER: \newcommand{\second}{2\textsuperscript{nd} }
#+LATEX_HEADER: \newcommand{\third}{3\textsuperscript{rd} }
