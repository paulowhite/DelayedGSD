% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CalcBoundaries.R
\name{CalcBoundaries}
\alias{CalcBoundaries}
\title{Calculate boundaries for a group sequential design with delayed endpoints}
\usage{
CalcBoundaries(
  kMax = 2,
  sided = 1,
  alpha = 0.025,
  beta = 0.2,
  InfoR.i = c(0.5, 1),
  gammaA = 2,
  gammaB = 2,
  method = 1,
  cNotBelowFixedc = FALSE,
  delta = 1.5,
  InfoR.d = 0.55,
  bindingFutility = TRUE,
  n = NULL,
  trace = TRUE
)
}
\arguments{
\item{kMax}{max number of analyses (including final)}

\item{sided}{one or two-sided}

\item{alpha}{type I error}

\item{beta}{type II error}

\item{InfoR.i}{planned or observed information rates at interim analysis, including the final analysis.}

\item{gammaA}{rho parameter for alpha error spending function}

\item{gammaB}{rho parameter for beta error spending function}

\item{method}{use method 1 or 2 from paper H&J}

\item{cNotBelowFixedc}{whether the value c at the decision analysis can be below that of a fixed sample test (H & J page 10)}

\item{delta}{effect that the study is powered for}

\item{InfoR.d}{(expected) information rate at each decision analysis (i.e. when stopping at an interim analysis). Should not include the final analysis.}

\item{bindingFutility}{whether the futility stopping rule is binding}

\item{n}{planned sample size in each group. Optional argument.}

\item{trace}{whether to print some messages}
}
\description{
Calculate boundaries (interim and decision) for a group sequential design with delayed endpoints based on planned and/or observed information using an error spending approach
}
\examples{
myBound <- CalcBoundaries(kMax=2,
              sided=1,
              alpha=0.025,  
              beta=0.2,  
              InfoR.i=c(0.5,1),
              gammaA=2,
              gammaB=2,
              method=1,
              cNotBelowFixedc=TRUE,
              delta=1.5,
              InfoR.d=0.55)
myBound
plot(myBound)

## to reproduce bounds from CJ DSBS course slide 106
myBound <- CalcBoundaries(kMax=3,
              sided=1,
              alpha=0.025,  
              beta=0.1,  
              InfoR.i=c(3.5,6.75,12)/12,
              gammaA=1.345,
              gammaB=1.345,
              method=1, ## has been changed from 2 to 1
              cNotBelowFixedc=TRUE,
              bindingFutility=FALSE,
              delta=1,
              InfoR.d=c(5.5,8.75)/12)
myBound
plot(myBound)
}
